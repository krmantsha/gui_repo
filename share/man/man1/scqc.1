.\" Man page generated from reStructuredText.
.
.TH "SCQC" "1" "Dec 01, 2022" "4.10.1" "SeisComP"
.SH NAME
scqc \- SeisComP Documentation
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.sp
\fBDerives quality control (QC) parameters from waveforms.\fP
.SH DESCRIPTION
.sp
scqc determines waveform quality control (QC) parameters of data streams. The
output parameters are time averaged in terms of waveform quality messages.
In regular intervals report messages are sent containing the short term average
representation of the specific QC parameter for a given time span. Alarm messages
are generated if the short term average (e.g. 90 s) of a QC parameter differs from
the long term average (e.g. 3600 s) by more than a defined threshold.
To avoid an excessive load, QC messages are sent distributed over time. Storing
QC parameters into the database should be avoided by configuring, e.g.,
\fI\%plugins.default.archive.interval\fP as otherwise the database grows
quickly.
.sp
The QC parameters can be interactively observed using scqcv or scmm\&.
.SH TECHNOLOGY
.sp
scqc uses plugins to compute the waveform quality control (QC)
parameters. The plugins can be found in @DATADIR@/plugins/qc. They are loaded
by default or selected by \fI\%configuration setup\fP\&.
.SH QC PARAMETERS
.INDENT 0.0
.INDENT 2.5
[image]
Times describing the data records, e.g., for calculating
\fI\%delay\fP or \fI\%latency\fP\&.
t_{now} may be measured differently depending on the QC parameter..UNINDENT
.UNINDENT
.sp
The following QC parameters are determined when the corresponding plugin is
loaded:
.INDENT 0.0
.TP
.B availability [%]
\fBPlugin:\fP qcplugin_availability
.sp
\fBDescription:\fP Availability of data in the configured time span.
.UNINDENT
.INDENT 0.0
.TP
.B delay [s]
\fBPlugin:\fP qcplugin_delay
.sp
\fBDescription:\fP Time difference between current time, t_{now}, and
time of the last record in the \fISeisComP\fP system (see \fI\%Figure\fP):
.sp
.ce
delay = t_{now} \- t_{2}.
.ce 0
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
Current time is measured during reception of a record and updated in the
report intervals configured for delay.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B gaps (count [counts], interval [s], length [s])
\fBPlugin:\fP qcplugin_gap
.sp
\fBDescription:\fP In case of a data gap between two consecutive records this
parameter delivers the gap interval time (interval), the mean length of the gaps
(length) and the number of the gaps (count) over the configured time interval.
.sp
\fBHINT:\fP
.INDENT 7.0
.INDENT 3.5
gaps interval = 0 for gaps count = 1 but gaps interval > 0
for gaps count > 1. This may be important when evaluating the intervals.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B latency [s]
\fBPlugin:\fP qcplugin_latency
.sp
\fBDescription:\fP Time difference between current time, t_{now}, and
arrival time of the last record (see \fI\%Figure\fP):
.sp
.ce
latency = t_{now} \- t_{arr}.
.ce 0
.sp
\fBNOTE:\fP
.INDENT 7.0
.INDENT 3.5
Current time is measured during reception of a record and updated in the
report intervals configured for latency.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B offset [counts]
\fBPlugin:\fP qcplugin_offset
.sp
\fBDescription:\fP Average value of all samples of a record.
.UNINDENT
.INDENT 0.0
.TP
.B outage [time string]
\fBPlugin:\fP qcplugin_outage
.sp
\fBDescription:\fP Delivers the start and the end time of a data outage (gap).
.UNINDENT
.INDENT 0.0
.TP
.B overlaps (count [counts], interval [s], length [s])
\fBPlugin:\fP qcplugin_overlap
.sp
\fBDescription:\fP In case of overlaps between two consecutive records this parameter
delivers the overlaps interval time (interval), the mean length (length) of the
overlaps and the number of the overlaps (count) over the configured time interval.
.sp
\fBHINT:\fP
.INDENT 7.0
.INDENT 3.5
overlaps interval = 0 for overlaps count = 1 but overlaps interval > 0
for overlaps count > 1. This may be important when evaluating the intervals.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B rms [counts]
\fBPlugin:\fP qcplugin_rms
.sp
\fBDescription:\fP Offset corrected root mean square (RMS) value of a record.
.UNINDENT
.INDENT 0.0
.TP
.B spikes (count [counts], interval [s], amplitude [counts])
\fBPlugin:\fP qcplugin_spike
.sp
\fBDescription:\fP In case of the occurrence of a spike in a record this parameter
delivers the time interval between consecutive spikes (interval), the mean
amplitude of the spike (amplitude) and the number of the spikes (count) over the
configured time interval. Internally a list of spikes is stored (spike time,
spike amplitude); the spike finder algorithm is still preliminary.
.sp
\fBHINT:\fP
.INDENT 7.0
.INDENT 3.5
spikes interval = 0 for spikes count = 1 but spikes interval > 0
for spikes count > 1. This may be important when evaluating the intervals.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B timing [%]
\fBPlugin:\fP qcplugin_timing
.sp
\fBDescription:\fP miniSEED record timing quality (0 \- 100 %) as written into the
miniSEED records by the digitizer.
.UNINDENT
.SH SETUP
.sp
The configuration can be adjusted in the module configuration (\fBscqc.cfg\fP).
.INDENT 0.0
.IP 1. 3
Select the streams for which to compute the QC parameters. Be default, only
streams defined global bindings are considered:
.INDENT 3.0
.IP \(bu 2
\fI\%use3Components\fP: Select to consider the 3 components related to
the stream defined by global bingings. Reguires to \fBselect\fP
\fI\%useConfiguredStreams\fP\&.
.IP \(bu 2
\fI\%streamMask\fP: Freely choose any available stream to compute the QC
parameters for. This requires to \fBunselect\fP \fI\%useConfiguredStreams\fP\&.
Regular expressions may be used, e.g.:
.INDENT 3.0
.IP \(bu 2
Consider BHZ streams from all networks, stations and locations:
.INDENT 2.0
.INDENT 3.5
.sp
.nf
.ft C
streamMask = ""(.+)\e.(.+)\e.(.*)\e.(BHZ)$"
.ft P
.fi
.UNINDENT
.UNINDENT
.IP \(bu 2
Consider any component from BH, LH and HH streams:
.INDENT 2.0
.INDENT 3.5
.sp
.nf
.ft C
streamMask = "(.+)\e.(.+)\e.(.*)\e.((BH)|(LH)|(HH))?$"
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.IP 2. 3
Load the QC and other plugins, e.g. for data acquisition.
The QC plugins loaded by default are \fBqcplugin_availability\fP,
\fBqcplugin_delay\fP, \fBqcplugin_gap\fP, \fBqcplugin_latency\fP,
\fBqcplugin_offset\fP, \fBqcplugin_outage\fP, \fBqcplugin_overlap\fP,
\fBqcplugin_rms\fP, \fBqcplugin_spike\fP and \fBqcplugin_timing\fP\&.
.sp
Adjust \fBplugins\fP for setting plugins explicitly and to exclude the other
ones, e.g.
.INDENT 3.0
.INDENT 3.5
.sp
.nf
.ft C
plugins = qcplugin_availability, qcplugin_spike
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Further RecordStream plugins for reading data may be considered.
.IP 3. 3
Configure the plugin parameters: Each plugin considers specific parameters
which can be configured separately or the default section.
.UNINDENT
.SH CONFIGURATION
.nf
\fBetc/defaults/global.cfg\fP
\fBetc/defaults/scqc.cfg\fP
\fBetc/global.cfg\fP
\fBetc/scqc.cfg\fP
\fB~/.seiscomp/global.cfg\fP
\fB~/.seiscomp/scqc.cfg\fP
.fi
.sp
.sp
scqc inherits global options\&.
.INDENT 0.0
.TP
.B CreatorId
Type: \fIstring\fP
.sp
ID of QC message creator
Default is \fBsmi://de.gfz\-potsdam/QcTool_0.3.1\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B useConfiguredStreams
Type: \fIboolean\fP
.sp
Limit QC determination to processed data streams which are
defined in global bindings with detecLocid and detecStream.
Default is \fBtrue\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B use3Components
Type: \fIboolean\fP
.sp
If useConfiguredStreams is true then this parameter decides whether
to use only the vertical component (default) or all three
components. The 3 components are collected from the inventory
according to channel orientation. If that is not possible
then the fixed components N and E will be used.
Default is \fBfalse\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B streamMask
Type: \fIstring\fP
.sp
If useConfiguredStreams is false, then
load (from inventory) only those streams, matching the streamMask
.sp
RegEx e.g. "^(NET1|NET2)\e.(STA1|STA2|STA3)\e.(LOC)\e.((BH)|(LH)|(HH))Z$"
.sp
RegEx e.g. "^(.+)\e.(.+)\e.(.*)\e.(.+)Z$"
.sp
streamMask = "^(.+)\e.(.+)\e.(.*)\e.(BHZ)$"
.UNINDENT
.INDENT 0.0
.TP
.B dbLookBack
Type: \fIint\fP
.sp
Unit: \fIdays\fP
.sp
Database look up for past entries not older than x days
(to determine the last QC parameter calculated).
Default is \fB7\fP\&.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBplugins.*\fP
\fIControl parameters for individual QC plugins.\fP
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBplugins.default.*\fP
\fIDefault configuration parameters for the plugins.\fP
\fICan be overwritten by the individual plugin configurations.\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B plugins.default.realTimeOnly
Type: \fIboolean\fP
.sp
Enable to use this plugin only for realtime processing.
.sp
Default [disable]: plugin is able to process archived data AND realtime data streams.
Default is \fBfalse\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.default.filter
Type: \fIstring\fP
.sp
Filter string used to filter waveforms before processing.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.default.buffer
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Qc\-Buffer Length [s] (aka LTA\-Buffer). Must be >= plugins.*.bufferLength.
Default is \fB4000\fP\&.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBplugins.default.report.*\fP
\fIControl interactions with the messaging system.\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B plugins.default.report.interval
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Interval for sending report messages which e.g.
will be  may be displayed by scqcv.
Default is \fB60\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.default.report.buffer
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Time window for calculating QC reports.
Default is \fB600\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.default.report.timeout
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Report messages are generated in case no data
is received since timeout. Only in real\-time processing.
Default is \fB0\fP\&.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBplugins.default.archive.*\fP
\fIControl sending QC reports as notifier to the messaging where\fP
\fIscmaster will write them to the database.\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B plugins.default.archive.interval
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Interval to send the QC reports.
.sp
Default [\-1]: Do not send any QC report. This will prevent writing
QC reports into the database.
Default is \fB\-1\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.default.archive.buffer
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Time window for calculating QC reports.
Default is \fB3600\fP\&.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBplugins.default.alert.*\fP
\fIControl for sending alerts based on QC reports.\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B plugins.default.alert.interval
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Interval for checking and sending alert thresholds.
\-1 disables threshold checking.
Default is \fB\-1\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.default.alert.buffer
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Time window for calculating QC reports.
Default is \fB1800\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.default.alert.thresholds
Type: \fIint\fP
.sp
List of thresholds for sending QC reports. Use comma to separate values.
Default is \fB150\fP\&.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBplugins.QcLatency.*\fP
\fIConfiguration parameters for the plugin qcplugin_latency. Overwrites the parameters from the default section.\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcLatency.realTimeOnly
Type: \fIboolean\fP
.sp
Enable to use this plugin only for realtime processing.
.sp
Default [disable]: plugin is able to process archived data AND realtime data streams.
Default is \fBtrue\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcLatency.filter
Type: \fIstring\fP
.sp
Filter string used to filter waveforms before processing.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcLatency.buffer
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Qc\-Buffer Length [s] (aka LTA\-Buffer). Must be >= plugins.*.bufferLength.
Default is \fB4000\fP\&.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBplugins.QcLatency.report.*\fP
\fIControl interactions with the messaging system.\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcLatency.report.interval
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Interval for sending report messages which, e.g.,
can be displayed by scqcv.
Default is \fB60\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcLatency.report.buffer
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Time window for calculating QC reports.
Default is \fB600\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcLatency.report.timeout
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Report messages are generated in case no data
is received since timeout. Only in real\-time processing.
Default is \fB0\fP\&.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBplugins.QcLatency.archive.*\fP
\fIControl sending QC reports as notifier to the messaging where\fP
\fIscmaster will write them to the database.\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcLatency.archive.interval
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Interval to send the QC reports.
.sp
Default [\-1]: Do not send any QC report. This will prevent writing
QC reports into the database.
Default is \fB\-1\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcLatency.archive.buffer
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Time window for calculating QC reports.
Default is \fB3600\fP\&.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBplugins.QcLatency.alert.*\fP
\fIControl for sending alerts based on QC reports.\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcLatency.alert.interval
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Interval for checking and sending alert thresholds.
\-1 disables threshold checking.
Default is \fB\-1\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcLatency.alert.buffer
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Time window for calculating QC reports.
Default is \fB1800\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcLatency.alert.thresholds
Type: \fIint\fP
.sp
List of thresholds for sending QC reports. Use comma to separate values.
Default is \fB150\fP\&.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBplugins.QcDelay.*\fP
\fIConfiguration parameters for the plugin qcplugin_delay. Overwrites the parameters from the default section.\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcDelay.realTimeOnly
Type: \fIboolean\fP
.sp
Enable to use this plugin only for realtime processing.
.sp
Default [disable]: plugin is able to processd data AND realtime data streams.
Default is \fBtrue\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcDelay.filter
Type: \fIstring\fP
.sp
Filter string used to filter waveforms before processing.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcDelay.buffer
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Qc\-Buffer Length [s] (aka LTA\-Buffer). Must be >= plugins.*.bufferLength.
Default is \fB4000\fP\&.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBplugins.QcDelay.report.*\fP
\fIControl interactions with the messaging system.\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcDelay.report.interval
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Interval for sending report messages which e.g.
will be  may be displayed by scqcv.
Default is \fB60\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcDelay.report.buffer
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Time window for calculating QC reports.
Default is \fB600\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcDelay.report.timeout
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Report messages are generated in case no data
is received since timeout. Only in real\-time processing.
Default is \fB0\fP\&.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBplugins.QcDelay.archive.*\fP
\fIControl sending QC reports as notifier to the messaging where\fP
\fIscmaster will write them to the database.\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcDelay.archive.interval
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Interval to send the QC reports.
.sp
Default [\-1]: Do not send any QC report. This will prevent writing
QC reports into the database.
Default is \fB\-1\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcDelay.archive.buffer
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Time window for calculating QC reports.
Default is \fB3600\fP\&.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBplugins.QcDelay.alert.*\fP
\fIControl for sending alerts based on QC reports.\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcDelay.alert.interval
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Interval for checking and sending alert thresholds.
\-1 disables threshold checking.
Default is \fB\-1\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcDelay.alert.buffer
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Time window for calculating QC reports.
Default is \fB1800\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcDelay.alert.thresholds
Type: \fIint\fP
.sp
List of thresholds for sending QC reports. Use comma to separate values.
Default is \fB150\fP\&.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBplugins.QcGap.*\fP
\fIConfiguration parameters for the plugin qcplugin_gap. Overwrites the parameters from the default section.\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcGap.realTimeOnly
Type: \fIboolean\fP
.sp
Enable to use this plugin only for realtime processing.
.sp
Default [disable]: plugin is able to process archived data AND realtime data streams.
Default is \fBfalse\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcGap.filter
Type: \fIstring\fP
.sp
Filter string used to filter waveforms before processing.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcGap.buffer
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Qc\-Buffer Length [s] (aka LTA\-Buffer). Must be >= plugins.*.bufferLength.
Default is \fB4000\fP\&.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBplugins.QcGap.report.*\fP
\fIControl interactions with the messaging system.\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcGap.report.interval
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Interval for sending report messages which e.g.
will be  may be displayed by scqcv.
Default is \fB60\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcGap.report.buffer
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Time window for calculating QC reports.
Default is \fB600\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcGap.report.timeout
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Report messages are generated in case no data
is received since timeout. Only in real\-time processing.
Default is \fB0\fP\&.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBplugins.QcGap.archive.*\fP
\fIControl sending QC reports as notifier to the messaging where\fP
\fIscmaster will write them to the database.\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcGap.archive.interval
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Interval to send the QC reports.
.sp
Default [\-1]: Do not send any QC report. This will prevent writing
QC reports into the database.
Default is \fB\-1\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcGap.archive.buffer
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Time window for calculating QC reports.
Default is \fB3600\fP\&.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBplugins.QcGap.alert.*\fP
\fIControl for sending alerts based on QC reports.\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcGap.alert.interval
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Interval for checking and sending alert thresholds.
\-1 disables threshold checking.
Default is \fB\-1\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcGap.alert.buffer
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Time window for calculating QC reports.
Default is \fB1800\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcGap.alert.thresholds
Type: \fIint\fP
.sp
List of thresholds for sending QC reports. Use comma to separate values.
Default is \fB150\fP\&.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBplugins.QcOffset.*\fP
\fIConfiguration parameters for the plugin qcplugin_offset. Overwrites the parameters from the default section.\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcOffset.realTimeOnly
Type: \fIboolean\fP
.sp
Enable to use this plugin only for realtime processing.
.sp
Default [disable]: plugin is able to process archived data AND realtime data streams.
Default is \fBfalse\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcOffset.filter
Type: \fIstring\fP
.sp
Filter string used to filter waveforms before processing.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcOffset.buffer
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Qc\-Buffer Length [s] (aka LTA\-Buffer). Must be >= plugins.*.bufferLength.
Default is \fB4000\fP\&.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBplugins.QcOffset.report.*\fP
\fIControl interactions with the messaging system.\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcOffset.report.interval
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Interval for sending report messages which e.g.
will be  may be displayed by scqcv.
Default is \fB60\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcOffset.report.buffer
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Time window for calculating QC reports.
Default is \fB600\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcOffset.report.timeout
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Report messages are generated in case no data
is received since timeout. Only in real\-time processing.
Default is \fB0\fP\&.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBplugins.QcOffset.archive.*\fP
\fIControl sending QC reports as notifier to the messaging where\fP
\fIscmaster will write them to the database.\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcOffset.archive.interval
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Interval to send the QC reports.
.sp
Default [\-1]: Do not send any QC report. This will prevent writing
QC reports into the database.
Default is \fB\-1\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcOffset.archive.buffer
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Time window for calculating QC reports.
Default is \fB3600\fP\&.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBplugins.QcOffset.alert.*\fP
\fIControl for sending alerts based on QC reports.\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcOffset.alert.interval
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Interval for checking and sending alert thresholds.
\-1 disables threshold checking.
Default is \fB\-1\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcOffset.alert.buffer
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Time window for calculating QC reports.
Default is \fB1800\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcOffset.alert.thresholds
Type: \fIint\fP
.sp
List of thresholds for sending QC reports. Use comma to separate values.
Default is \fB150\fP\&.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBplugins.QcOverlap.*\fP
\fIConfiguration parameters for the plugin qcplugin_overlap. Overwrites the parameters from the default section.\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcOverlap.realTimeOnly
Type: \fIboolean\fP
.sp
Enable to use this plugin only for realtime processing.
.sp
Default [disable]: plugin is able to process archived data AND realtime data streams.
Default is \fBfalse\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcOverlap.filter
Type: \fIstring\fP
.sp
Filter string used to filter waveforms before processing.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcOverlap.buffer
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Qc\-Buffer Length [s] (aka LTA\-Buffer). Must be >= plugins.*.bufferLength.
Default is \fB4000\fP\&.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBplugins.QcOverlap.report.*\fP
\fIControl interactions with the messaging system.\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcOverlap.report.interval
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Interval for sending report messages which e.g.
will be  may be displayed by scqcv.
Default is \fB60\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcOverlap.report.buffer
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Time window for calculating QC reports.
Default is \fB600\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcOverlap.report.timeout
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Report messages are generated in case no data
is received since timeout. Only in real\-time processing.
Default is \fB0\fP\&.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBplugins.QcOverlap.archive.*\fP
\fIControl sending QC reports as notifier to the messaging where\fP
\fIscmaster will write them to the database.\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcOverlap.archive.interval
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Interval to send the QC reports.
.sp
Default [\-1]: Do not send any QC report. This will prevent writing
QC reports into the database.
Default is \fB\-1\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcOverlap.archive.buffer
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Time window for calculating QC reports.
Default is \fB3600\fP\&.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBplugins.QcOverlap.alert.*\fP
\fIControl for sending alerts based on QC reports.\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcOverlap.alert.interval
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Interval for checking and sending alert thresholds.
\-1 disables threshold checking.
Default is \fB\-1\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcOverlap.alert.buffer
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Time window for calculating QC reports.
Default is \fB1800\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcOverlap.alert.thresholds
Type: \fIint\fP
.sp
List of thresholds for sending QC reports. Use comma to separate values.
Default is \fB150\fP\&.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBplugins.QcRms.*\fP
\fIConfiguration parameters for the plugin qcplugin_rms. Overwrites the parameters from the default section.\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcRms.realTimeOnly
Type: \fIboolean\fP
.sp
Enable to use this plugin only for realtime processing.
.sp
Default [disable]: plugin is able to process archived data AND realtime data streams.
Default is \fBfalse\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcRms.filter
Type: \fIstring\fP
.sp
Filter string used to filter waveforms before processing.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcRms.buffer
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Qc\-Buffer Length [s] (aka LTA\-Buffer). Must be >= plugins.*.bufferLength.
Default is \fB4000\fP\&.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBplugins.QcRms.report.*\fP
\fIControl interactions with the messaging system.\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcRms.report.interval
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Interval for sending report messages which e.g.
will be  may be displayed by scqcv.
Default is \fB60\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcRms.report.buffer
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Time window for calculating QC reports.
Default is \fB600\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcRms.report.timeout
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Report messages are generated in case no data
is received since timeout. Only in real\-time processing.
Default is \fB0\fP\&.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBplugins.QcRms.archive.*\fP
\fIControl sending QC reports as notifier to the messaging where\fP
\fIscmaster will write them to the database.\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcRms.archive.interval
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Interval to send the QC reports.
.sp
Default [\-1]: Do not send any QC report. This will prevent writing
QC reports into the database.
Default is \fB\-1\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcRms.archive.buffer
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Time window for calculating QC reports.
Default is \fB3600\fP\&.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBplugins.QcRms.alert.*\fP
\fIControl for sending alerts based on QC reports.\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcRms.alert.interval
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Interval for checking and sending alert thresholds.
\-1 disables threshold checking.
Default is \fB\-1\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcRms.alert.buffer
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Time window for calculating QC reports.
Default is \fB1800\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcRms.alert.thresholds
Type: \fIint\fP
.sp
List of thresholds for sending QC reports. Use comma to separate values.
Default is \fB150\fP\&.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBplugins.QcSpike.*\fP
\fIConfiguration parameters for the plugin qcplugin_spike. Overwrites the parameters from the default section.\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcSpike.realTimeOnly
Type: \fIboolean\fP
.sp
Enable to use this plugin only for realtime processing.
.sp
Default [disable]: plugin is able to process archived data AND realtime data streams.
Default is \fBfalse\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcSpike.filter
Type: \fIstring\fP
.sp
Filter string used to filter waveforms before processing.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcSpike.buffer
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Qc\-Buffer Length [s] (aka LTA\-Buffer). Must be >= plugins.*.bufferLength.
Default is \fB4000\fP\&.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBplugins.QcSpike.report.*\fP
\fIControl interactions with the messaging system.\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcSpike.report.interval
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Interval for sending report messages which e.g.
will be  may be displayed by scqcv.
Default is \fB60\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcSpike.report.buffer
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Time window for calculating QC reports.
Default is \fB600\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcSpike.report.timeout
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Report messages are generated in case no data
is received since timeout. Only in real\-time processing.
Default is \fB0\fP\&.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBplugins.QcSpike.archive.*\fP
\fIControl sending QC reports as notifier to the messaging where\fP
\fIscmaster will write them to the database.\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcSpike.archive.interval
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Interval to send the QC reports.
.sp
Default [\-1]: Do not send any QC report. This will prevent writing
QC reports into the database.
Default is \fB\-1\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcSpike.archive.buffer
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Time window for calculating QC reports.
Default is \fB3600\fP\&.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBplugins.QcSpike.alert.*\fP
\fIControl for sending alerts based on QC reports.\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcSpike.alert.interval
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Interval for checking and sending alert thresholds.
\-1 disables threshold checking.
Default is \fB\-1\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcSpike.alert.buffer
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Time window for calculating QC reports.
Default is \fB1800\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcSpike.alert.thresholds
Type: \fIint\fP
.sp
List of thresholds for sending QC reports. Use comma to separate values.
Default is \fB150\fP\&.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBplugins.QcTiming.*\fP
\fIConfiguration parameters for the plugin qcplugin_timing. Overwrites the parameters from the default section.\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcTiming.realTimeOnly
Type: \fIboolean\fP
.sp
Enable to use this plugin only for realtime processing.
.sp
Default [disable]: plugin is able to process archived data AND realtime data streams.
Default is \fBfalse\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcTiming.filter
Type: \fIstring\fP
.sp
Filter string used to filter waveforms before processing.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcTiming.buffer
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Qc\-Buffer Length [s] (aka LTA\-Buffer). Must be >= plugins.*.bufferLength.
Default is \fB4000\fP\&.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBplugins.QcTiming.report.*\fP
\fIControl interactions with the messaging system.\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcTiming.report.interval
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Interval for sending report messages which e.g.
will be  may be displayed by scqcv.
Default is \fB60\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcTiming.report.buffer
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Time window for calculating QC reports.
Default is \fB600\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcTiming.report.timeout
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Report messages are generated in case no data
is received since timeout. Only in real\-time processing.
Default is \fB0\fP\&.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBplugins.QcTiming.archive.*\fP
\fIControl sending QC reports as notifier to the messaging where\fP
\fIscmaster will write them to the database.\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcTiming.archive.interval
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Interval to send the QC reports.
.sp
Default [\-1]: Do not send any QC report. This will prevent writing
QC reports into the database.
Default is \fB\-1\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcTiming.archive.buffer
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Time window for calculating QC reports.
Default is \fB3600\fP\&.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBplugins.QcTiming.alert.*\fP
\fIControl for sending alerts based on QC reports.\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcTiming.alert.interval
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Interval for checking and sending alert thresholds.
\-1 disables threshold checking.
Default is \fB\-1\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcTiming.alert.buffer
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Time window for calculating QC reports.
Default is \fB1800\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcTiming.alert.thresholds
Type: \fIint\fP
.sp
List of thresholds for sending QC reports. Use comma to separate values.
Default is \fB150\fP\&.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBplugins.QcAvailability.*\fP
\fIConfiguration parameters for the plugin qcplugin_availability. Overwrites the parameters from the default section.\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcAvailability.realTimeOnly
Type: \fIboolean\fP
.sp
Enable to use this plugin only for realtime processing.
.sp
Default [disable]: plugin is able to process archived data AND realtime data streams.
Default is \fBfalse\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcAvailability.filter
Type: \fIstring\fP
.sp
Filter string used to filter waveforms before processing.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcAvailability.buffer
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Qc\-Buffer Length [s] (aka LTA\-Buffer). Must be >= plugins.*.bufferLength.
Default is \fB4000\fP\&.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBplugins.QcAvailability.report.*\fP
\fIControl interactions with the messaging system.\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcAvailability.report.interval
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Interval for sending report messages which e.g.
will be  may be displayed by scqcv.
Default is \fB60\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcAvailability.report.buffer
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Time window for calculating QC reports.
Default is \fB600\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcAvailability.report.timeout
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Report messages are generated in case no data
is received since timeout. Only in real\-time processing.
Default is \fB0\fP\&.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBplugins.QcAvailability.archive.*\fP
\fIControl sending QC reports as notifier to the messaging where\fP
\fIscmaster will write them to the database.\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcAvailability.archive.interval
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Interval to send the QC reports.
.sp
Default [\-1]: Do not send any QC report. This will prevent writing
QC reports into the database.
Default is \fB\-1\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcAvailability.archive.buffer
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Time window for calculating QC reports.
Default is \fB3600\fP\&.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBplugins.QcAvailability.alert.*\fP
\fIControl for sending alerts based on QC reports.\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcAvailability.alert.interval
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Interval for checking and sending alert thresholds.
\-1 disables threshold checking.
Default is \fB\-1\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcAvailability.alert.buffer
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Time window for calculating QC reports.
Default is \fB1800\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcAvailability.alert.thresholds
Type: \fIint\fP
.sp
List of thresholds for sending QC reports. Use comma to separate values.
Default is \fB150\fP\&.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBplugins.QcOutage.*\fP
\fIConfiguration parameters for the plugin qcplugin_outage. Overwrites the parameters from the default section.\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcOutage.realTimeOnly
Type: \fIboolean\fP
.sp
Enable to use this plugin only for realtime processing.
.sp
Default [disable]: plugin is able to process archived data AND realtime data streams.
Default is \fBfalse\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcOutage.filter
Type: \fIstring\fP
.sp
Filter string used to filter waveforms before processing.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcOutage.buffer
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Qc\-Buffer Length [s] (aka LTA\-Buffer). Must be >= plugins.*.bufferLength.
Default is \fB4000\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcOutage.notifyDB
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
If there is a gap of more than notifyDB [s], write an OUTAGE entry into the database.
Default is \fB1800\fP\&.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBplugins.QcOutage.report.*\fP
\fIControl interactions with the messaging system.\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcOutage.report.interval
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Interval for sending report messages which e.g.
will be  may be displayed by scqcv.
Default is \fB60\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcOutage.report.buffer
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Time window for calculating QC reports.
Default is \fB600\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcOutage.report.timeout
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Report messages are generated in case no data
is received since timeout. Only in real\-time processing.
Default is \fB0\fP\&.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBplugins.QcOutage.archive.*\fP
\fIControl sending QC reports as notifier to the messaging where\fP
\fIscmaster will write them to the database.\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcOutage.archive.interval
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Interval to send the QC reports.
.sp
Default [\-1]: Do not send any QC report. This will prevent writing
QC reports into the database.
Default is \fB\-1\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcOutage.archive.buffer
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Time window for calculating QC reports.
Default is \fB3600\fP\&.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBplugins.QcOutage.alert.*\fP
\fIControl for sending alerts based on QC reports.\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcOutage.alert.interval
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Interval for checking and sending alert thresholds.
\-1 disables threshold checking.
Default is \fB\-1\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcOutage.alert.buffer
Type: \fIint\fP
.sp
Unit: \fIs\fP
.sp
Time window for calculating QC reports.
Default is \fB1800\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B plugins.QcOutage.alert.thresholds
Type: \fIint\fP
.sp
List of thresholds for sending QC reports. Use comma to separate values.
Default is \fB150\fP\&.
.UNINDENT
.SH COMMAND-LINE
.SS Generic
.INDENT 0.0
.TP
.B \-h, \-\-help
show help message.
.UNINDENT
.INDENT 0.0
.TP
.B \-V, \-\-version
show version information
.UNINDENT
.INDENT 0.0
.TP
.B \-\-config\-file arg
Use alternative configuration file. When this option is used
the loading of all stages is disabled. Only the given configuration
file is parsed and used. To use another name for the configuration
create a symbolic link of the application or copy it, eg scautopick \-> scautopick2.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-plugins arg
Load given plugins.
.UNINDENT
.INDENT 0.0
.TP
.B \-D, \-\-daemon
Run as daemon. This means the application will fork itself and
doesn\(aqt need to be started with &.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-auto\-shutdown arg
Enable/disable self\-shutdown because a master module shutdown. This only
works when messaging is enabled and the master module sends a shutdown
message (enabled with \-\-start\-stop\-msg for the master module).
.UNINDENT
.INDENT 0.0
.TP
.B \-\-shutdown\-master\-module arg
Sets the name of the master\-module used for auto\-shutdown. This
is the application name of the module actually started. If symlinks
are used then it is the name of the symlinked application.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-shutdown\-master\-username arg
Sets the name of the master\-username of the messaging used for
auto\-shutdown. If "shutdown\-master\-module" is given as well this
parameter is ignored.
.UNINDENT
.SS Verbosity
.INDENT 0.0
.TP
.B \-\-verbosity arg
Verbosity level [0..4]. 0:quiet, 1:error, 2:warning, 3:info, 4:debug
.UNINDENT
.INDENT 0.0
.TP
.B \-v, \-\-v
Increase verbosity level (may be repeated, eg. \-vv)
.UNINDENT
.INDENT 0.0
.TP
.B \-q, \-\-quiet
Quiet mode: no logging output
.UNINDENT
.INDENT 0.0
.TP
.B \-\-component arg
Limits the logging to a certain component. This option can be given more than once.
.UNINDENT
.INDENT 0.0
.TP
.B \-s, \-\-syslog
Use syslog logging back end. The output usually goes to /var/lib/messages.
.UNINDENT
.INDENT 0.0
.TP
.B \-l, \-\-lockfile arg
Path to lock file.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-console arg
Send log output to stdout.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-debug
Debug mode: \-\-verbosity=4 \-\-console=1
.UNINDENT
.INDENT 0.0
.TP
.B \-\-log\-file arg
Use alternative log file.
.UNINDENT
.SS Messaging
.INDENT 0.0
.TP
.B \-u, \-\-user arg
Overrides configuration parameter \fBconnection.username\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B \-H, \-\-host arg
Overrides configuration parameter \fBconnection.server\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B \-t, \-\-timeout arg
Overrides configuration parameter \fBconnection.timeout\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B \-g, \-\-primary\-group arg
Overrides configuration parameter \fBconnection.primaryGroup\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B \-S, \-\-subscribe\-group arg
A group to subscribe to. This option can be given more than once.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-content\-type arg
Overrides configuration parameter \fBconnection.contentType\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-start\-stop\-msg arg
Sets sending of a start\- and a stop message.
.UNINDENT
.SS Database
.INDENT 0.0
.TP
.B \-\-db\-driver\-list
List all supported database drivers.
.UNINDENT
.INDENT 0.0
.TP
.B \-d, \-\-database arg
The database connection string, format: \fI\%service://user:pwd@host/database\fP\&.
"service" is the name of the database driver which can be
queried with "\-\-db\-driver\-list".
.UNINDENT
.INDENT 0.0
.TP
.B \-\-config\-module arg
The configmodule to use.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-inventory\-db arg
Load the inventory from the given database or file, format: [\fI\%service://]location\fP
.UNINDENT
.INDENT 0.0
.TP
.B \-\-db\-disable
Do not use the database at all
.UNINDENT
.SS Records
.INDENT 0.0
.TP
.B \-\-record\-driver\-list
List all supported record stream drivers
.UNINDENT
.INDENT 0.0
.TP
.B \-I, \-\-record\-url arg
The recordstream source URL, format: [\fI\%service://\fP]location[#type].
"service" is the name of the recordstream driver which can be
queried with "\-\-record\-driver\-list". If "service"
is not given "\fI\%file://\fP" is used.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-record\-file arg
Specify a file as record source.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-record\-type arg
Specify a type for the records being read.
.UNINDENT
.SH AUTHOR
gempa GmbH, GFZ Potsdam
.SH COPYRIGHT
gempa GmbH, GFZ Potsdam
.\" Generated by docutils manpage writer.
.
