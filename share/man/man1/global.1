.\" Man page generated from reStructuredText.
.
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.TH "GLOBAL" "1" "Aug 31, 2023" "2023.217#192b88919" "scanloc: Phase Associator"
.SH NAME
global \- scanloc: Phase Associator Documentation
.sp
The SeisComP configuration uses a unified schema to configure modules.
Modules which use the SeisComP libraries can read this configuration
directly and share global configuration options like messaging connections,
database configurations, logging and much more.
There are still some modules that do not use the libraries and are called
\fBstandalone\fP modules such as seedlink and
slarchive\&.
They need wrappers to generate their native configuration when
\fBseiscomp update\-config\fP is run.
.sp
Global parameters can be used by many modules. Thus multiple configuration can be avoided.
The parameters are read from file in the following order:
.INDENT 0.0
.IP 1. 3
\fB@SYSTEMCONFIGDIR@/global.cfg\fP
.IP 2. 3
\fB@CONFIGDIR@/global.cfg\fP
.UNINDENT
.sp
Parameters from \fB@CONFIGDIR@\fP override parameters from \fB@SYSTEMCONFIGDIR@\fP\&.
.sp
Most \fI\%trunk\fP modules read the configuration from the global configuration which can be overridden
by the module configuration. Read the concept section on modules
and the concept section on the configuraion for
more details.
.sp
Though it is easy to create the configuration by directly editing the configuration
files, it is even more convenient to use a configurator.
SeisComP ships with a graphical configurator and management tool (scconfig)
which makes it easy to maintain
module configurations and station bindings even for large networks. It has built\-in
functionality to check the state of all registered modules and to start and stop them.
.sp
The configuration is divided into three parts: \fI\%stations\fP,
\fI\%modules\fP and \fI\%bindings\fP\&.
.SH STATION META DATA
.sp
Station meta\-data is a fundamental requirement for a seismic processing system and
for SeisComP. Read the inventory section in concepts for
more details.
.SH MODULES
.sp
The concepts of modules and their configuration
is described in the concepts section\&.
.SH BINDINGS
.sp
Bindings provide specific configurations per module and
station and even stream. Read the bindings section
in concepts for more details on bindings.
.SH EXTENSIONS
.sp
Extensions add new configuration options to \fI\%modules\fP\&. It does
not matter how those extensions are used. Commonly a module loads a plugin,
which requires additional configuration parameters \- these are provided by an extension.
.sp
There are currently extensions for the following modules, corresponding to the
plugins shown:
.sp
See the documentation for each module for further information about its
extensions.
.SH MODULE CONFIGURATION
.INDENT 0.0
.TP
.B datacenterID
Type: \fIstring\fP
.sp
Sets the datacenter ID which is primarily used by Arclink and
its tools. Should not contain spaces.
.UNINDENT
.INDENT 0.0
.TP
.B agencyID
Default: \fBGFZ\fP
.sp
Type: \fIstring\fP
.sp
Defines the agency ID used to set creationInfo.agencyID in
data model objects. Should not contain spaces.
.UNINDENT
.INDENT 0.0
.TP
.B organization
Default: \fBUnset\fP
.sp
Type: \fIstring\fP
.sp
Organization name used mainly by ArcLink and SeedLink.
.UNINDENT
.INDENT 0.0
.TP
.B author
Default: \fB@appname@@@@hostname@\fP
.sp
Type: \fIstring\fP
.sp
Defines the author name used to set creationInfo.author in
data model objects.
.UNINDENT
.INDENT 0.0
.TP
.B plugins
Type: \fIlist:string\fP
.sp
Defines a list of modules loaded at startup.
.UNINDENT
.INDENT 0.0
.TP
.B cityXML
Type: \fIstring\fP
.sp
Path to the cities.xml file. If undefined, the data is read from
\(dq@CONFIGDIR@/cities.xml\(dq or \(dq@DATADIR@/cities.xml\(dq.
SeisComP ships with \(dq@DATADIR@/cities.xml\(dq.
.UNINDENT
.INDENT 0.0
.TP
.B loadCities
Type: \fIboolean\fP
.sp
Load cities from file configured by the \(dqcityXML\(dq
parameter. GUI and map applications enable loading of cities
by default considering the parameter \(dqscheme.map.showCities\(dq.
.UNINDENT
.INDENT 0.0
.TP
.B loadRegions
Type: \fIboolean\fP
.sp
Load custom FEP (Flinn\-Engdahl polygon) regions from
\(dq@CONFIGDIR@/fep/\(dq or @DATADIR@/fep/\(dq.
GUI and map applications and scevent enable FEP regions by
default. Explicitly uncheck the option to disregard by these
applications.
.UNINDENT
.INDENT 0.0
.TP
.B publicIDPattern
Type: \fIstring\fP
.sp
Defines a custom pattern for generation of public object ids. The following
variables are resolved:
@classname@ (class name of object),
@id@ (public object count),
@globalid@ (general object count),
@time@ (current time, use \(aq/\(aq to supply custom format, e.g. @time/%FT%T.%fZ@
.UNINDENT
.INDENT 0.0
.TP
.B configModule
Default: \fBtrunk\fP
.sp
Type: \fIstring\fP
.sp
Name of the configuration module.
.UNINDENT
.INDENT 0.0
.TP
.B database
Type: \fIstring\fP
.sp
Defines the database connection. If no database is configured
(which is the default) and a messaging connection is available
the application will receive the parameters after the connection
is established. Override these values only if you know what you
are doing.
.sp
The format is: \fI\%service://user:pwd@host/database\fP\&.
\(dqservice\(dq is the name of the database driver which can be
queried with \(dq\-\-db\-driver\-list\(dq.
.sp
Note that this parameter overrides \(aqdatabase.type\(aq and
\(aqdatabase.parameters\(aq if present.
.UNINDENT
.INDENT 0.0
.TP
.B recordstream
Type: \fIstring\fP
.sp
SeisComP applications access waveform data through the RecordStream
interface. Please consult the SeisComP documentation for a list of
supported services and their configuration.
.sp
This parameter configures recordstream source URL, format: [\fI\%service://\fP]location[#type].
\(dqservice\(dq is the name of the recordstream implementation.
If \(dqservice\(dq is not given \(dq\fI\%file://\fP\(dq is implied.
.sp
This parameter overrides the deprecated recordstream.service and
recordstream.source and should be used instead.
.UNINDENT
.INDENT 0.0
.TP
.B logging.level
Default: \fB2\fP
.sp
Type: \fIint\fP
.sp
Sets the logging level between 1 and 4 where 1=ERROR, 2=WARNING, 3=INFO and 4=DEBUG.
.UNINDENT
.INDENT 0.0
.TP
.B logging.file
Default: \fBtrue\fP
.sp
Type: \fIboolean\fP
.sp
Enables logging into a log file.
.UNINDENT
.INDENT 0.0
.TP
.B logging.syslog
Default: \fBfalse\fP
.sp
Type: \fIboolean\fP
.sp
Enables logging to syslog if supported by the host system.
.UNINDENT
.INDENT 0.0
.TP
.B logging.components
Type: \fIlist:string\fP
.sp
Limit the logging to the specified list of components, e.g. \(aqApplication, Server\(aq
.UNINDENT
.INDENT 0.0
.TP
.B logging.component
Type: \fIboolean\fP
.sp
For each log entry print the component right after the
log level. By default the component output is enabled
for file output but disabled for console output.
.UNINDENT
.INDENT 0.0
.TP
.B logging.context
Default: \fBfalse\fP
.sp
Type: \fIboolean\fP
.sp
For each log entry print the source file name and line
number.
.UNINDENT
.INDENT 0.0
.TP
.B logging.utc
Type: \fIboolean\fP
.sp
Use UTC instead of localtime in logging timestamps.
.UNINDENT
.INDENT 0.0
.TP
.B logging.file.rotator
Default: \fBtrue\fP
.sp
Type: \fIboolean\fP
.sp
Enables rotation of log files.
.UNINDENT
.INDENT 0.0
.TP
.B logging.file.rotator.timeSpan
Default: \fB86400\fP
.sp
Unit: \fIs\fP
.sp
Type: \fIint\fP
.sp
Time span after which a log file is rotated.
.UNINDENT
.INDENT 0.0
.TP
.B logging.file.rotator.archiveSize
Default: \fB7\fP
.sp
Type: \fIint\fP
.sp
How many historic log files to keep.
.UNINDENT
.INDENT 0.0
.TP
.B logging.file.rotator.maxFileSize
Default: \fB104857600\fP
.sp
Unit: \fIbyte\fP
.sp
Type: \fIint\fP
.sp
The maximum size of a logfile in byte. The default value
is 100 megabyte. If a logfile exceeds that size then it
is rotated. To disable the size limit give 0 or a negative
value.
.UNINDENT
.INDENT 0.0
.TP
.B logging.objects.timeSpan
Default: \fB60\fP
.sp
Unit: \fIs\fP
.sp
Type: \fIint\fP
.sp
Timespan for counting input/output of objects.
.UNINDENT
.INDENT 0.0
.TP
.B logging.syslog.facility
Default: \fBlocal0\fP
.sp
Type: \fIstring\fP
.sp
Defines the syslog facility to be used according to the
defined facility names in syslog.h. The default is local0.
If the given name is invalid or not available, initializing
logging will fail and the application quits.
.UNINDENT
.INDENT 0.0
.TP
.B connection.server
Default: \fBlocalhost\fP
.sp
Type: \fIhost\-with\-port\fP
.sp
Defines the URL of the messaging server to connect to.
URL format is [scheme://]host[:port][/queue]. Default scheme:
scmp, default port: 18180, default queue: production.
Examples:
.sp
All default: localhost
.sp
Specfic host: scmp://10.0.1.4:18180/production
.sp
Specfic host and SSL encryption: scmps://10.0.1.4:18180/production
.UNINDENT
.INDENT 0.0
.TP
.B connection.username
Type: \fIstring\fP
.sp
Defines the username to be used. The length is maybe limited
by the messaging system used. By default the module name
(name of the executable) is used but sometimes it exceeds
the 10 character limit and access is denied. To prevent
errors set a different username. An empty username will
let the system to generate one.
.UNINDENT
.INDENT 0.0
.TP
.B connection.timeout
Default: \fB3\fP
.sp
Unit: \fIs\fP
.sp
Type: \fIint\fP
.sp
The connection timeout in seconds. 3 seconds are normally
more than enough. If a client needs to connect to a
remote system with a slow connection a larger timeout might
be needed.
.UNINDENT
.INDENT 0.0
.TP
.B connection.primaryGroup
Type: \fIstring\fP
.sp
Defines the primary group of a module. This is the name
of the group where a module sends its messages to if the
target group is not explicitely given in the send call.
.UNINDENT
.INDENT 0.0
.TP
.B connection.contentType
Default: \fBbinary\fP
.sp
Type: \fIstring\fP
.sp
Defines the message encoding for sending. Allowed values
are \(dqbinary\(dq, \(dqjson\(dq or \(dqxml\(dq.
XML has more overhead in processing but is more robust when
schema versions between client and server are different.
.UNINDENT
.INDENT 0.0
.TP
.B connection.subscriptions
Type: \fIlist:string\fP
.sp
Defines a list of message groups to subscribe to. The
default is usually given by the application and does not
need to be changed.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBdatabase.*\fP
\fIDefines the database connection. If no database is configured\fP
\fI(which is the default) and a messaging connection is available\fP
\fIthe application will receive the parameters after the connection\fP
\fIis established. Override these values only if you know what you\fP
\fIare doing.\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B database.type
Type: \fIstring\fP
.sp
Defines the database backend to be used. The name corresponds to
the defined name in the database plugin. Examples are: mysql, postgresql or
sqlite3. Note that this parameter is deprecated. Please use
the URL form \(aqdatabase = mysql://sysop:sysop@localhost/seiscomp\(aq instead.
.UNINDENT
.INDENT 0.0
.TP
.B database.parameters
Type: \fIstring\fP
.sp
The database connection parameters. This value depends on the used
database backend. E.g. sqlite3 expects the path to the database
file whereas MYSQL or PostgreSQL expect an URI in the format
user:pwd@host/database?param1=val1&param2=val2.
Note that this parameter is deprecated. Please use the URL form
\(aqdatabase = mysql://sysop:sysop@localhost/seiscomp\(aq instead.
.UNINDENT
.INDENT 0.0
.TP
.B database.inventory
Type: \fIstring\fP
.sp
Load the inventory database from a given XML file if set. This
overrides the inventory definitions loaded from the database backend.
.UNINDENT
.INDENT 0.0
.TP
.B database.config
Type: \fIstring\fP
.sp
Load the configuration database from a given XML file if set. This
overrides the configuration definitions loaded from the database backend.
.UNINDENT
.INDENT 0.0
.TP
.B processing.whitelist.agencies
Type: \fIlist:string\fP
.sp
Defines a whitelist of agencies that are allowed for processing separated by comma.
.UNINDENT
.INDENT 0.0
.TP
.B processing.blacklist.agencies
Type: \fIlist:string\fP
.sp
Defines a blacklist of agencies that are not allowed for processing separated by comma.
.UNINDENT
.INDENT 0.0
.TP
.B inventory.whitelist.nettype
Type: \fIlist:string\fP
.sp
List of network types to include when loading the inventory.
.UNINDENT
.INDENT 0.0
.TP
.B inventory.whitelist.statype
Type: \fIlist:string\fP
.sp
List of station types to include when loading the inventory.
.UNINDENT
.INDENT 0.0
.TP
.B inventory.blacklist.nettype
Type: \fIlist:string\fP
.sp
List of network types to exclude when loading the inventory.
.UNINDENT
.INDENT 0.0
.TP
.B inventory.blacklist.statype
Type: \fIlist:string\fP
.sp
List of station types to exclude when loading the inventory.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBrecordstream.*\fP
\fISeisComP applications access waveform data through the RecordStream\fP
\fIinterface. Please consult the SeisComP documentation for a list of\fP
\fIsupported services and their configuration. Note that this set of\fP
\fIparameters is deprecated and will be removed in future versions.\fP
\fIPlease use the URL form (recordstream = slink://localhost) in future.\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B recordstream.service
Default: \fBslink\fP
.sp
Type: \fIstring\fP
.sp
Name of the recordstream service implementation.
.UNINDENT
.INDENT 0.0
.TP
.B recordstream.source
Default: \fBlocalhost:18000\fP
.sp
Type: \fIstring\fP
.sp
Service specific parameters like a IP address or a file name to use.
.UNINDENT
.INDENT 0.0
.TP
.B scripts.crashHandler
Type: \fIpath\fP
.sp
Path to crash handler script
.UNINDENT
.INDENT 0.0
.TP
.B core.plugins
Default: \fBdbmysql\fP
.sp
Type: \fIlist:string\fP
.sp
Defines a list of core modules loaded at startup.
.UNINDENT
.INDENT 0.0
.TP
.B client.startStopMessage
Default: \fBfalse\fP
.sp
Type: \fIboolean\fP
.sp
Enables sending of an application start\- and stop message to the STATUS_GROUP.
.UNINDENT
.INDENT 0.0
.TP
.B client.autoShutdown
Default: \fBfalse\fP
.sp
Type: \fIboolean\fP
.sp
Enablgs automatic application shutdown triggered by a status message.
.UNINDENT
.INDENT 0.0
.TP
.B client.shutdownMasterModule
Type: \fIstring\fP
.sp
Triggers shutdown if the module name of the received messages match
.UNINDENT
.INDENT 0.0
.TP
.B client.shutdownMasterUsername
Type: \fIstring\fP
.sp
Triggers shutdown if the user name of the received messages match
.UNINDENT
.INDENT 0.0
.TP
.B commands.target
Type: \fIstring\fP
.sp
A regular expression of all clients that should handle
a command message usually send to the GUI messaging group.
Currently this flag is only used by GUI applications to
set an artificial origin and to tell other clients to
show this origin. To let all connected clients handle the
command, \(dq.*$\(dq can be used.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBttt.*\fP
\fITravel time table related configuration. Travel time tables can\fP
\fIbe added via plugins. Built\-in interfaces are libtau and LOCSAT.\fP
\fIFor each loaded interface a list of supported models must be\fP
\fIprovided. The default list of tables for libtau is ak135 and\fP
\fIiasp91. LOCSAT\(aqs default tables are iasp91 and tab.\fP
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBttt.$name.*\fP
$name is a placeholder for the name to be used.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B ttt.$name.tables
Type: \fIlist:string\fP
.sp
The list of supported model names per interface.
.UNINDENT
.SH BINDINGS PARAMETERS
.INDENT 0.0
.TP
.B detecStream
Type: \fIstring\fP
.sp
Defines the channel code of the preferred stream used by
e.g. scautopick and scrttv. If no component code is given,
the vertical component will be fetched from inventory.
For that the channel orientation (azimuth, dip) will be used.
If that approach fails, \(aqZ\(aq will be appended and used as
fallback.
.UNINDENT
.INDENT 0.0
.TP
.B detecLocid
Type: \fIstring\fP
.sp
Defines the location code of the preferred stream used
eg by scautopick and scrttv.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBamplitudes.*\fP
\fIDefine general parameters for amplitudes of a certain type.\fP
\fICreate amplitude type profiles to define the time windows,\fP
\fIminimum signal\-to\-noise ratio, amplitude thresholds and restitution\fP
\fIfor measuring amplitudes of a certain type.\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B amplitudes.saturationThreshold
Default: \fBfalse\fP
.sp
Unit: \fIcounts; %\fP
.sp
Type: \fIstring\fP
.sp
Defines the saturation threshold for the optional saturation check.
By default the saturation check is disabled but giving a value above
0 will enable it. Waveforms that are saturated are not used
for amplitude calculations.
.sp
This value can either be an absolute value of counts such
as \(dq100000\(dq counts or a relative value
(optionally in percent) with respect to the number of
effective bits, e.g. \(dq0.8@23\(dq or \(dq80%@23\(dq.
The first version uses 1**23 * 0.8 whereas the latter
uses 1**23 * 80/100.
.sp
The boolean value \(dqfalse\(dq explicitly disables
the check.
.UNINDENT
.INDENT 0.0
.TP
.B amplitudes.enable
Default: \fBtrue\fP
.sp
Type: \fIboolean\fP
.sp
Defines if amplitude calculation is enabled. If disabled,
this station will be skipped for amplitudes and magnitudes.
.UNINDENT
.INDENT 0.0
.TP
.B amplitudes.enableResponses
Default: \fBfalse\fP
.sp
Type: \fIboolean\fP
.sp
Activates deconvolution for this station. If no responses are
configured, an error is raised and the data is not processed.
This flag will be overridden by the type specific flag
(see Amplitude type profile).
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBamplitudes.$name.*\fP
\fIAn amplitude profile configures global parameters for a\fP
\fIparticular amplitude type. The available amplitude types\fP
\fIare not fixed and can be extended by plugins. The name of\fP
\fIthe type must match the one defined in the corresponding\fP
\fIAmplitudeProcessor.\fP
$name is a placeholder for the name to be used.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B amplitudes.$name.saturationThreshold
Default: \fBfalse\fP
.sp
Unit: \fIcounts; %\fP
.sp
Type: \fIstring\fP
.sp
Defines the saturation threshold for the optional saturation check.
By default the saturation check is disabled but giving a value above
0 will enable it. Waveforms that are saturated are not used
for amplitude calculations.
.sp
This value can either be an absolute value of counts such
as \(dq100000\(dq counts or a relative value
(optionally in percent) with respect to the number of
effective bits, e.g. \(dq0.8@23\(dq or \(dq80%@23\(dq.
The first version uses 1**23 * 0.8 whereas the latter
uses 1**23 * 80/100.
.sp
The boolean value \(dqfalse\(dq explicitly disables
the check.
.UNINDENT
.INDENT 0.0
.TP
.B amplitudes.$name.enable
Default: \fBtrue\fP
.sp
Type: \fIboolean\fP
.sp
Defines if amplitude calculation of certain type is enabled.
.UNINDENT
.INDENT 0.0
.TP
.B amplitudes.$name.enableResponses
Default: \fBfalse\fP
.sp
Type: \fIboolean\fP
.sp
Activates deconvolution for this amplitude type. If not
set the global flag \(dqamplitudes.enableResponses\(dq
will be used instead.
.UNINDENT
.INDENT 0.0
.TP
.B amplitudes.$name.minSNR
Type: \fIdouble\fP
.sp
Defines the mininum SNR to be reached to compute the
amplitudes. This value is amplitude type specific and
has no global default value.
.UNINDENT
.INDENT 0.0
.TP
.B amplitudes.$name.noiseBegin
Unit: \fIs\fP
.sp
Type: \fIdouble\fP
.sp
Overrides the default time (relative to the trigger
time) of the begin of the noise window used to compute
the noise offset and noise amplitude. Each amplitude
processor sets its own noise time window and this option
should only be changed if you know what you are doing.
.UNINDENT
.INDENT 0.0
.TP
.B amplitudes.$name.noiseEnd
Unit: \fIs\fP
.sp
Type: \fIdouble\fP
.sp
Overrides the default time (relative to the trigger
time) of the end of the noise window used to compute
the noise offset and noise amplitude. Each amplitude
processor sets its own noise time window and this option
should only be changed if you know what you are doing.
.UNINDENT
.INDENT 0.0
.TP
.B amplitudes.$name.signalBegin
Unit: \fIs\fP
.sp
Type: \fIdouble\fP
.sp
Overrides the default time (relative to the trigger
time) of the begin of the signal window used to compute
the final amplitude. Each amplitude processor sets its
own signal time window and this option should only be
changed if you know what you are doing.
.UNINDENT
.INDENT 0.0
.TP
.B amplitudes.$name.signalEnd
Unit: \fIs\fP
.sp
Type: \fIdouble\fP
.sp
Overrides the default time (relative to the trigger
time) of the end of the signal window used to compute
the final amplitude. Each amplitude processor sets its
own signal time window and this option should only be
changed if you know what you are doing.
.UNINDENT
.INDENT 0.0
.TP
.B amplitudes.$name.minDist
Unit: \fIdeg\fP
.sp
Type: \fIdouble\fP
.sp
The minimum distance required to compute an amplitude.
This settings has no effect with e.g. scautopick as there
is no information about the source of the event to compute
the distance. The default value is implementation
specific.
.UNINDENT
.INDENT 0.0
.TP
.B amplitudes.$name.maxDist
Unit: \fIdeg\fP
.sp
Type: \fIdouble\fP
.sp
The maximum distance allowed to compute an amplitude.
This settings has no effect with e.g. scautopick as there
is no information about the source of the event to compute
the distance. The default value is implementation
specific.
.UNINDENT
.INDENT 0.0
.TP
.B amplitudes.$name.minDepth
Unit: \fIkm\fP
.sp
Type: \fIdouble\fP
.sp
The minimum depth required to compute an amplitude.
This settings has no effect with e.g. scautopick as there
is no information about the source of the event to
retrieve the depth. The default value is implementation
specific.
.UNINDENT
.INDENT 0.0
.TP
.B amplitudes.$name.maxDepth
Unit: \fIkm\fP
.sp
Type: \fIdouble\fP
.sp
The maximum depth allowed to compute an amplitude.
This settings has no effect with e.g. scautopick as there
is no information about the source of the event to
retrieve the depth. The default value is implementation
specific.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBamplitudes.$name.resp.*\fP
\fISeveral parameters if usage of full responses is enabled.\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B amplitudes.$name.resp.taper
Default: \fB5\fP
.sp
Unit: \fIs\fP
.sp
Defines the length of the taper at either side of the
waveform. The length will be added to the data
request: start \- taper and end + taper.
.UNINDENT
.INDENT 0.0
.TP
.B amplitudes.$name.resp.minFreq
Default: \fB0.00833333\fP
.sp
Unit: \fIHz\fP
.sp
After data are converted in to the frequency domain that
minimum frequency defines the end of the left\-side cosine taper for
the frequency spectrum. The taper applies from 0Hz to {minFreq}Hz.
A value of 0 or lower disables that taper.
.UNINDENT
.INDENT 0.0
.TP
.B amplitudes.$name.resp.maxFreq
Default: \fB0\fP
.sp
Unit: \fIHz\fP
.sp
After data are converted in to the frequency domain that
maximum frequency defines the start of the right\-side cosine taper for
the frequency spectrum. The taper applies from {maxFreq}Hz to {fNyquist}Hz.
A value of 0 or lower disables that taper.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBamplitudes.resp.*\fP
\fISeveral parameters if usage of full responses is enabled.\fP
\fIThe parameters of this group will be overridden by type\fP
\fIspecific settings if given (see Amplitude type profile).\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B amplitudes.resp.taper
Default: \fB5\fP
.sp
Unit: \fIs\fP
.sp
Defines the length of the taper at either side of the
waveform. The length will be added to the data
request: start \- taper and end + taper.
.UNINDENT
.INDENT 0.0
.TP
.B amplitudes.resp.minFreq
Default: \fB0.00833333\fP
.sp
Unit: \fIHz\fP
.sp
After data are converted in to the frequency domain that
minimum frequency defines the end of the left\-side cosine taper for
the frequency spectrum. The taper applies from 0Hz to {minFreq}Hz.
A value of 0 or lower disables that taper.
.UNINDENT
.INDENT 0.0
.TP
.B amplitudes.resp.maxFreq
Default: \fB0\fP
.sp
Unit: \fIHz\fP
.sp
After data are converted in to the frequency domain that
maximum frequency defines the start of the right\-side cosine taper for
the frequency spectrum. The taper applies from {maxFreq}Hz to {fNyquist}Hz.
A value of 0 or lower disables that taper.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBamplitudes.WoodAnderson.*\fP
\fIAllows to configure the Wood\-Anderson seismometer response.\fP
\fIThe default values are according to the version of\fP
\fIGutenberg (1935). The newer version by Uhrhammer and\fP
\fICollins (1990) is part of the IASPEI Magnitude\fP
\fIWorking Group recommendations of 2011 September 9. This\fP
\fIversion uses gain=2800, T0=0.8, h=0.8.\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B amplitudes.WoodAnderson.gain
Default: \fB2800\fP
.sp
Type: \fIdouble\fP
.sp
The gain of the Wood\-Anderson response.
.UNINDENT
.INDENT 0.0
.TP
.B amplitudes.WoodAnderson.T0
Default: \fB0.8\fP
.sp
Unit: \fIs\fP
.sp
Type: \fIdouble\fP
.sp
The eigen period of the Wood\-Anderson seismometer.
.UNINDENT
.INDENT 0.0
.TP
.B amplitudes.WoodAnderson.h
Default: \fB0.8\fP
.sp
Type: \fIdouble\fP
.sp
The damping constant of the Wood\-Anderson seismometer.
.UNINDENT
.INDENT 0.0
.TP
.B amplitudes.ML.absMax
Default: \fBtrue\fP
.sp
Type: \fIboolean\fP
.sp
Whether to use the absolute maximum of the filtered WA
trace or the difference of the maximum and minimum value
of the signal window.
.UNINDENT
.INDENT 0.0
.TP
.B amplitudes.ML.measureType
Default: \fBAbsMax\fP
.sp
Type: \fIstring\fP
.sp
This parameter allows to set how the amplitude is measured.
Either by finding the absolute maximum of the demeaned
trace (AbsMax), the difference of maximum and minimum of
the signal window (MinMax) or the maximum peak\-trough
of one cycle (PeakTrough).
.sp
Note that if absMax is already explicitly configured, this
parameter has no effect.
.UNINDENT
.INDENT 0.0
.TP
.B amplitudes.ML.combiner
Default: \fBaverage\fP
.sp
Type: \fIstring\fP
.sp
Defines the combiner operation for the amplitudes measured
on either both horizontal component. The default is to
use the average. Allowed values are: \(dqaverage\(dq,
\(dqmin\(dq, \(dqmax\(dq and \(dqgeometric_mean\(dq.
\(dqgeometric_mean\(dq corresponds to averaging single\-trace
magnitudes instead of their amplitudes.
.UNINDENT
.INDENT 0.0
.TP
.B amplitudes.MLv.absMax
Default: \fBtrue\fP
.sp
Type: \fIboolean\fP
.sp
Whether to use the absolute maximum of the filtered WA
trace or the difference of the maximum and minimum value
of the signal window.
.UNINDENT
.INDENT 0.0
.TP
.B amplitudes.MLv.measureType
Default: \fBAbsMax\fP
.sp
Type: \fIstring\fP
.sp
This parameter allows to set how the amplitude is measured.
Either by finding the absolute maximum of the demeaned
trace (AbsMax), the difference of maximum and minimum of
the signal window (MinMax) or the maximum peak\-trough
of one cycle (PeakTrough).
.sp
Note that if absMax is already explicitly configured, this
parameter has no effect.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBmagnitudes.*\fP
\fIDefine magnitude parameters independent of amplitude\-type profiles.\fP
\fIFor magnitude correction parameters, e.g. network of station corrections,\fP
\fIcreate a magnitude type profile.\fP
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBmagnitudes.$name.*\fP
\fIA magnitude profile configures global parameters for a\fP
\fIparticular magnitude type. The available magnitude types\fP
\fIare not fixed and can be extended by plugins. The name of\fP
\fIthe type must match the one defined in the corresponding\fP
\fIMagnitudeProcessor.\fP
$name is a placeholder for the name to be used.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B magnitudes.$name.multiplier
Default: \fB1\fP
.sp
Type: \fIdouble\fP
.sp
Part of the magnitude station correction. The final
magnitude value is multiplier*M+offset. This value
is usually not required but is here for completeness.
.UNINDENT
.INDENT 0.0
.TP
.B magnitudes.$name.offset
Default: \fB0\fP
.sp
Type: \fIdouble\fP
.sp
Part of the magnitude station correction. The final
magnitude value is multiplier*M+offset. This value
can be used to correct station magnitudes.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBpicker.BK.*\fP
\fIBkpicker is an implementation of the Baer/Kradolfer picker adapted\fP
\fIto SeisComP. It was created by converting Manfred Baers from Fortran\fP
\fIto C++ and inserting it as a replacement for the picker algorithm.\fP
\fIThe picker interface name to be used in configuration files is\fP
\fI\(dqBK\(dq.\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B picker.BK.noiseBegin
Default: \fB0\fP
.sp
Unit: \fIs\fP
.sp
Type: \fIdouble\fP
.sp
Overrides the relative data acquisition time (relative to the triggering
pick). This adds a margin to the actual processing and is useful
to initialize the filter (e.g. bandpass). The data is not used
at all until signalBegin is reached. The data time window start
is the minimum of noiseBegin and signalBegin.
.UNINDENT
.INDENT 0.0
.TP
.B picker.BK.signalBegin
Default: \fB\-20\fP
.sp
Unit: \fIs\fP
.sp
Type: \fIdouble\fP
.sp
Overrides the default time (relative to the trigger
time) of the begin of the signal window used to pick.
.UNINDENT
.INDENT 0.0
.TP
.B picker.BK.signalEnd
Default: \fB80\fP
.sp
Unit: \fIs\fP
.sp
Type: \fIdouble\fP
.sp
Overrides the default time (relative to the trigger
time) of the begin of the signal window used to pick.
.UNINDENT
.INDENT 0.0
.TP
.B picker.BK.filterType
Default: \fBBP\fP
.sp
Type: \fIstring\fP
.sp
BP (Bandpass) is currently the only option.
.UNINDENT
.INDENT 0.0
.TP
.B picker.BK.filterPoles
Default: \fB2\fP
.sp
Type: \fIint\fP
.sp
Number of poles.
.UNINDENT
.INDENT 0.0
.TP
.B picker.BK.f1
Default: \fB5\fP
.sp
Unit: \fIHz\fP
.sp
Type: \fIdouble\fP
.sp
Bandpass lower cutoff freq. in Hz.
.UNINDENT
.INDENT 0.0
.TP
.B picker.BK.f2
Default: \fB20\fP
.sp
Unit: \fIHz\fP
.sp
Type: \fIdouble\fP
.sp
Bandpass upper cutoff freq. in Hz.
.UNINDENT
.INDENT 0.0
.TP
.B picker.BK.thrshl1
Default: \fB10\fP
.sp
Type: \fIdouble\fP
.sp
Threshold to trigger for pick (c.f. paper), default 10
.UNINDENT
.INDENT 0.0
.TP
.B picker.BK.thrshl2
Default: \fB20\fP
.sp
Type: \fIdouble\fP
.sp
Threshold for updating sigma  (c.f. paper), default 20
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBpicker.AIC.*\fP
\fIAIC picker is an implementation using the simple non\-AR algorithm of Maeda (1985),\fP
\fIsee paper of Zhang et al. (2003) in BSSA. The picker interface name to be used in configuration files is\fP
\fI\(dqAIC\(dq.\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B picker.AIC.noiseBegin
Default: \fB0\fP
.sp
Unit: \fIs\fP
.sp
Type: \fIdouble\fP
.sp
Overrides the relative data acquisition time (relative to the triggering
pick). This adds a margin to the actual processing and is useful
to initialize the filter (e.g. bandpass). The data is not used
at all until signalBegin is reached. The data time window start
is the minimum of noiseBegin and signalBegin.
.UNINDENT
.INDENT 0.0
.TP
.B picker.AIC.signalBegin
Default: \fB\-30\fP
.sp
Unit: \fIs\fP
.sp
Type: \fIdouble\fP
.sp
Overrides the default time (relative to the trigger
time) of the begin of the signal window used to pick.
.UNINDENT
.INDENT 0.0
.TP
.B picker.AIC.signalEnd
Default: \fB10\fP
.sp
Unit: \fIs\fP
.sp
Type: \fIdouble\fP
.sp
Overrides the default time (relative to the trigger
time) of the begin of the signal window used to pick.
.UNINDENT
.INDENT 0.0
.TP
.B picker.AIC.filter
Type: \fIstring\fP
.sp
Overrides the default filter which is \(dqraw\(dq. The typical filter grammar can be used.
.UNINDENT
.INDENT 0.0
.TP
.B picker.AIC.minSNR
Default: \fB3\fP
.sp
Type: \fIdouble\fP
.sp
Defines the mininum SNR.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBspicker.L2.*\fP
\fIL2 is an algorithm to pick S\-phases based on existing P\-phases. The\fP
\fIpicker interface name to be used in configuration files is\fP
\fI\(dqS\-L2\(dq.\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B spicker.L2.noiseBegin
Default: \fB\-10\fP
.sp
Unit: \fIs\fP
.sp
Type: \fIdouble\fP
.sp
Overrides the relative data processing start time (relative to the triggering
pick). This adds a margin to the actual processing and is useful
to initialize the filter (e.g. bandpass). The data is not used
at all until signalBegin is reached. The data time window start
is the minimum of noiseBegin and signalBegin.
.UNINDENT
.INDENT 0.0
.TP
.B spicker.L2.signalBegin
Default: \fB0\fP
.sp
Unit: \fIs\fP
.sp
Type: \fIdouble\fP
.sp
Overrides the relative start time (relative to the triggering
pick) of the begin of the signal processing.
.UNINDENT
.INDENT 0.0
.TP
.B spicker.L2.signalEnd
Default: \fB60\fP
.sp
Unit: \fIs\fP
.sp
Type: \fIdouble\fP
.sp
Overrides the relative end time (relative to the triggering
pick) of the end of the signal window used to pick.
.UNINDENT
.INDENT 0.0
.TP
.B spicker.L2.filter
Default: \fBBW(4,0.3,1.0)\fP
.sp
Type: \fIstring\fP
.sp
Configures the filter used to compute the L2 and to pick
the onset (with AIC) after the detector triggered.
.UNINDENT
.INDENT 0.0
.TP
.B spicker.L2.detecFilter
Default: \fBSTALTA(1,10)\fP
.sp
Type: \fIstring\fP
.sp
Configures the detector in the filtered L2. This filter is
applied on top of the base L2 filter.
.UNINDENT
.INDENT 0.0
.TP
.B spicker.L2.threshold
Default: \fB3\fP
.sp
Type: \fIdouble\fP
.sp
The detector threshold that triggers the AIC picker.
.UNINDENT
.INDENT 0.0
.TP
.B spicker.L2.timeCorr
Default: \fB0\fP
.sp
Unit: \fIs\fP
.sp
Type: \fIdouble\fP
.sp
The time correction (in seconds) added to the detection time
before AIC time window is computed.
.UNINDENT
.INDENT 0.0
.TP
.B spicker.L2.marginAIC
Default: \fB5\fP
.sp
Unit: \fIs\fP
.sp
Type: \fIdouble\fP
.sp
The AIC time window around the detection used to pick. If 0 AIC is not used.
.UNINDENT
.INDENT 0.0
.TP
.B spicker.L2.minSNR
Default: \fB15\fP
.sp
Type: \fIdouble\fP
.sp
Defines the mininum SNR as returned from AIC.
.UNINDENT
.INDENT 0.0
.TP
.B detecStream
Type: \fIstring\fP
.sp
Defines the channel code of the preferred stream used by
e.g. scautopick and scrttv. If no component code is given,
the vertical component will be fetched from inventory.
For that the channel orientation (azimuth, dip) will be used.
If that approach fails, \(aqZ\(aq will be appended and used as
fallback.
.UNINDENT
.INDENT 0.0
.TP
.B detecLocid
Type: \fIstring\fP
.sp
Defines the location code of the preferred stream used
eg by scautopick and scrttv.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBamplitudes.*\fP
\fIDefine general parameters for amplitudes of a certain type.\fP
\fICreate amplitude type profiles to define the time windows,\fP
\fIminimum signal\-to\-noise ratio, amplitude thresholds and restitution\fP
\fIfor measuring amplitudes of a certain type.\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B amplitudes.saturationThreshold
Default: \fBfalse\fP
.sp
Unit: \fIcounts; %\fP
.sp
Type: \fIstring\fP
.sp
Defines the saturation threshold for the optional saturation check.
By default the saturation check is disabled but giving a value above
0 will enable it. Waveforms that are saturated are not used
for amplitude calculations.
.sp
This value can either be an absolute value of counts such
as \(dq100000\(dq counts or a relative value
(optionally in percent) with respect to the number of
effective bits, e.g. \(dq0.8@23\(dq or \(dq80%@23\(dq.
The first version uses 1**23 * 0.8 whereas the latter
uses 1**23 * 80/100.
.sp
The boolean value \(dqfalse\(dq explicitly disables
the check.
.UNINDENT
.INDENT 0.0
.TP
.B amplitudes.enable
Default: \fBtrue\fP
.sp
Type: \fIboolean\fP
.sp
Defines if amplitude calculation is enabled. If disabled,
this station will be skipped for amplitudes and magnitudes.
.UNINDENT
.INDENT 0.0
.TP
.B amplitudes.enableResponses
Default: \fBfalse\fP
.sp
Type: \fIboolean\fP
.sp
Activates deconvolution for this station. If no responses are
configured, an error is raised and the data is not processed.
This flag will be overridden by the type specific flag
(see Amplitude type profile).
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBamplitudes.$name.*\fP
\fIAn amplitude profile configures global parameters for a\fP
\fIparticular amplitude type. The available amplitude types\fP
\fIare not fixed and can be extended by plugins. The name of\fP
\fIthe type must match the one defined in the corresponding\fP
\fIAmplitudeProcessor.\fP
$name is a placeholder for the name to be used.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B amplitudes.$name.saturationThreshold
Default: \fBfalse\fP
.sp
Unit: \fIcounts; %\fP
.sp
Type: \fIstring\fP
.sp
Defines the saturation threshold for the optional saturation check.
By default the saturation check is disabled but giving a value above
0 will enable it. Waveforms that are saturated are not used
for amplitude calculations.
.sp
This value can either be an absolute value of counts such
as \(dq100000\(dq counts or a relative value
(optionally in percent) with respect to the number of
effective bits, e.g. \(dq0.8@23\(dq or \(dq80%@23\(dq.
The first version uses 1**23 * 0.8 whereas the latter
uses 1**23 * 80/100.
.sp
The boolean value \(dqfalse\(dq explicitly disables
the check.
.UNINDENT
.INDENT 0.0
.TP
.B amplitudes.$name.enable
Default: \fBtrue\fP
.sp
Type: \fIboolean\fP
.sp
Defines if amplitude calculation of certain type is enabled.
.UNINDENT
.INDENT 0.0
.TP
.B amplitudes.$name.enableResponses
Default: \fBfalse\fP
.sp
Type: \fIboolean\fP
.sp
Activates deconvolution for this amplitude type. If not
set the global flag \(dqamplitudes.enableResponses\(dq
will be used instead.
.UNINDENT
.INDENT 0.0
.TP
.B amplitudes.$name.minSNR
Type: \fIdouble\fP
.sp
Defines the mininum SNR to be reached to compute the
amplitudes. This value is amplitude type specific and
has no global default value.
.UNINDENT
.INDENT 0.0
.TP
.B amplitudes.$name.noiseBegin
Unit: \fIs\fP
.sp
Type: \fIdouble\fP
.sp
Overrides the default time (relative to the trigger
time) of the begin of the noise window used to compute
the noise offset and noise amplitude. Each amplitude
processor sets its own noise time window and this option
should only be changed if you know what you are doing.
.UNINDENT
.INDENT 0.0
.TP
.B amplitudes.$name.noiseEnd
Unit: \fIs\fP
.sp
Type: \fIdouble\fP
.sp
Overrides the default time (relative to the trigger
time) of the end of the noise window used to compute
the noise offset and noise amplitude. Each amplitude
processor sets its own noise time window and this option
should only be changed if you know what you are doing.
.UNINDENT
.INDENT 0.0
.TP
.B amplitudes.$name.signalBegin
Unit: \fIs\fP
.sp
Type: \fIdouble\fP
.sp
Overrides the default time (relative to the trigger
time) of the begin of the signal window used to compute
the final amplitude. Each amplitude processor sets its
own signal time window and this option should only be
changed if you know what you are doing.
.UNINDENT
.INDENT 0.0
.TP
.B amplitudes.$name.signalEnd
Unit: \fIs\fP
.sp
Type: \fIdouble\fP
.sp
Overrides the default time (relative to the trigger
time) of the end of the signal window used to compute
the final amplitude. Each amplitude processor sets its
own signal time window and this option should only be
changed if you know what you are doing.
.UNINDENT
.INDENT 0.0
.TP
.B amplitudes.$name.minDist
Unit: \fIdeg\fP
.sp
Type: \fIdouble\fP
.sp
The minimum distance required to compute an amplitude.
This settings has no effect with e.g. scautopick as there
is no information about the source of the event to compute
the distance. The default value is implementation
specific.
.UNINDENT
.INDENT 0.0
.TP
.B amplitudes.$name.maxDist
Unit: \fIdeg\fP
.sp
Type: \fIdouble\fP
.sp
The maximum distance allowed to compute an amplitude.
This settings has no effect with e.g. scautopick as there
is no information about the source of the event to compute
the distance. The default value is implementation
specific.
.UNINDENT
.INDENT 0.0
.TP
.B amplitudes.$name.minDepth
Unit: \fIkm\fP
.sp
Type: \fIdouble\fP
.sp
The minimum depth required to compute an amplitude.
This settings has no effect with e.g. scautopick as there
is no information about the source of the event to
retrieve the depth. The default value is implementation
specific.
.UNINDENT
.INDENT 0.0
.TP
.B amplitudes.$name.maxDepth
Unit: \fIkm\fP
.sp
Type: \fIdouble\fP
.sp
The maximum depth allowed to compute an amplitude.
This settings has no effect with e.g. scautopick as there
is no information about the source of the event to
retrieve the depth. The default value is implementation
specific.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBamplitudes.$name.resp.*\fP
\fISeveral parameters if usage of full responses is enabled.\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B amplitudes.$name.resp.taper
Default: \fB5\fP
.sp
Unit: \fIs\fP
.sp
Defines the length of the taper at either side of the
waveform. The length will be added to the data
request: start \- taper and end + taper.
.UNINDENT
.INDENT 0.0
.TP
.B amplitudes.$name.resp.minFreq
Default: \fB0.00833333\fP
.sp
Unit: \fIHz\fP
.sp
After data are converted in to the frequency domain that
minimum frequency defines the end of the left\-side cosine taper for
the frequency spectrum. The taper applies from 0Hz to {minFreq}Hz.
A value of 0 or lower disables that taper.
.UNINDENT
.INDENT 0.0
.TP
.B amplitudes.$name.resp.maxFreq
Default: \fB0\fP
.sp
Unit: \fIHz\fP
.sp
After data are converted in to the frequency domain that
maximum frequency defines the start of the right\-side cosine taper for
the frequency spectrum. The taper applies from {maxFreq}Hz to {fNyquist}Hz.
A value of 0 or lower disables that taper.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBamplitudes.resp.*\fP
\fISeveral parameters if usage of full responses is enabled.\fP
\fIThe parameters of this group will be overridden by type\fP
\fIspecific settings if given (see Amplitude type profile).\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B amplitudes.resp.taper
Default: \fB5\fP
.sp
Unit: \fIs\fP
.sp
Defines the length of the taper at either side of the
waveform. The length will be added to the data
request: start \- taper and end + taper.
.UNINDENT
.INDENT 0.0
.TP
.B amplitudes.resp.minFreq
Default: \fB0.00833333\fP
.sp
Unit: \fIHz\fP
.sp
After data are converted in to the frequency domain that
minimum frequency defines the end of the left\-side cosine taper for
the frequency spectrum. The taper applies from 0Hz to {minFreq}Hz.
A value of 0 or lower disables that taper.
.UNINDENT
.INDENT 0.0
.TP
.B amplitudes.resp.maxFreq
Default: \fB0\fP
.sp
Unit: \fIHz\fP
.sp
After data are converted in to the frequency domain that
maximum frequency defines the start of the right\-side cosine taper for
the frequency spectrum. The taper applies from {maxFreq}Hz to {fNyquist}Hz.
A value of 0 or lower disables that taper.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBamplitudes.WoodAnderson.*\fP
\fIAllows to configure the Wood\-Anderson seismometer response.\fP
\fIThe default values are according to the version of\fP
\fIGutenberg (1935). The newer version by Uhrhammer and\fP
\fICollins (1990) is part of the IASPEI Magnitude\fP
\fIWorking Group recommendations of 2011 September 9. This\fP
\fIversion uses gain=2800, T0=0.8, h=0.8.\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B amplitudes.WoodAnderson.gain
Default: \fB2800\fP
.sp
Type: \fIdouble\fP
.sp
The gain of the Wood\-Anderson response.
.UNINDENT
.INDENT 0.0
.TP
.B amplitudes.WoodAnderson.T0
Default: \fB0.8\fP
.sp
Unit: \fIs\fP
.sp
Type: \fIdouble\fP
.sp
The eigen period of the Wood\-Anderson seismometer.
.UNINDENT
.INDENT 0.0
.TP
.B amplitudes.WoodAnderson.h
Default: \fB0.8\fP
.sp
Type: \fIdouble\fP
.sp
The damping constant of the Wood\-Anderson seismometer.
.UNINDENT
.INDENT 0.0
.TP
.B amplitudes.ML.absMax
Default: \fBtrue\fP
.sp
Type: \fIboolean\fP
.sp
Whether to use the absolute maximum of the filtered WA
trace or the difference of the maximum and minimum value
of the signal window.
.UNINDENT
.INDENT 0.0
.TP
.B amplitudes.ML.measureType
Default: \fBAbsMax\fP
.sp
Type: \fIstring\fP
.sp
This parameter allows to set how the amplitude is measured.
Either by finding the absolute maximum of the demeaned
trace (AbsMax), the difference of maximum and minimum of
the signal window (MinMax) or the maximum peak\-trough
of one cycle (PeakTrough).
.sp
Note that if absMax is already explicitly configured, this
parameter has no effect.
.UNINDENT
.INDENT 0.0
.TP
.B amplitudes.ML.combiner
Default: \fBaverage\fP
.sp
Type: \fIstring\fP
.sp
Defines the combiner operation for the amplitudes measured
on either both horizontal component. The default is to
use the average. Allowed values are: \(dqaverage\(dq,
\(dqmin\(dq, \(dqmax\(dq and \(dqgeometric_mean\(dq.
\(dqgeometric_mean\(dq corresponds to averaging single\-trace
magnitudes instead of their amplitudes.
.UNINDENT
.INDENT 0.0
.TP
.B amplitudes.MLv.absMax
Default: \fBtrue\fP
.sp
Type: \fIboolean\fP
.sp
Whether to use the absolute maximum of the filtered WA
trace or the difference of the maximum and minimum value
of the signal window.
.UNINDENT
.INDENT 0.0
.TP
.B amplitudes.MLv.measureType
Default: \fBAbsMax\fP
.sp
Type: \fIstring\fP
.sp
This parameter allows to set how the amplitude is measured.
Either by finding the absolute maximum of the demeaned
trace (AbsMax), the difference of maximum and minimum of
the signal window (MinMax) or the maximum peak\-trough
of one cycle (PeakTrough).
.sp
Note that if absMax is already explicitly configured, this
parameter has no effect.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBmagnitudes.*\fP
\fIDefine magnitude parameters independent of amplitude\-type profiles.\fP
\fIFor magnitude correction parameters, e.g. network of station corrections,\fP
\fIcreate a magnitude type profile.\fP
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBmagnitudes.$name.*\fP
\fIA magnitude profile configures global parameters for a\fP
\fIparticular magnitude type. The available magnitude types\fP
\fIare not fixed and can be extended by plugins. The name of\fP
\fIthe type must match the one defined in the corresponding\fP
\fIMagnitudeProcessor.\fP
$name is a placeholder for the name to be used.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B magnitudes.$name.multiplier
Default: \fB1\fP
.sp
Type: \fIdouble\fP
.sp
Part of the magnitude station correction. The final
magnitude value is multiplier*M+offset. This value
is usually not required but is here for completeness.
.UNINDENT
.INDENT 0.0
.TP
.B magnitudes.$name.offset
Default: \fB0\fP
.sp
Type: \fIdouble\fP
.sp
Part of the magnitude station correction. The final
magnitude value is multiplier*M+offset. This value
can be used to correct station magnitudes.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBpicker.BK.*\fP
\fIBkpicker is an implementation of the Baer/Kradolfer picker adapted\fP
\fIto SeisComP. It was created by converting Manfred Baers from Fortran\fP
\fIto C++ and inserting it as a replacement for the picker algorithm.\fP
\fIThe picker interface name to be used in configuration files is\fP
\fI\(dqBK\(dq.\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B picker.BK.noiseBegin
Default: \fB0\fP
.sp
Unit: \fIs\fP
.sp
Type: \fIdouble\fP
.sp
Overrides the relative data acquisition time (relative to the triggering
pick). This adds a margin to the actual processing and is useful
to initialize the filter (e.g. bandpass). The data is not used
at all until signalBegin is reached. The data time window start
is the minimum of noiseBegin and signalBegin.
.UNINDENT
.INDENT 0.0
.TP
.B picker.BK.signalBegin
Default: \fB\-20\fP
.sp
Unit: \fIs\fP
.sp
Type: \fIdouble\fP
.sp
Overrides the default time (relative to the trigger
time) of the begin of the signal window used to pick.
.UNINDENT
.INDENT 0.0
.TP
.B picker.BK.signalEnd
Default: \fB80\fP
.sp
Unit: \fIs\fP
.sp
Type: \fIdouble\fP
.sp
Overrides the default time (relative to the trigger
time) of the begin of the signal window used to pick.
.UNINDENT
.INDENT 0.0
.TP
.B picker.BK.filterType
Default: \fBBP\fP
.sp
Type: \fIstring\fP
.sp
BP (Bandpass) is currently the only option.
.UNINDENT
.INDENT 0.0
.TP
.B picker.BK.filterPoles
Default: \fB2\fP
.sp
Type: \fIint\fP
.sp
Number of poles.
.UNINDENT
.INDENT 0.0
.TP
.B picker.BK.f1
Default: \fB5\fP
.sp
Unit: \fIHz\fP
.sp
Type: \fIdouble\fP
.sp
Bandpass lower cutoff freq. in Hz.
.UNINDENT
.INDENT 0.0
.TP
.B picker.BK.f2
Default: \fB20\fP
.sp
Unit: \fIHz\fP
.sp
Type: \fIdouble\fP
.sp
Bandpass upper cutoff freq. in Hz.
.UNINDENT
.INDENT 0.0
.TP
.B picker.BK.thrshl1
Default: \fB10\fP
.sp
Type: \fIdouble\fP
.sp
Threshold to trigger for pick (c.f. paper), default 10
.UNINDENT
.INDENT 0.0
.TP
.B picker.BK.thrshl2
Default: \fB20\fP
.sp
Type: \fIdouble\fP
.sp
Threshold for updating sigma  (c.f. paper), default 20
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBpicker.AIC.*\fP
\fIAIC picker is an implementation using the simple non\-AR algorithm of Maeda (1985),\fP
\fIsee paper of Zhang et al. (2003) in BSSA. The picker interface name to be used in configuration files is\fP
\fI\(dqAIC\(dq.\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B picker.AIC.noiseBegin
Default: \fB0\fP
.sp
Unit: \fIs\fP
.sp
Type: \fIdouble\fP
.sp
Overrides the relative data acquisition time (relative to the triggering
pick). This adds a margin to the actual processing and is useful
to initialize the filter (e.g. bandpass). The data is not used
at all until signalBegin is reached. The data time window start
is the minimum of noiseBegin and signalBegin.
.UNINDENT
.INDENT 0.0
.TP
.B picker.AIC.signalBegin
Default: \fB\-30\fP
.sp
Unit: \fIs\fP
.sp
Type: \fIdouble\fP
.sp
Overrides the default time (relative to the trigger
time) of the begin of the signal window used to pick.
.UNINDENT
.INDENT 0.0
.TP
.B picker.AIC.signalEnd
Default: \fB10\fP
.sp
Unit: \fIs\fP
.sp
Type: \fIdouble\fP
.sp
Overrides the default time (relative to the trigger
time) of the begin of the signal window used to pick.
.UNINDENT
.INDENT 0.0
.TP
.B picker.AIC.filter
Type: \fIstring\fP
.sp
Overrides the default filter which is \(dqraw\(dq. The typical filter grammar can be used.
.UNINDENT
.INDENT 0.0
.TP
.B picker.AIC.minSNR
Default: \fB3\fP
.sp
Type: \fIdouble\fP
.sp
Defines the mininum SNR.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBspicker.L2.*\fP
\fIL2 is an algorithm to pick S\-phases based on existing P\-phases. The\fP
\fIpicker interface name to be used in configuration files is\fP
\fI\(dqS\-L2\(dq.\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B spicker.L2.noiseBegin
Default: \fB\-10\fP
.sp
Unit: \fIs\fP
.sp
Type: \fIdouble\fP
.sp
Overrides the relative data processing start time (relative to the triggering
pick). This adds a margin to the actual processing and is useful
to initialize the filter (e.g. bandpass). The data is not used
at all until signalBegin is reached. The data time window start
is the minimum of noiseBegin and signalBegin.
.UNINDENT
.INDENT 0.0
.TP
.B spicker.L2.signalBegin
Default: \fB0\fP
.sp
Unit: \fIs\fP
.sp
Type: \fIdouble\fP
.sp
Overrides the relative start time (relative to the triggering
pick) of the begin of the signal processing.
.UNINDENT
.INDENT 0.0
.TP
.B spicker.L2.signalEnd
Default: \fB60\fP
.sp
Unit: \fIs\fP
.sp
Type: \fIdouble\fP
.sp
Overrides the relative end time (relative to the triggering
pick) of the end of the signal window used to pick.
.UNINDENT
.INDENT 0.0
.TP
.B spicker.L2.filter
Default: \fBBW(4,0.3,1.0)\fP
.sp
Type: \fIstring\fP
.sp
Configures the filter used to compute the L2 and to pick
the onset (with AIC) after the detector triggered.
.UNINDENT
.INDENT 0.0
.TP
.B spicker.L2.detecFilter
Default: \fBSTALTA(1,10)\fP
.sp
Type: \fIstring\fP
.sp
Configures the detector in the filtered L2. This filter is
applied on top of the base L2 filter.
.UNINDENT
.INDENT 0.0
.TP
.B spicker.L2.threshold
Default: \fB3\fP
.sp
Type: \fIdouble\fP
.sp
The detector threshold that triggers the AIC picker.
.UNINDENT
.INDENT 0.0
.TP
.B spicker.L2.timeCorr
Default: \fB0\fP
.sp
Unit: \fIs\fP
.sp
Type: \fIdouble\fP
.sp
The time correction (in seconds) added to the detection time
before AIC time window is computed.
.UNINDENT
.INDENT 0.0
.TP
.B spicker.L2.marginAIC
Default: \fB5\fP
.sp
Unit: \fIs\fP
.sp
Type: \fIdouble\fP
.sp
The AIC time window around the detection used to pick. If 0 AIC is not used.
.UNINDENT
.INDENT 0.0
.TP
.B spicker.L2.minSNR
Default: \fB15\fP
.sp
Type: \fIdouble\fP
.sp
Defines the mininum SNR as returned from AIC.
.UNINDENT
.SH COMMAND-LINE OPTIONS
.SS Generic
.INDENT 0.0
.TP
.B \-h, \-\-help
show help message.
.UNINDENT
.INDENT 0.0
.TP
.B \-V, \-\-version
show version information
.UNINDENT
.INDENT 0.0
.TP
.B \-\-config\-file arg
Use alternative configuration file. When this option is used
the loading of all stages is disabled. Only the given configuration
file is parsed and used. To use another name for the configuration
create a symbolic link of the application or copy it, eg scautopick \-> scautopick2.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-plugins arg
Load given plugins.
.UNINDENT
.INDENT 0.0
.TP
.B \-D, \-\-daemon
Run as daemon. This means the application will fork itself and
doesn\(aqt need to be started with &.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-auto\-shutdown arg
Enable/disable self\-shutdown because a master module shutdown. This only
works when messaging is enabled and the master module sends a shutdown
message (enabled with \-\-start\-stop\-msg for the master module).
.UNINDENT
.INDENT 0.0
.TP
.B \-\-shutdown\-master\-module arg
Sets the name of the master\-module used for auto\-shutdown. This
is the application name of the module actually started. If symlinks
are used then it is the name of the symlinked application.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-shutdown\-master\-username arg
Sets the name of the master\-username of the messaging used for
auto\-shutdown. If \(dqshutdown\-master\-module\(dq is given as well this
parameter is ignored.
.UNINDENT
.SS Verbose
.INDENT 0.0
.TP
.B \-\-verbosity arg
Verbosity level [0..4]. 0:quiet, 1:error, 2:warning, 3:info, 4:debug
.UNINDENT
.INDENT 0.0
.TP
.B \-v, \-\-v
Increase verbosity level (may be repeated, eg. \-vv)
.UNINDENT
.INDENT 0.0
.TP
.B \-q, \-\-quiet
Quiet mode: no logging output
.UNINDENT
.INDENT 0.0
.TP
.B \-\-print\-component arg
For each log entry print the component right after the
log level. By default the component output is enabled
for file output but disabled for console output.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-print\-context arg
For each log entry print the source file name and line
number.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-component arg
Limits the logging to a certain component. This option can be given more than once.
.UNINDENT
.INDENT 0.0
.TP
.B \-s, \-\-syslog
Use syslog logging back end. The output usually goes to /var/lib/messages.
.UNINDENT
.INDENT 0.0
.TP
.B \-l, \-\-lockfile arg
Path to lock file.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-console arg
Send log output to stdout.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-debug
Debug mode: \-\-verbosity=4 \-\-console=1
.UNINDENT
.INDENT 0.0
.TP
.B \-\-trace
Trace mode: \-\-verbosity=4 \-\-console=1 \-\-print\-component=1 \-\-print\-context=1
.UNINDENT
.INDENT 0.0
.TP
.B \-\-log\-file arg
Use alternative log file.
.UNINDENT
.SS Messaging
.INDENT 0.0
.TP
.B \-u, \-\-user arg
Overrides configuration parameter \fI\%connection.username\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B \-H, \-\-host arg
Overrides configuration parameter \fI\%connection.server\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B \-t, \-\-timeout arg
Overrides configuration parameter \fI\%connection.timeout\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B \-g, \-\-primary\-group arg
Overrides configuration parameter \fI\%connection.primaryGroup\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B \-S, \-\-subscribe\-group arg
A group to subscribe to. This option can be given more than once.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-content\-type arg
Overrides configuration parameter \fI\%connection.contentType\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-start\-stop\-msg arg
Sets sending of a start\- and a stop message.
.UNINDENT
.SS Database
.INDENT 0.0
.TP
.B \-\-db\-driver\-list
List all supported database drivers.
.UNINDENT
.INDENT 0.0
.TP
.B \-d, \-\-database arg
The database connection string, format: \fI\%service://user:pwd@host/database\fP\&.
\(dqservice\(dq is the name of the database driver which can be
queried with \(dq\-\-db\-driver\-list\(dq.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-config\-module arg
The configmodule to use.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-inventory\-db arg
Load the inventory from the given database or file, format: [\fI\%service://]location\fP
.UNINDENT
.INDENT 0.0
.TP
.B \-\-config\-db arg
Load the configuration from the given database or file, format: [\fI\%service://]location\fP
.UNINDENT
.SS Records
.INDENT 0.0
.TP
.B \-\-record\-driver\-list
List all supported record stream drivers
.UNINDENT
.INDENT 0.0
.TP
.B \-I, \-\-record\-url arg
The recordstream source URL, format: [\fI\%service://\fP]location[#type].
\(dqservice\(dq is the name of the recordstream driver which can be
queried with \(dq\-\-record\-driver\-list\(dq. If \(dqservice\(dq
is not given \(dq\fI\%file://\fP\(dq is used.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-record\-file arg
Specify a file as record source.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-record\-type arg
Specify a type for the records being read.
.UNINDENT
.SS Cities
.INDENT 0.0
.TP
.B \-\-city\-xml arg
The path to the cities XML file. This overrides the default
paths. Compare with the global parameter \(dqcitiesXML\(dq
.UNINDENT
.SS User interface
.INDENT 0.0
.TP
.B \-F, \-\-full\-screen
Starts the application filling the entire screen. This only works
with GUI applications.
.UNINDENT
.INDENT 0.0
.TP
.B \-N, \-\-non\-interactive
Use non\-interactive presentation mode. This only works with GUI applications.
.UNINDENT
.SH AUTHOR
GFZ Potsdam
.SH COPYRIGHT
2014, gempa GmbH
.\" Generated by docutils manpage writer.
.
