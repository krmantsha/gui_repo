.. _global:

*****************
Global parameters
*****************

The SeisComP configuration uses a unified schema to configure modules.
Modules which use the SeisComP libraries can read this configuration
directly and share global configuration options like messaging connections,
database configurations, logging and much more.
There are still some modules that do not use the libraries and are called
**standalone** modules such as :ref:`seedlink` and
:ref:`slarchive`.
They need wrappers to generate their native configuration when
:command:`seiscomp update-config` is run.

Global parameters can be used by many modules. Thus multiple configuration can be avoided.
The parameters are read from file in the following order:

#. :file:`@SYSTEMCONFIGDIR@/global.cfg`
#. :file:`@CONFIGDIR@/global.cfg`

Parameters from :file:`@CONFIGDIR@` override parameters from :file:`@SYSTEMCONFIGDIR@`.

Most :term:`trunk` modules read the configuration from the global configuration which can be overridden
by the module configuration. Read the :ref:`concept section on modules <concepts_modules>`
and the :ref:`concept section on the configuraion <concepts_configuration>` for
more details.

Though it is easy to create the configuration by directly editing the configuration
files, it is even more convenient to use a configurator.
SeisComP ships with a graphical configurator and management tool (:ref:`scconfig`)
which makes it easy to maintain
module configurations and station bindings even for large networks. It has built-in
functionality to check the state of all registered modules and to start and stop them.

The configuration is divided into three parts: :ref:`stations <global-stations>`,
:ref:`modules <global_modules>` and :ref:`bindings <global_bindings>`.

.. _global-stations:

Station meta data
=================

Station meta-data is a fundamental requirement for a seismic processing system and
for SeisComP. Read the :ref:`inventory section<concepts_inventory>` in concepts for
more details.

.. _global_modules:

Modules
=======

The concepts of :ref:`modules <concepts_modules>` and :ref:`their configuration <global_modules_config>`
is described in the :ref:`concepts section <concepts>`.

.. _global_bindings:

Bindings
========

Bindings provide specific configurations per :ref:`module <global_module_config>` and
station and even stream. Read the :ref:`bindings section <global_bindings_config>`
in concepts for more details on bindings.


Extensions
==========

Extensions add new configuration options to :term:`modules<module>`. It does
not matter how those extensions are used. Commonly a module loads a plugin,
which requires additional configuration parameters - these are provided by an extension.

There are currently extensions for the following modules, corresponding to the
plugins shown:

.. include:: /base/extensions.doc

See the documentation for each module for further information about its
extensions.



.. _global-configuration:


Plugins
=======

* :ref:`NonLinLoc <global_nonlinloc>`

  NonLinLoc locator wrapper plugin for SeisComP. NonLinLoc was written by Anthony Lomax (http://alomax.free.fr/nlloc).
* :ref:`MLh <global_mlh>`

  The MLh plugin (previously MLsed) is designed to compute amplitudes and magnitudes according to the Swiss Seismological Service (SED) standards.
* :ref:`Hypo71 <global_hypo71>`

  The traditional Hypo71PC locator with SeisComP.
* :ref:`Md <global_md>`

  Duration magnitude plugin
* :ref:`MLr <global_mlr>`

  The GNS/Geonet local magnitude
* :ref:`iLoc <global_iloc>`

  Locator in SeisComP implemented by the plugin lociloc.
* :ref:`MN <global_mn>`

  Nuttli magnitude for Canada and other Cratonic regions
* :ref:`LocExt <global_locext>`

  Locator which forwards the processing to external scripts
* :ref:`GUI <global_gui>`

  The GUI configuration plugin extends the configuration of graphical user interfaces to various options to adjust the look and feel.
* :ref:`RecordStream <global_recordstream>`

  RecordStream interface for SeisComP.
* :ref:`mB_BB <global_mb_bb>`

  Body wave magnitude  at teleseismic distances similar to mb
* :ref:`mb <global_mb>`

  Body wave magnitude at teleseismic distances
* :ref:`Ms_20 <global_ms_20>`

  Surface wave magnitude measured at around 20 s
* :ref:`MLv <global_mlv>`

  Local (Richter) magnitude measured on the vertical component
* :ref:`ML <global_ml>`

  Standard local (Richter) magnitude
* :ref:`LOCSAT <global_locsat>`

  Locator in SeisComP for computing source time and hypocenter coordinates from phase picks.
* :ref:`FixedHypocenter <global_fixedhypocenter>`

  Locator for re-computing source time with fixed hypocenter

.. _global_configuration:

Configuration
=============



.. confval:: datacenterID

   Type: *string*

   Sets the datacenter ID which is primarily used by Arclink and
   its tools. Should not contain spaces.


.. confval:: agencyID

   Type: *string*

   Defines the agency ID used to set creationInfo.agencyID in
   data model objects. Should not contain spaces.
   Default is ``GFZ``.

.. confval:: organization

   Type: *string*

   Organization name used mainly by ArcLink and SeedLink.
   Default is ``Unset``.

.. confval:: author

   Type: *string*

   Defines the author name used to set creationInfo.author in
   data model objects.
   Default is ``@appname@@@@hostname@``.

.. confval:: plugins

   Type: *list:string*

   Defines a list of modules loaded at startup.


.. confval:: cityXML

   Type: *string*

   Path to the cities.xml file. If undefined, the data is read from
   \"\@CONFIGDIR\@\/cities.xml\" or \"\@DATADIR\@\/cities.xml\".
   SeisComP ships with \"\@DATADIR\@\/cities.xml\".


.. confval:: loadCities

   Type: *boolean*

   Load cities from file configured by the \"cityXML\"
   parameter. GUI and map applications enable loading of cities
   by default considering the parameter \"scheme.map.showCities\".


.. confval:: loadRegions

   Type: *boolean*

   Load custom FEP \(Flinn\-Engdahl polygon\) regions from
   \"\@CONFIGDIR\@\/fep\/\" or \@DATADIR\@\/fep\/\".
   GUI and map applications and scevent enable FEP regions by
   default. Explicitly uncheck the option to disregard by these
   applications.


.. confval:: publicIDPattern

   Type: *string*

   Defines a custom pattern for generation of public object ids. The following
   variables are resolved:
   \@classname\@ \(class name of object\),
   \@id\@ \(public object count\),
   \@globalid\@ \(general object count\),
   \@time\@ \(current time, use '\/' to supply custom format, e.g. \@time\/%FT%T.%fZ\@


.. confval:: configModule

   Type: *string*

   Name of the configuration module.
   Default is ``trunk``.

.. confval:: database

   Type: *string*

   Defines the database connection. If no database is configured
   \(which is the default\) and a messaging connection is available
   the application will receive the parameters after the connection
   is established. Override these values only if you know what you
   are doing.
   
   The format is: service:\/\/user:pwd\@host\/database.
   \"service\" is the name of the database driver which can be
   queried with \"\-\-db\-driver\-list\".
   
   Note that this parameter overrides 'database.type' and
   'database.parameters' if present.


.. confval:: recordstream

   Type: *string*

   SeisComP applications access waveform data through the RecordStream
   interface. Please consult the SeisComP documentation for a list of
   supported services and their configuration.
   
   This parameter configures recordstream source URL, format: [service:\/\/]location[#type].
   \"service\" is the name of the recordstream implementation.
   If \"service\" is not given \"file:\/\/\" is implied.
   
   This parameter overrides the deprecated recordstream.service and
   recordstream.source and should be used instead.


.. confval:: logging.level

   Type: *int*

   Sets the logging level between 1 and 4 where 1\=ERROR, 2\=WARNING, 3\=INFO and 4\=DEBUG.
   Default is ``2``.

.. confval:: logging.file

   Type: *boolean*

   Enables logging into a log file.
   Default is ``true``.

.. confval:: logging.syslog

   Type: *boolean*

   Enables logging to syslog if supported by the host system.
   Default is ``false``.

.. confval:: logging.components

   Type: *list:string*

   Limit the logging to the specified list of components, e.g. 'Application, Server'


.. confval:: logging.component

   Type: *boolean*

   For each log entry print the component right after the
   log level. By default the component output is enabled
   for file output but disabled for console output.


.. confval:: logging.context

   Type: *boolean*

   For each log entry print the source file name and line
   number.
   Default is ``false``.

.. confval:: logging.utc

   Type: *boolean*

   Use UTC instead of localtime in logging timestamps.


.. confval:: logging.file.rotator

   Type: *boolean*

   Enables rotation of log files.
   Default is ``true``.

.. confval:: logging.file.rotator.timeSpan

   Type: *int*

   Unit: *s*

   Time span after which a log file is rotated.
   Default is ``86400``.

.. confval:: logging.file.rotator.archiveSize

   Type: *int*

   How many historic log files to keep.
   Default is ``7``.

.. confval:: logging.file.rotator.maxFileSize

   Type: *int*

   Unit: *byte*

   The maximum size of a logfile in byte. The default value
   is 100 megabyte. If a logfile exceeds that size then it
   is rotated. To disable the size limit give 0 or a negative
   value.
   Default is ``104857600``.

.. confval:: logging.objects.timeSpan

   Type: *int*

   Unit: *s*

   Timespan for counting input\/output of objects.
   Default is ``60``.

.. confval:: logging.syslog.facility

   Type: *string*

   Defines the syslog facility to be used according to the
   defined facility names in syslog.h. The default is local0.
   If the given name is invalid or not available, initializing
   logging will fail and the application quits.
   Default is ``local0``.

.. confval:: connection.server

   Type: *host-with-port*

   Defines the URL of the messaging server to connect to.
   URL format is [scheme:\/\/]host[:port][\/queue]. Default scheme:
   scmp, default port: 18180, default queue: production.
   Examples:
   
   All default: localhost
   
   Specfic host: scmp:\/\/10.0.1.4:18180\/production
   
   Specfic host and SSL encryption: scmps:\/\/10.0.1.4:18180\/production
   Default is ``localhost``.

.. confval:: connection.username

   Type: *string*

   Defines the username to be used. The length is maybe limited
   by the messaging system used. By default the module name
   \(name of the executable\) is used but sometimes it exceeds
   the 10 character limit and access is denied. To prevent
   errors set a different username. An empty username will
   let the system to generate one.


.. confval:: connection.timeout

   Type: *int*

   Unit: *s*

   The connection timeout in seconds. 3 seconds are normally
   more than enough. If a client needs to connect to a
   remote system with a slow connection a larger timeout might
   be needed.
   Default is ``3``.

.. confval:: connection.primaryGroup

   Type: *string*

   Defines the primary group of a module. This is the name
   of the group where a module sends its messages to if the
   target group is not explicitely given in the send call.


.. confval:: connection.contentType

   Type: *string*

   Defines the message encoding for sending. Allowed values
   are \"binary\", \"json\" or \"xml\".
   XML has more overhead in processing but is more robust when
   schema versions between client and server are different.
   Default is ``binary``.

.. confval:: connection.subscriptions

   Type: *list:string*

   Defines a list of message groups to subscribe to. The
   default is usually given by the application and does not
   need to be changed.


.. note::
   **database.\***
   *Defines the database connection. If no database is configured*
   *(which is the default) and a messaging connection is available*
   *the application will receive the parameters after the connection*
   *is established. Override these values only if you know what you*
   *are doing.*



.. confval:: database.type

   Type: *string*

   Defines the database backend to be used. The name corresponds to
   the defined name in the database plugin. Examples are: mysql, postgresql or
   sqlite3. Note that this parameter is deprecated. Please use
   the URL form 'database \= mysql:\/\/sysop:sysop\@localhost\/seiscomp' instead.


.. confval:: database.parameters

   Type: *string*

   The database connection parameters. This value depends on the used
   database backend. E.g. sqlite3 expects the path to the database
   file whereas MYSQL or PostgreSQL expect an URI in the format
   user:pwd\@host\/database?param1\=val1\&param2\=val2.
   Note that this parameter is deprecated. Please use the URL form
   'database \= mysql:\/\/sysop:sysop\@localhost\/seiscomp' instead.


.. confval:: database.inventory

   Type: *string*

   Load the inventory database from a given XML file if set. This
   overrides the inventory definitions loaded from the database backend.


.. confval:: database.config

   Type: *string*

   Load the configuration database from a given XML file if set. This
   overrides the configuration definitions loaded from the database backend.


.. confval:: processing.whitelist.agencies

   Type: *list:string*

   Defines a whitelist of agencies that are allowed for processing separated by comma.


.. confval:: processing.blacklist.agencies

   Type: *list:string*

   Defines a blacklist of agencies that are not allowed for processing separated by comma.


.. confval:: inventory.whitelist.nettype

   Type: *list:string*

   List of network types to include when loading the inventory.


.. confval:: inventory.whitelist.statype

   Type: *list:string*

   List of station types to include when loading the inventory.


.. confval:: inventory.blacklist.nettype

   Type: *list:string*

   List of network types to exclude when loading the inventory.


.. confval:: inventory.blacklist.statype

   Type: *list:string*

   List of station types to exclude when loading the inventory.


.. note::
   **recordstream.\***
   *SeisComP applications access waveform data through the RecordStream*
   *interface. Please consult the SeisComP documentation for a list of*
   *supported services and their configuration. Note that this set of*
   *parameters is deprecated and will be removed in future versions.*
   *Please use the URL form (recordstream = slink://localhost) in future.*



.. confval:: recordstream.service

   Type: *string*

   Name of the recordstream service implementation.
   Default is ``slink``.

.. confval:: recordstream.source

   Type: *string*

   Service specific parameters like a IP address or a file name to use.
   Default is ``localhost:18000``.

.. confval:: scripts.crashHandler

   Type: *path*

   Path to crash handler script


.. confval:: core.plugins

   Type: *list:string*

   Defines a list of core modules loaded at startup.
   Default is ``dbmysql``.

.. confval:: client.startStopMessage

   Type: *boolean*

   Enables sending of an application start\- and stop message to the STATUS_GROUP.
   Default is ``false``.

.. confval:: client.autoShutdown

   Type: *boolean*

   Enablgs automatic application shutdown triggered by a status message.
   Default is ``false``.

.. confval:: client.shutdownMasterModule

   Type: *string*

   Triggers shutdown if the module name of the received messages match


.. confval:: client.shutdownMasterUsername

   Type: *string*

   Triggers shutdown if the user name of the received messages match


.. confval:: commands.target

   Type: *string*

   A regular expression of all clients that should handle
   a command message usually send to the GUI messaging group.
   Currently this flag is only used by GUI applications to
   set an artificial origin and to tell other clients to
   show this origin. To let all connected clients handle the
   command, \".\*\$\" can be used.


.. note::
   **ttt.\***
   *Travel time table related configuration. Travel time tables can*
   *be added via plugins. Built-in interfaces are libtau and LOCSAT.*
   *For each loaded interface a list of supported models must be*
   *provided. The default list of tables for libtau is ak135 and*
   *iasp91. LOCSAT's default tables are iasp91 and tab.*



.. note::

   **ttt.$name.\***
   $name is a placeholder for the name to be used.


.. confval:: ttt.$name.tables

   Type: *list:string*

   The list of supported model names per interface.


.. _global/NonLinLoc:


NonLinLoc extension
-------------------

NonLinLoc locator wrapper plugin for SeisComP.
NonLinLoc was written by Anthony Lomax (http://alomax.free.fr/nlloc).


.. confval:: NonLinLoc.publicID

   Type: *string*

   PublicID creation pattern for an origin created by NonLinLoc.
   Default is ``NLL.@time/%Y%m%d%H%M%S.%f@.@id@``.

.. confval:: NonLinLoc.outputPath

   Type: *path*

   Defines the output path for all native NonLinLoc input and output files.
   Default is ``/tmp/sc3.nll``.

.. confval:: NonLinLoc.saveInput

   Type: *boolean*

   Save input files \*.obs in outputPath for later processing.
   Setting to false reduces file i\/o and saves disk space.
   Default is ``true``.

.. confval:: NonLinLoc.saveIntermediateOutput

   Type: *boolean*

   Save output files in outputPath for later processing or
   for viewing by the Seismicity Viewer.
   Setting to false reduces file i\/o and saves disk space.
   Default is ``true``.

.. confval:: NonLinLoc.controlFile

   Type: *path*

   The default NonLinLoc control file to use.


.. confval:: NonLinLoc.defaultPickError

   Type: *double*

   Unit: *s*

   The default pick error in seconds passed to NonLinLoc if a SeisComP pick
   object does not provide pick time uncertainties.
   Default is ``0.5``.

.. confval:: NonLinLoc.fixedDepthGridSpacing

   Type: *double*

   Unit: *km*

   Since NLL does not support fixing the depth natively so this
   feature is emulated by settings the Z grid very tight around
   the depth to be fixed. This value sets the Z grid spacing.
   Default is ``0.1``.

.. confval:: NonLinLoc.allowMissingStations

   Type: *boolean*

   Picks from stations with missing configuration will be
   ignored. The origin will be relocated without that pick
   if possible.
   
   If set to false, the plug\-in throws
   an excepection without locating.
   Default is ``true``.

.. confval:: NonLinLoc.profiles

   Type: *list:string*

   Defines a list of active profiles to be used by the plugin.


.. note::

   **NonLinLoc.profile.$name.\***
   *Defines a regional profile that is used if a prelocation falls*
   *inside the configured region.*
   $name is a placeholder for the name to be used and needs to be added to :confval:`NonLinLoc.profiles` to become active.

   .. code-block:: sh

      NonLinLoc.profiles = a,b
      NonLinLoc.profile.a.value1 = ...
      NonLinLoc.profile.b.value1 = ...
      # c is not active because it has not been added
      # to the list of NonLinLoc.profiles
      NonLinLoc.profile.c.value1 = ...


.. confval:: NonLinLoc.profile.$name.earthModelID

   Type: *string*

   earthModelID that is stored in the created origin.


.. confval:: NonLinLoc.profile.$name.methodID

   Type: *string*

   methodID that is stored in the created origin.
   Default is ``NonLinLoc``.

.. confval:: NonLinLoc.profile.$name.tablePath

   Type: *path*

   Path to travel time tables \(grids\).


.. confval:: NonLinLoc.profile.$name.controlFile

   Type: *path*

   Control file of the current profile. If not set, the default
   control file will be used instead.


.. confval:: NonLinLoc.profile.$name.transform

   Type: *string*

   Transformation type of the configured region. Supported are
   SIMPLE and GLOBAL.
   
   Default: GLOBAL is assumed.
   Default is ``GLOBAL``.

.. confval:: NonLinLoc.profile.$name.region

   Type: *list:double*

   Defines the 4 corner values of the epicentral region for selecting the profile.
   The original epicentre must be within the region.
   
   If transform is GLOBAL: min_lat, min_lon, max_lat, max_lon.
   The values define the geographic corner coordinates. Unit is degree.
   
   If transform is SIMPLE: xmin, ymin, xmax, ymax.
   The values define the region relative to the configured origin.
   Unit is km.


.. confval:: NonLinLoc.profile.$name.origin

   Type: *list:double*

   Unit: *deg*

   Only used for transformation SIMPLE. Expects 2 values: latitude, longitude.
   The value define the geographic origin of the area spanned by region.
   Unit is degree.


.. confval:: NonLinLoc.profile.$name.rotation

   Type: *double*

   Unit: *deg*

   Only used for transformation SIMPLE. Defines the rotation around the
   origin of the defined region.


.. _global/Hypo71:


Hypo71 extension
----------------

The traditional Hypo71PC locator with SeisComP.


.. note::
   **hypo71.\***
   *General Hypo71 configuration parameters.*



.. confval:: hypo71.logFile

   Type: *string*

   Temporary file used by Hypo71 to store calculation logs.
   Default is ``@LOGDIR@/HYPO71.LOG``.

.. confval:: hypo71.inputFile

   Type: *string*

   Temporary file to write Hypo71 input data to.
   Default is ``@DATADIR@/hypo71/HYPO71.INP``.

.. confval:: hypo71.outputFile

   Type: *string*

   Temporary output file to read Hypo71 location data from.
   Default is ``@DATADIR@/hypo71/HYPO71.PRT``.

.. confval:: hypo71.defaultControlFile

   Type: *string*

   Hypo71 default profile.
   If no custom profile is specified, this profile will be used by the plugin when proceeding to a localization.
   Default is ``@DATADIR@/hypo71/profiles/default.hypo71.conf``.

.. confval:: hypo71.hypo71ScriptFile

   Type: *string*

   Bash script executed when calling the Hypo71 locator plugin for locating the earthquake.
   Default is ``@DATADIR@/hypo71/run.sh``.

.. confval:: hypo71.profiles

   Type: *list:string*

   Hypo71 profile name.
   Multiples names may be set. They must be separated by comma.
   Each profile can have different velocity or parameters.


.. confval:: hypo71.publicID

   Type: *string*

   Custom patternID to use when generating origin publicID


.. confval:: hypo71.useHypo71PatternID

   Type: *boolean*

   Specifies if the given publicD should be used for generating origin publicID


.. note::
   **hypo71.profile.\***
   *Profiles containing the profile-specific velocity model and the Hypo71 parameters.*



.. note::

   **hypo71.profile.$name.\***
   $name is a placeholder for the name to be used and needs to be added to :confval:`hypo71.profiles` to become active.

   .. code-block:: sh

      hypo71.profiles = a,b
      hypo71.profile.a.value1 = ...
      hypo71.profile.b.value1 = ...
      # c is not active because it has not been added
      # to the list of hypo71.profiles
      hypo71.profile.c.value1 = ...


.. confval:: hypo71.profile.$name.earthModelID

   Type: *string*

   Profile's velocity model name.


.. confval:: hypo71.profile.$name.methodID

   Type: *string*

   Profile's method.
   It is generally the locator's name \(Hypo71\).
   Default is ``Hypo71``.

.. confval:: hypo71.profile.$name.controlFile

   Type: *string*

   File containing the profile parameters.


.. confval:: hypo71.profile.$name.fixStartDepthOnly

   Type: *boolean*

   If the depth is requested to be fixed \(e.g. by ticking the option
   in scolv\) the plugin performs only one location starting at
   specified depth but with free depth evaluation. This option
   defines whether it should really fix the depth \(false\) or
   use this fixed depth only as starting point \(true\).
   Default is ``false``.

.. _global/iLoc:


iLoc extension
--------------

Locator in SeisComP implemented by the plugin lociloc.


.. note::
   **iLoc.\***
   *Locator parameters: iLoc*



.. confval:: iLoc.profiles

   Type: *list:string*

   iLoc profile name.
   Multiples names may be set separated by comma.
   Each profile can have different velocity or parameters.
   Default is ``iasp91,ak135``.

.. note::
   **iLoc.profile.\***
   *Profiles containing the specific locator parameters. For*
   *the global models, iasp91 and ak135, profiles are*
   *automatically considered with defaults.*
   *To adjust the profile parameters the corresponding profile*
   *must be created.*



.. note::

   **iLoc.profile.$name.\***
   $name is a placeholder for the name to be used and needs to be added to :confval:`iLoc.profiles` to become active.

   .. code-block:: sh

      iLoc.profiles = a,b
      iLoc.profile.a.value1 = ...
      iLoc.profile.b.value1 = ...
      # c is not active because it has not been added
      # to the list of iLoc.profiles
      iLoc.profile.c.value1 = ...


.. confval:: iLoc.profile.$name.Verbose

   Type: *boolean*

   
   Default is ``true``.

.. confval:: iLoc.profile.$name.globalModel

   Type: *string*

   Name of globally applied velocity model
   into which RSTT or the local model is integrated. If
   unset, the name of the profile is considered instead.


.. confval:: iLoc.profile.$name.UseRSTT

   Type: *boolean*

   Use regional seismic travel\-time tables
   Default is ``false``.

.. confval:: iLoc.profile.$name.UseRSTTPnSn

   Type: *boolean*

   Use regional seismic travel\-time tables for Pn and Sn
   Default is ``true``.

.. confval:: iLoc.profile.$name.UseRSTTPgLg

   Type: *boolean*

   Use regional seismic travel\-time tables for Pg and Lg
   Default is ``true``.

.. confval:: iLoc.profile.$name.LocalVmodel

   Type: *string*

   Full path to a file containing the local velocity model.
   Requires: UseLocalTT \= true. Empty string or unset
   disables using a local model in this profile.
   
   Example:
   
   \@DATADIR\@\/iloc\/localmodels\/model.localmodel.dat.


.. confval:: iLoc.profile.$name.DoGridSearch

   Type: *boolean*

   Perform neighbourhood algorithm
   Default is ``true``.

.. confval:: iLoc.profile.$name.NAsearchRadius

   Type: *float*

   Unit: *deg*

   Neighbourhood Algorithm: Search radius around initial
   epicentre
   Default is ``5``.

.. confval:: iLoc.profile.$name.NAsearchDepth

   Type: *float*

   Unit: *km*

   Neighbourhood Algorithm: Search radius around initial
   depth
   Default is ``300``.

.. confval:: iLoc.profile.$name.NAsearchOT

   Type: *float*

   Unit: *s*

   Neighbourhood Algorithm: Search radius around initial
   origin time
   Default is ``30``.

.. confval:: iLoc.profile.$name.NAlpNorm

   Type: *float*

   Neighbourhood Algorithm: p\-value for norm to compute
   misfit [1,2]
   Default is ``1``.

.. confval:: iLoc.profile.$name.NAiterMax

   Type: *integer*

   Neighbourhood Algorithm: Maximum number of iterations
   Default is ``5``.

.. confval:: iLoc.profile.$name.NAcells

   Type: *integer*

   Neighbourhood Algorithm: Number of cells to be resampled
   at each iteration
   Default is ``25``.

.. confval:: iLoc.profile.$name.NAinitialSample

   Type: *integer*

   Neighbourhood Algorithm: Size of initial sample
   Default is ``1000``.

.. confval:: iLoc.profile.$name.NAnextSample

   Type: *integer*

   Neighbourhood Algorithm: Size of subsequent samples
   Default is ``100``.

.. confval:: iLoc.profile.$name.MinDepthPhases

   Type: *integer*

   Depth resolution: Minimum number of depth phases for depdp
   Default is ``3``.

.. confval:: iLoc.profile.$name.MaxLocalDistDeg

   Type: *float*

   Unit: *deg*

   Depth resolution: Maximum local distance
   Default is ``0.2``.

.. confval:: iLoc.profile.$name.MinLocalStations

   Type: *integer*

   Depth resolution: Minimum number of local defining stations
   Default is ``1``.

.. confval:: iLoc.profile.$name.MaxSPDistDeg

   Type: *float*

   Unit: *deg*

   Depth resolution: Maximum distance for using S\-P travel\-time differences.
   Default is ``2.0``.

.. confval:: iLoc.profile.$name.MinSPpairs

   Type: *integer*

   Depth resolution: Minimum number of defining S\-P phase pairs
   Default is ``3``.

.. confval:: iLoc.profile.$name.MinCorePhases

   Type: *integer*

   Depth resolution: Minimum number of defining core reflection phases
   Default is ``3``.

.. confval:: iLoc.profile.$name.MaxShallowDepthError

   Type: *float*

   Unit: *km*

   Depth resolution: Maximum depth error for crustal free\-depth
   Default is ``30.0``.

.. confval:: iLoc.profile.$name.MaxDeepDepthError

   Type: *float*

   Unit: *km*

   Depth resolution: Maximum depth error for deep free\-depth
   Default is ``60.0``.

.. confval:: iLoc.profile.$name.DoCorrelatedErrors

   Type: *boolean*

   Linearized inversion: Account for correlated errors
   Default is ``true``.

.. confval:: iLoc.profile.$name.SigmaThreshold

   Type: *float*

   Unit: *s*

   Linearized inversion: Used to exclude big residuals from solution
   Default is ``6.0``.

.. confval:: iLoc.profile.$name.AllowDamping

   Type: *boolean*

   Linearized inversion: Allow damping of model vector
   Default is ``true``.

.. confval:: iLoc.profile.$name.MinIterations

   Type: *integer*

   Linearized inversion: Minimum number of iterations
   Default is ``4``.

.. confval:: iLoc.profile.$name.MaxIterations

   Type: *integer*

   Linearized inversion: Maximum number of iterations
   Default is ``20``.

.. confval:: iLoc.profile.$name.MinNdefPhases

   Type: *integer*

   Linearized inversion: Minimum number of defining phases
   Default is ``4``.

.. confval:: iLoc.profile.$name.DoNotRenamePhases

   Type: *boolean*

   Linearized inversion: Do not rename phases. Deactivating
   allows to rename the phases automatically for this
   profile.
   Default is ``false``.

.. _global/MN:


MN extension
------------

Nuttli magnitude for Canada and other Cratonic regions


.. note::
   **amplitudes.MN.\***
   *Amplitude control parameters for MN (Nuttli magnitude).*



.. confval:: amplitudes.MN.velocityModel

   Type: *string*

   The travel time table set compiled for LocSAT. The tables
   are located in \"share\/locsat\/tables\/[vmodel].\*\".
   Default is ``iasp91``.

.. note::
   **magnitudes.MN.\***
   *Regionalization of MN (Nuttli magnitude).*



.. confval:: magnitudes.MN.region

   Type: *path*

   The path to the BNA file which defines the valid region
   for the MN magnitude. Note that the entire path from
   source to receiver must lie entirely within the polygon\(s\).
   Default is ``@DATADIR@/magnitudes/MN/MN.bna``.

.. _global/LocExt:


LocExt extension
----------------

Locator which forwards the processing to external scripts


.. note::
   **ExternalLocator.\***
   *Locator parameters: ExternalLocator*



.. confval:: ExternalLocator.profiles

   Type: *list:string*

   A list of profiles defined as tuples of name
   and path to a script separated by colon.


.. _global/GUI:


GUI extension
-------------

The GUI configuration plugin extends the configuration of
graphical user interfaces to various options to adjust the look
and feel.


.. note::
   **groups.\***
   *Configures the target messaging groups for various object types.*
   *These parameters should only be touched if you know what you*
   *are doing.*



.. confval:: groups.pick

   Type: *string*

   Defines the target messaging group for manual picks, e.g.
   made in scolv.
   Default is ``PICK``.

.. confval:: groups.amplitude

   Type: *string*

   Defines the target messaging group for amplitudes, e.g.
   computed in scolv.
   Default is ``AMPLITUDE``.

.. confval:: groups.magnitude

   Type: *string*

   Defines the target messaging group for magnitudes. scolv does
   not use this group but sends magnitudes together with the
   origin to the origin group.
   Default is ``MAGNITUDE``.

.. confval:: groups.location

   Type: *string*

   Defines the target messaging group for origins created in
   e.g. scolv.
   Default is ``LOCATION``.

.. confval:: groups.focalMechanism

   Type: *string*

   Defines the target messaging group for focal mechanisms created in
   e.g. scolv.
   Default is ``FOCMECH``.

.. confval:: groups.event

   Type: *string*

   Defines the target messaging group for events and event
   journal entries.
   Default is ``EVENT``.

.. confval:: map.location

   Type: *string*

   Specified the location and the structure of the map tiles to be used. This
   path is composed of zero or more directives and must include at least one
   conversion specification which starts with is introduced by the character %
   followed by a conversion specifier.  Valid specifiers are s \(replaced by
   tile ID\), l \(tile level\), c \(tile column\) and r \(tile row\). An example for
   using the OpenStreetMap file structure is \/path\/to\/maps\/%l\/%c\/%r.png.
   Default is ``@DATADIR@/maps/world%s.png``.

.. confval:: map.format

   Type: *string*

   Projection of the map tiles. Supported formats are: rectangular and mercator.
   Default is ``rectangular``.

.. confval:: map.cacheSize

   Type: *int*

   Unit: *bytes*

   Cache size of the map tiles. If 0 is specified a default
   cache size of 32mb is used. The higher the cache size
   the better the performance in higher resolutions. A
   higher cache size causes less image loader calls but
   requires more client memory.
   Default is ``0``.

.. confval:: map.type

   Type: *string*

   Used to distinguish tile store implementations provided by plug\-ins.


.. confval:: map.customLayers

   Type: *list:string*

   Allows to add custom layers that are included via plugins.
   This is a list of layer names. A plugin must implement
   the layer interface and register itself with the
   name used in this list. The order of layers is the
   default order. The custom layers are prepended to
   the maps defaults layers such as the grid and the cities.


.. confval:: map.layers

   Type: *string*

   Defines the order of all configured layers. This
   includes the standard layers \(grid, cities\) as
   well as custom layers. The name of the grid layer
   is \"grid\" and the name of the cities
   layer is \"cities\".


.. note::
   **map.layers.events.\***
   *Configuration options for the events layer that*
   *shows all events on the map that are loaded in the*
   *event list.*



.. confval:: map.layers.events.visible

   Type: *boolean*

   Show the events layer on maps. Currently only supported
   by scolv.
   Default is ``false``.

.. note::
   **map.layers.fep.\***
   *Configuration for the fep layer showing the polygons*
   *of FEP (FLinn-Engdahl-Polygon) files on maps if they*
   *exist in @DATADIR@/fep or @CONFIGDIR@/fep.*



.. confval:: map.layers.fep.visible

   Type: *boolean*

   Show the fep layer on maps.
   Default is ``true``.

.. confval:: map.layers.cities.topPopulatedPlaces

   Type: *int*

   Maximum number of cities to be rendered. If
   cityPopulationWeight is less or equal than 0 then
   all cities are rendered ordered by population count,
   highest first.
   To show the N most populated places in the visible
   map region, set
   \"scheme.map.cityPopulationWeight\" to 0
   and set this parameter to N.
   Default is ``-1``.

.. confval:: map.zoom.sensitivity

   Type: *double*

   Zoom sensitivity of the map
   Default is ``0.5``.

.. note::
   **scheme.\***
   *This group defines various options for color, pen, brush, font, etc. for SeisComP*
   *graphical user interfaces. There are various conventions to*
   *define colors, fonts and gradients.*
   **
   *Colors are defined in HTML*
   *convention, e.g. as rgb values, hexadecimal numbers or color*
   *keyword names defined by W3C. If rgb or rgba is used, it must*
   *be quoted because the comma is handled as list separator by*
   *the configuration.*
   *Examples: "rgb(255,0,0)", FF00FF40, green.*
   **
   *Gradients are configured as lists of tuples where each tuple*
   *is colon separated in the form value:color. Value is either*
   *int or double and color is again a color definition.*
   *Example: 0:yellow,10:red*



.. confval:: scheme.showMenu

   Type: *boolean*

   Show menu bar.
   Default is ``true``.

.. confval:: scheme.showStatusBar

   Type: *boolean*

   Show status bar.
   Default is ``true``.

.. confval:: scheme.tabPosition

   Type: *string*

   Set position if tab bar. An unset value lets the application
   decide where to place the tab bar. This option might not be
   supported by all applications. Valid positions are: off, north,
   south, east, west


.. confval:: scheme.map.stationSize

   Type: *int*

   Unit: *px*

   The station symbol size \(e.g. in scmv\).
   Default is ``8``.

.. confval:: scheme.map.originSymbolMinSize

   Type: *int*

   Unit: *px*

   The origin symbol minimum size. The formula to compute the
   size of the origin symbol is: 4.9\*\(M\-1.2\).
   Default is ``9``.

.. confval:: scheme.map.vectorLayerAntiAlias

   Type: *boolean*

   Apply antialiasing to map layers.
   This improves the visual quality but decreases performance.
   Default is ``false``.

.. confval:: scheme.map.bilinearFilter

   Type: *boolean*

   Apply bilinear filtering to maps.
   The bilinear filter improves the visual quality but decreases
   performance slightly. It is only used for static map images.
   Not while dragging.
   Default is ``true``.

.. confval:: scheme.map.showGrid

   Type: *boolean*

   Display the latitude\/longitude grid on maps
   Default is ``true``.

.. confval:: scheme.map.showCities

   Type: *boolean*

   Show cities defined in \"citiesXML\" on maps
   Default is ``true``.

.. confval:: scheme.map.cityPopulationWeight

   Type: *int*

   Controls at which zoom level a city will be visible. The
   following formula is used:
   screen_width \(km\) \* weight >\= population
   Default is ``150``.

.. confval:: scheme.map.showLayers

   Type: *boolean*

   Show custom layers on maps
   Default is ``true``.

.. confval:: scheme.map.showLegends

   Type: *boolean*

   Show map legends initially. Some applications provide
   controls to toggle the visibility in addition to this
   option.
   Default is ``false``.

.. confval:: scheme.map.projection

   Type: *string*

   SeisComP ships with the rectangular projection built\-in.
   Other projections may be provided through plugins.
   Default is ``Rectangular``.

.. confval:: scheme.map.toBGR

   Type: *boolean*

   Converts map colors from RGB color scheme to BGR.
   Default is ``false``.

.. confval:: scheme.map.polygonRoughness

   Type: *int*

   Unit: *px*

   Minimum screen distance to plot a polygon or polyline line segment.
   Default is ``3``.

.. confval:: scheme.colors.background

   Type: *color*

   A general application background color. Can be used to give
   each application a different background color. An unset value
   lets Qt decide.


.. confval:: scheme.colors.map.lines

   Type: *color*

   The color of lines in the map \(e.g. lines
   connecting the origin and a station\).


.. confval:: scheme.colors.map.outlines

   Type: *color*

   The color of station outlines in the map.


.. confval:: scheme.colors.map.stationAnnotations

   Type: *color*

   The color of station annotations.


.. confval:: scheme.colors.map.cityLabels

   Type: *color*

   The color of city labels.


.. confval:: scheme.colors.map.cityOutlines

   Type: *color*

   The color of city outlines.


.. confval:: scheme.colors.map.cityCapital

   Type: *color*

   The color of a capital.


.. confval:: scheme.colors.map.cityNormal

   Type: *color*

   The color of a \"normal\" city.


.. note::
   **scheme.colors.map.grid.\***
   *Defines the pen of the latitude/longitude grid of the map.*



.. confval:: scheme.colors.map.grid.color

   Type: *color*

   The color of the pen.
   Default is ``FFFFFF``.

.. confval:: scheme.colors.map.grid.style

   Type: *string*

   The style of the pen. Supported values are: NoPen, SolidLine, DashLine, DotLine, DashDotLine, DashDotDotLine.
   Default is ``DotLine``.

.. confval:: scheme.colors.map.grid.width

   Type: *double*

   Unit: *px*

   The width of the pen.
   Default is ``1``.

.. confval:: scheme.colors.records.foreground

   Type: *color*

   The general color of records\/traces.
   Default is ``808080``.

.. confval:: scheme.colors.records.alternateForeground

   Type: *color*

   A general trace color of the alternate trace \(eg scheli\).
   Default is ``808080``.

.. confval:: scheme.colors.records.background

   Type: *color*

   The general background color of records\/traces.


.. confval:: scheme.colors.records.alternateBackground

   Type: *color*

   A general background color of the alternate trace.


.. confval:: scheme.colors.records.spectrogram

   Type: *color*

   The trace color used on top of a spectrogram.
   Default is ``000000``.

.. confval:: scheme.colors.records.gaps

   Type: *color*

   The color of data gaps in trace views.
   Default is ``FFFF0040``.

.. confval:: scheme.colors.records.overlaps

   Type: *color*

   The color of data overlaps in trace views.
   Default is ``FF00FF40``.

.. confval:: scheme.colors.records.alignment

   Type: *color*

   The color of the alignment marker in trace views.
   Default is ``FF0000``.

.. note::
   **scheme.colors.records.borders.\***
   *Properties of record borders*



.. note::
   **scheme.colors.records.borders.standard.\***
   *Standard properties*



.. note::
   **scheme.colors.records.borders.standard.pen.\***
   *Defines the pen of the border line.*



.. confval:: scheme.colors.records.borders.standard.pen.color

   Type: *color*

   The color of the pen.


.. confval:: scheme.colors.records.borders.standard.pen.style

   Type: *string*

   The style of the pen. Supported values are:
   NoPen, SolidLine, DashLine, DotLine, DashDotLine, DashDotDotLine.


.. confval:: scheme.colors.records.borders.standard.pen.width

   Type: *double*

   Unit: *px*

   The width of the pen.


.. note::
   **scheme.colors.records.borders.standard.brush.\***
   *Defines the brush of the enlcosed area.*



.. confval:: scheme.colors.records.borders.standard.brush.color

   Type: *color*

   The color of the pen.


.. confval:: scheme.colors.records.borders.standard.brush.style

   Type: *string*

   The style of the pen. Supported values are, e.g.:
   solid, dense1, dense7, horizontal, vertical,
   cross, bdiag, fdiag, diagcross.


.. note::
   **scheme.colors.records.borders.signatureValid.\***
   *Properties for records with valid signatures*



.. note::
   **scheme.colors.records.borders.signatureValid.pen.\***
   *Defines the pen of the border line.*



.. confval:: scheme.colors.records.borders.signatureValid.pen.color

   Type: *color*

   The color of the pen.


.. confval:: scheme.colors.records.borders.signatureValid.pen.style

   Type: *string*

   The style of the pen. Supported values are:
   NoPen, SolidLine, DashLine, DotLine, DashDotLine, DashDotDotLine.


.. confval:: scheme.colors.records.borders.signatureValid.pen.width

   Type: *double*

   Unit: *px*

   The width of the pen.


.. note::
   **scheme.colors.records.borders.signatureValid.brush.\***
   *Defines the brush of the enlcosed area.*



.. confval:: scheme.colors.records.borders.signatureValid.brush.color

   Type: *color*

   The color of the pen.


.. confval:: scheme.colors.records.borders.signatureValid.brush.style

   Type: *string*

   The style of the pen. Supported values are, e.g.:
   solid, dense1, dense7, horizontal, vertical,
   cross, bdiag, fdiag, diagcross.


.. note::
   **scheme.colors.records.borders.signatureInvalid.\***
   *Properties for records with invalid signatures*



.. note::
   **scheme.colors.records.borders.signatureInvalid.pen.\***
   *Defines the pen of the border line.*



.. confval:: scheme.colors.records.borders.signatureInvalid.pen.color

   Type: *color*

   The color of the pen.


.. confval:: scheme.colors.records.borders.signatureInvalid.pen.style

   Type: *string*

   The style of the pen. Supported values are:
   NoPen, SolidLine, DashLine, DotLine, DashDotLine, DashDotDotLine.


.. confval:: scheme.colors.records.borders.signatureInvalid.pen.width

   Type: *double*

   Unit: *px*

   The width of the pen.


.. note::
   **scheme.colors.records.borders.signatureInvalid.brush.\***
   *Defines the brush of the enlcosed area.*



.. confval:: scheme.colors.records.borders.signatureInvalid.brush.color

   Type: *color*

   The color of the pen.


.. confval:: scheme.colors.records.borders.signatureInvalid.brush.style

   Type: *string*

   The style of the pen. Supported values are, e.g.:
   solid, dense1, dense7, horizontal, vertical,
   cross, bdiag, fdiag, diagcross.


.. note::
   **scheme.colors.records.offset.\***
   *Defines the pen of the record offset line.*



.. confval:: scheme.colors.records.offset.color

   Type: *color*

   The color of the pen.
   Default is ``C0C0FF``.

.. confval:: scheme.colors.records.offset.style

   Type: *string*

   The style of the pen. Supported values are: NoPen, SolidLine, DashLine, DotLine, DashDotLine, DashDotDotLine.
   Default is ``SolidLine``.

.. confval:: scheme.colors.records.offset.width

   Type: *double*

   Unit: *px*

   The width of the pen.
   Default is ``0.0``.

.. note::
   **scheme.colors.records.gridPen.\***
   *Defines the pen of the record grid.*



.. confval:: scheme.colors.records.gridPen.color

   Type: *color*

   The color of the pen.
   Default is ``00000020``.

.. confval:: scheme.colors.records.gridPen.style

   Type: *string*

   The style of the pen. Supported values are: NoPen, SolidLine, DashLine, DotLine, DashDotLine, DashDotDotLine.
   Default is ``DashLine``.

.. confval:: scheme.colors.records.gridPen.width

   Type: *double*

   Unit: *px*

   The width of the pen.
   Default is ``1.0``.

.. note::
   **scheme.colors.records.subGridPen.\***
   *Defines the pen of the secondary record grid.*



.. confval:: scheme.colors.records.subGridPen.color

   Type: *color*

   The color of the pen.
   Default is ``00000000``.

.. confval:: scheme.colors.records.subGridPen.style

   Type: *string*

   The style of the pen. Supported values are: NoPen, SolidLine, DashLine, DotLine, DashDotLine, DashDotDotLine.
   Default is ``DotLine``.

.. confval:: scheme.colors.records.subGridPen.width

   Type: *double*

   Unit: *px*

   The width of the pen.
   Default is ``1.0``.

.. note::
   **scheme.colors.records.states.\***
   *Defines the background color of records depending on their state.*



.. confval:: scheme.colors.records.states.unrequested

   Type: *color*

   Additional data which was not requested.
   Default is ``00000080``.

.. confval:: scheme.colors.records.states.requested

   Type: *color*

   Requested data Background color of requested data.
   Default is ``ffff0080``.

.. confval:: scheme.colors.records.states.inProgress

   Type: *color*

   Data currently loading.
   Default is ``00ff0010``.

.. confval:: scheme.colors.records.states.notAvailable

   Type: *color*

   Data which was requested but is not available.
   Default is ``ff000080``.

.. confval:: scheme.colors.picks.manual

   Type: *color*

   The color of manual picks.
   Default is ``00FF00``.

.. confval:: scheme.colors.picks.automatic

   Type: *color*

   The color of automatic picks.
   Default is ``FF0000``.

.. confval:: scheme.colors.picks.undefined

   Type: *color*

   The color of picks with undefined state.
   Default is ``A0A0A4``.

.. confval:: scheme.colors.picks.disabled

   Type: *color*

   The color of disabled picks.
   Default is ``A0A0A4``.

.. confval:: scheme.colors.arrivals.manual

   Type: *color*

   The color of manual arrivals \(arrivals that bind manual picks,
   e.g. residual plot of scolv, manual picker, ...\)
   Default is ``00A000``.

.. confval:: scheme.colors.arrivals.automatic

   Type: *color*

   The color of automatic arrivals,
   Default is ``A00000``.

.. confval:: scheme.colors.arrivals.theoretical

   Type: *color*

   The color of theoretical arrivals.
   Default is ``0000A0``.

.. confval:: scheme.colors.arrivals.undefined

   Type: *color*

   The color of arrivals binding picks with undefined state.
   Default is ``A00000``.

.. confval:: scheme.colors.arrivals.disabled

   Type: *color*

   The color of disabled arrivals.
   Default is ``A0A0A4``.

.. confval:: scheme.colors.arrivals.residuals

   Type: *gradient*

   The gradient of arrivals residuals. A gradient is defined as
   a list of tuples separated by colon where the first item is
   the value and the second is the color. Colors can be given in
   rgb notation or hexadecimal. When rgb is used double quotes are needed to
   protect the comma inside the rgb definition, e.g.
   \-8:\"rgb\(0,0,100\)\", \-4:\"rgb\(0,0,255\)\", \-3:\"rgb\(100,100,255\)\", ...


.. confval:: scheme.colors.magnitudes.set

   Type: *color*

   The color of active magnitudes.
   Default is ``00A000``.

.. confval:: scheme.colors.magnitudes.unset

   Type: *color*

   The color of inactive magnitudes.
   Default is ``000000``.

.. confval:: scheme.colors.magnitudes.disabled

   Type: *color*

   The color of disabled magnitudes.
   Default is ``A0A0A4``.

.. confval:: scheme.colors.magnitudes.residuals

   Type: *gradient*

   The gradient of magnitude residuals.


.. confval:: scheme.colors.stations.text

   Type: *color*

   The color of the station name.
   Default is ``ffffff``.

.. confval:: scheme.colors.stations.associated

   Type: *color*

   The color of associated stations \(e.g. in scmv\).
   Default is ``82AD58``.

.. confval:: scheme.colors.stations.triggering

   Type: *color*

   The color of triggered stations.


.. confval:: scheme.colors.stations.triggered0

   Type: *color*

   *No description available*

.. confval:: scheme.colors.stations.triggered1

   Type: *color*

   *No description available*

.. confval:: scheme.colors.stations.triggered2

   Type: *color*

   *No description available*

.. confval:: scheme.colors.stations.disabled

   Type: *color*

   The color of disabled stations.


.. confval:: scheme.colors.stations.idle

   Type: *color*

   The color of idle stations.


.. note::
   **scheme.colors.qc.\***
   *The color of QC.delay thresholds in scmv.*



.. confval:: scheme.colors.qc.delay0

   Type: *color*

   Default is ``00ffff``.

.. confval:: scheme.colors.qc.delay1

   Type: *color*

   Default is ``00ff00``.

.. confval:: scheme.colors.qc.delay2

   Type: *color*

   Default is ``fffd00``.

.. confval:: scheme.colors.qc.delay3

   Type: *color*

   Default is ``ff6633``.

.. confval:: scheme.colors.qc.delay4

   Type: *color*

   Default is ``ff0000``.

.. confval:: scheme.colors.qc.delay5

   Type: *color*

   Default is ``cccccc``.

.. confval:: scheme.colors.qc.delay6

   Type: *color*

   Default is ``999999``.

.. confval:: scheme.colors.qc.delay7

   Type: *color*

   Default is ``666666``.

.. confval:: scheme.colors.qc.qcWarning

   Type: *color*

   Default is ``ffff00``.

.. confval:: scheme.colors.qc.qcError

   Type: *color*

   Default is ``ff0000``.

.. confval:: scheme.colors.qc.qcOk

   Type: *color*

   Default is ``00ff00``.

.. confval:: scheme.colors.qc.qcNotSet

   Type: *color*

   Default is ``000000``.

.. note::
   **scheme.colors.gm.\***
   *The color of ground motion amplitudes in scmv.*



.. confval:: scheme.colors.gm.gm0

   Type: *color*

   *No description available*

.. confval:: scheme.colors.gm.gm1

   Type: *color*

   *No description available*

.. confval:: scheme.colors.gm.gm2

   Type: *color*

   *No description available*

.. confval:: scheme.colors.gm.gm3

   Type: *color*

   *No description available*

.. confval:: scheme.colors.gm.gm4

   Type: *color*

   *No description available*

.. confval:: scheme.colors.gm.gm5

   Type: *color*

   *No description available*

.. confval:: scheme.colors.gm.gm6

   Type: *color*

   *No description available*

.. confval:: scheme.colors.gm.gm7

   Type: *color*

   *No description available*

.. confval:: scheme.colors.gm.gm8

   Type: *color*

   *No description available*

.. confval:: scheme.colors.gm.gm9

   Type: *color*

   *No description available*

.. confval:: scheme.colors.gm.gmNotSet

   Type: *color*

   *No description available*

.. confval:: scheme.colors.recordView.selectedTraceZoom

   Type: *color*

   The color of the selected zoom area \(e.g. manual picker\).
   Default is ``C0C0FFC0``.

.. confval:: scheme.colors.legend.background

   Type: *color*

   The map legend background color.


.. confval:: scheme.colors.legend.border

   Type: *color*

   The map legend border color.


.. confval:: scheme.colors.legend.text

   Type: *color*

   The map legend text color.


.. confval:: scheme.colors.legend.headerText

   Type: *color*

   The map legend header color.


.. confval:: scheme.colors.originSymbol.classic

   Type: *boolean*

   Default is ``false``.

.. confval:: scheme.colors.originSymbol.depth.gradient

   Type: *gradient*

   The depth gradient.
   Default is ``0:FF0000,50:ffA500,100:FFFF00,250:00FF00,600:0000FF``.

.. confval:: scheme.colors.originSymbol.depth.discrete

   Type: *boolean*

   Setting this parameter to true will not interpolate between
   the depth steps and the color for a depth <\= input is used.
   Default is ``true``.

.. note::
   **scheme.colors.originStatus.\***
   *The origin status colors (e.g. in event list).*



.. confval:: scheme.colors.originStatus.automatic

   Type: *color*

   *No description available*

.. confval:: scheme.colors.originStatus.manual

   Type: *color*

   *No description available*

.. note::
   **scheme.colors.splash.\***
   *Defines colors used in the splash screen shown at application startup.*



.. confval:: scheme.colors.splash.message

   Type: *color*

   Text color of the message string.
   Default is ``808080``.

.. confval:: scheme.colors.splash.version

   Type: *color*

   Text color of the version string.
   Default is ``02589e``.

.. confval:: scheme.marker.lineWidth

   Type: *int*

   Unit: *px*

   The line width of the marker \(e.g. picks of manual picker\).


.. confval:: scheme.records.lineWidth

   Type: *int*

   Unit: *px*

   The line width of the records \/ traces.
   Default is ``1``.

.. confval:: scheme.records.antiAliasing

   Type: *boolean*

   Configures antialiasing of records \/ traces. Antialiasing
   needs more two times to storage space as non antialiasing
   but it improves visual quality.
   Default is ``true``.

.. confval:: scheme.records.optimize

   Type: *boolean*

   Configures optimization of trace polylines. If activated
   then lines on the same pixel line or same pixel row
   collapse into single lines.
   Default is ``true``.

.. confval:: scheme.records.borders.drawMode

   Type: *string*

   Mode for drawing record borders as box or line on top or
   bottom.
   
   Supported values: \"topline\",\"box\",\"bottomline\"
   Default is ``box``.

.. note::
   **scheme.fonts.base.\***
   *The general base font of an application. This overrides*
   *the default Qt4 application font.*



.. confval:: scheme.fonts.base.family

   Type: *string*

   Sets the family name of the font. The name is case insensitive and may include a foundry name.


.. confval:: scheme.fonts.base.size

   Type: *int*

   Defines the point size of the font


.. confval:: scheme.fonts.base.bold

   Type: *boolean*

   Default is ``false``.

.. confval:: scheme.fonts.base.italic

   Type: *boolean*

   Default is ``false``.

.. confval:: scheme.fonts.base.underline

   Type: *boolean*

   Default is ``false``.

.. confval:: scheme.fonts.base.overline

   Type: *boolean*

   Default is ``false``.

.. note::
   **scheme.fonts.small.\***
   *The smallest available font. If undefined the point size is 2 points smaller than the base font.*



.. confval:: scheme.fonts.small.family

   Type: *string*

   Sets the family name of the font. The name is case insensitive and may include a foundry name.


.. confval:: scheme.fonts.small.size

   Type: *int*

   Defines the point size of the font


.. confval:: scheme.fonts.small.bold

   Type: *boolean*

   Default is ``false``.

.. confval:: scheme.fonts.small.italic

   Type: *boolean*

   Default is ``false``.

.. confval:: scheme.fonts.small.underline

   Type: *boolean*

   Default is ``false``.

.. confval:: scheme.fonts.small.overline

   Type: *boolean*

   Default is ``false``.

.. note::
   **scheme.fonts.normal.\***
   *The default text font. If undefined the point size is 2 points larger than the base font.*



.. confval:: scheme.fonts.normal.family

   Type: *string*

   Sets the family name of the font. The name is case insensitive and may include a foundry name.


.. confval:: scheme.fonts.normal.size

   Type: *int*

   Defines the point size of the font


.. confval:: scheme.fonts.normal.bold

   Type: *boolean*

   Default is ``false``.

.. confval:: scheme.fonts.normal.italic

   Type: *boolean*

   Default is ``false``.

.. confval:: scheme.fonts.normal.underline

   Type: *boolean*

   Default is ``false``.

.. confval:: scheme.fonts.normal.overline

   Type: *boolean*

   Default is ``false``.

.. note::
   **scheme.fonts.large.\***
   *The largest text font. If undefined the point size is 6 points larger than the base font.*



.. confval:: scheme.fonts.large.family

   Type: *string*

   Sets the family name of the font. The name is case insensitive and may include a foundry name.


.. confval:: scheme.fonts.large.size

   Type: *int*

   Defines the point size of the font


.. confval:: scheme.fonts.large.bold

   Type: *boolean*

   Default is ``false``.

.. confval:: scheme.fonts.large.italic

   Type: *boolean*

   Default is ``false``.

.. confval:: scheme.fonts.large.underline

   Type: *boolean*

   Default is ``false``.

.. confval:: scheme.fonts.large.overline

   Type: *boolean*

   Default is ``false``.

.. note::
   **scheme.fonts.highlight.\***
   *Font used to highlight text. If undefined it equals the normal font except for a bold font face.*



.. confval:: scheme.fonts.highlight.family

   Type: *string*

   Sets the family name of the font. The name is case insensitive and may include a foundry name.


.. confval:: scheme.fonts.highlight.size

   Type: *int*

   Defines the point size of the font


.. confval:: scheme.fonts.highlight.bold

   Type: *boolean*

   Default is ``false``.

.. confval:: scheme.fonts.highlight.italic

   Type: *boolean*

   Default is ``false``.

.. confval:: scheme.fonts.highlight.underline

   Type: *boolean*

   Default is ``false``.

.. confval:: scheme.fonts.highlight.overline

   Type: *boolean*

   Default is ``false``.

.. note::
   **scheme.fonts.heading1.\***
   *The largest heading font. If undefined it uses a bold font face and a font size twice as large as the normal font.*



.. confval:: scheme.fonts.heading1.family

   Type: *string*

   Sets the family name of the font. The name is case insensitive and may include a foundry name.


.. confval:: scheme.fonts.heading1.size

   Type: *int*

   Defines the point size of the font


.. confval:: scheme.fonts.heading1.bold

   Type: *boolean*

   Default is ``false``.

.. confval:: scheme.fonts.heading1.italic

   Type: *boolean*

   Default is ``false``.

.. confval:: scheme.fonts.heading1.underline

   Type: *boolean*

   Default is ``false``.

.. confval:: scheme.fonts.heading1.overline

   Type: *boolean*

   Default is ``false``.

.. note::
   **scheme.fonts.heading2.\***
   *The second largest heading font. If undefined it uses a bold font face and a font size twice as large as the base font.*



.. confval:: scheme.fonts.heading2.family

   Type: *string*

   Sets the family name of the font. The name is case insensitive and may include a foundry name.


.. confval:: scheme.fonts.heading2.size

   Type: *int*

   Defines the point size of the font


.. confval:: scheme.fonts.heading2.bold

   Type: *boolean*

   Default is ``false``.

.. confval:: scheme.fonts.heading2.italic

   Type: *boolean*

   Default is ``false``.

.. confval:: scheme.fonts.heading2.underline

   Type: *boolean*

   Default is ``false``.

.. confval:: scheme.fonts.heading2.overline

   Type: *boolean*

   Default is ``false``.

.. note::
   **scheme.fonts.heading3.\***
   *The smallest heading font. If undefined it uses a bold font face and a font size 4 points larger than the base font.*



.. confval:: scheme.fonts.heading3.family

   Type: *string*

   Sets the family name of the font. The name is case insensitive and may include a foundry name.


.. confval:: scheme.fonts.heading3.size

   Type: *int*

   Defines the point size of the font


.. confval:: scheme.fonts.heading3.bold

   Type: *boolean*

   Default is ``false``.

.. confval:: scheme.fonts.heading3.italic

   Type: *boolean*

   Default is ``false``.

.. confval:: scheme.fonts.heading3.underline

   Type: *boolean*

   Default is ``false``.

.. confval:: scheme.fonts.heading3.overline

   Type: *boolean*

   Default is ``false``.

.. note::
   **scheme.fonts.cityLabels.\***
   *Font used for city labels. If undefined it equals the base font.*



.. confval:: scheme.fonts.cityLabels.family

   Type: *string*

   Sets the family name of the font. The name is case insensitive and may include a foundry name.


.. confval:: scheme.fonts.cityLabels.size

   Type: *int*

   Defines the point size of the font


.. confval:: scheme.fonts.cityLabels.bold

   Type: *boolean*

   Default is ``false``.

.. confval:: scheme.fonts.cityLabels.italic

   Type: *boolean*

   Default is ``false``.

.. confval:: scheme.fonts.cityLabels.underline

   Type: *boolean*

   Default is ``false``.

.. confval:: scheme.fonts.cityLabels.overline

   Type: *boolean*

   Default is ``false``.

.. note::
   **scheme.fonts.splashVersion.\***
   *Font used for version string in the splash dialog shown at application startup. If undefined it equals the base font with a bold font face and a font size of 12.*



.. confval:: scheme.fonts.splashVersion.family

   Type: *string*

   Sets the family name of the font. The name is case insensitive and may include a foundry name.


.. confval:: scheme.fonts.splashVersion.size

   Type: *int*

   Defines the point size of the font


.. confval:: scheme.fonts.splashVersion.bold

   Type: *boolean*

   Default is ``false``.

.. confval:: scheme.fonts.splashVersion.italic

   Type: *boolean*

   Default is ``false``.

.. confval:: scheme.fonts.splashVersion.underline

   Type: *boolean*

   Default is ``false``.

.. confval:: scheme.fonts.splashVersion.overline

   Type: *boolean*

   Default is ``false``.

.. note::
   **scheme.fonts.splashMessage.\***
   *Font used for the message text in the splash dialog shown at application startup. If undefined it equals the base font with a font size of 12.*



.. confval:: scheme.fonts.splashMessage.family

   Type: *string*

   Sets the family name of the font. The name is case insensitive and may include a foundry name.


.. confval:: scheme.fonts.splashMessage.size

   Type: *int*

   Defines the point size of the font


.. confval:: scheme.fonts.splashMessage.bold

   Type: *boolean*

   Default is ``false``.

.. confval:: scheme.fonts.splashMessage.italic

   Type: *boolean*

   Default is ``false``.

.. confval:: scheme.fonts.splashMessage.underline

   Type: *boolean*

   Default is ``false``.

.. confval:: scheme.fonts.splashMessage.overline

   Type: *boolean*

   Default is ``false``.

.. confval:: scheme.precision.depth

   Type: *int*

   The precision of depth values.
   Default is ``0``.

.. confval:: scheme.precision.distance

   Type: *int*

   The precision of distance values.
   Default is ``1``.

.. confval:: scheme.precision.location

   Type: *int*

   The precision of lat\/lon values.
   Default is ``2``.

.. confval:: scheme.precision.magnitude

   Type: *int*

   The precision of magnitude values.
   Default is ``2``.

.. confval:: scheme.precision.pickTime

   Type: *int*

   The precision of pick times.
   Default is ``1``.

.. confval:: scheme.precision.traceValues

   Type: *int*

   Precision of displayed offset\/amp in all trace widgets.
   Default is ``1``.

.. confval:: scheme.precision.rms

   Type: *int*

   Precision of RMS values.
   Default is ``1``.

.. confval:: scheme.precision.uncertainties

   Type: *int*

   Precision of uncertainty values, e.g. latitude errors.
   Default is ``0``.

.. confval:: scheme.unit.distanceInKM

   Type: *boolean*

   Display distances in km?
   Default is ``false``.

.. confval:: scheme.dateTime.useLocalTime

   Type: *boolean*

   Display times in localtime or UTC \(default\).
   Default is ``false``.

.. note::
   **scheme.splash.\***
   *Defines the appearance of the splash screen shown at application startup.*



.. note::
   **scheme.splash.message.\***
   *Position of the message text.*



.. confval:: scheme.splash.message.align

   Type: *int*

   Qt::Alignment bit mask. Default: AlignHCenter \| AlignBottom
   Default is ``44``.

.. note::
   **scheme.splash.message.pos.\***
   *Position in screen coordinates.*



.. confval:: scheme.splash.message.pos.x

   Type: *int*

   Unit: *px*

   Horizontal position.
   Default is ``200``.

.. confval:: scheme.splash.message.pos.y

   Type: *int*

   Unit: *px*

   Vertical position.
   Default is ``260``.

.. note::
   **scheme.splash.version.\***
   *Position of the version string*



.. confval:: scheme.splash.version.align

   Type: *int*

   Qt::Alignment bit mask. Default: AlignRight \| AlignBottom
   Default is ``34``.

.. note::
   **scheme.splash.version.pos.\***
   *Position in screen coordinates.*



.. confval:: scheme.splash.version.pos.x

   Type: *int*

   Unit: *px*

   Horizontal position.
   Default is ``362``.

.. confval:: scheme.splash.version.pos.y

   Type: *int*

   Unit: *px*

   Vertical position.
   Default is ``190``.

.. note::
   **events.timeAgo.\***
   *Defines maximum age of events to load. The value of all parameters are aggregated.*



.. confval:: events.timeAgo.days

   Type: *int*

   Unit: *d*

   Age in days.
   Default is ``1``.

.. confval:: events.timeAgo.hours

   Type: *int*

   Unit: *h*

   Age in hours.
   Default is ``0``.

.. confval:: events.timeAgo.minutes

   Type: *int*

   Unit: *m*

   Age in minutes.
   Default is ``0``.

.. confval:: events.timeAgo.seconds

   Type: *int*

   Unit: *s*

   Age in seconds.
   Default is ``0``.

.. note::
   **mode.\***
   *Configuration of special applications modes.*



.. confval:: mode.interactive

   Type: *boolean*

   Defines if application interaction is allowed.
   Default is ``true``.

.. confval:: mode.fullscreen

   Type: *boolean*

   Defines if the application should be launched in fullscreen
   mode hiding title bar, main menu and status bar.
   Default is ``false``.

.. confval:: picker.filters

   Type: *list:string*

   Configures the default filters selectable in manual picker.
   The entry with a leading \"\@\" is selected as default filter.
   Default is ``"BP 0.1 - 1 Hz  3rd order;BW(3,0.1,1)","BP 0.1 - 2 Hz  3rd order;BW(3,0.1,2)","BP 0.4 - 1 Hz  3rd order;BW(3,0.4,1)","@BP 0.7 - 2 Hz  3rd order;BW(3,0.7,2)""BP 1 - 3 Hz  3rd order;BW(3,1.0,3)","BP 2 - 4 Hz  3rd order;BW(3,2.0,4)","BP 3 - 6 Hz  3rd order;BW(3,3.0,6)","BP 4 - 8 Hz  3rd order;BW(3,4.0,8)","BP 1 - 5 Hz  3rd order;BW(3,1.0,5)","HP 3 Hz  3rd order;BW_HP(3,3)","BP 0.7 - 2 Hz + STA/LTA(1,50);RMHP(10)->ITAPER(30)->BW(3,0.7,2)->STALTA(1,50)"``.

.. confval:: eventlist.visibleColumns

   Type: *list:string*

   Configure the columns of the event list that are visible initially.
   The first column containing the origin time is always visible and cannot
   be hidden. Possible values are: Type, M, TP, Phases, Lat, Lon, Depth, DType, Stat, AzGap, FM, Origins, Agency, Author, Region, ID.
   Default is ``M, TP, Phases, RMS, Lat, Lon, Depth, Stat, Agency, Region, ID``.

.. confval:: eventlist.regions

   Type: *list:string*

   Configured a list of regions that can be used as filter of
   the result set.


.. confval:: eventlist.customColumn

   Type: *string*

   Name of an additional custom column which displays the value
   of certain origin and event comments.


.. confval:: eventlist.customColumn.originCommentID

   Type: *string*

   ID of the origin comment to look up.


.. confval:: eventlist.customColumn.eventCommentID

   Type: *string*

   ID of the event comment to look up.


.. confval:: eventlist.customColumn.pos

   Type: *int*

   Position of the column. If the configured position is less than 0 or if it
   exceeds the total number of columns then the column is appended to the right.
   Default is ``-1``.

.. confval:: eventlist.customColumn.default

   Type: *string*

   Default value to display if the specified origin or event comment id was not found.


.. confval:: eventlist.customColumn.colors

   Type: *list:string*

   Mapping of comment values to colors used as text color. E.g. \"foo:#000,bar:red\".


.. note::

   **eventlist.region.$name.\***
   *Defines a rectangular region that can be used as a result*
   *set filter on client side.*
   $name is a placeholder for the name to be used and needs to be added to :confval:`eventlist.regions` to become active.

   .. code-block:: sh

      eventlist.regions = a,b
      eventlist.region.a.value1 = ...
      eventlist.region.b.value1 = ...
      # c is not active because it has not been added
      # to the list of eventlist.regions
      eventlist.region.c.value1 = ...


.. confval:: eventlist.region.$name.name

   Type: *string*

   Defines the name of the region that shows up in the
   listbox.


.. confval:: eventlist.region.$name.rect

   Type: *list:double*

   Defines a rectangular region with a list of 4 values:
   latmin, lonmin, latmax, lonmax.


.. confval:: eventlist.filter.agencies.label

   Type: *string*

   Defines the text of the option \"Show only own events\".
   Use double quotes '\"' around the string if it contains spaces.
   Default is ``Show only own events``.

.. confval:: eventlist.filter.agencies.whitelist

   Type: *list:string*

   Sets a list of preferred agencies. Events from preferred
   agencies are defined as \"own\" events.


.. confval:: eventlist.filter.agencies.type

   Type: *string*

   Sets the type of the filter. If type is \"events\" the agency
   of the preferred origin of the event is checked.
   If type is \"origins\" the agency of all origins of
   an event is checked and if at least one origins agency is part
   of the whitelist it will pass the filter. Or in other words,
   the event is hidden if no origin is from a preferred agency.
   Default is ``events``.

.. confval:: eventlist.filter.agencies.enabled

   Type: *boolean*

   Sets the default state of the \"Show only own events\"
   option.
   Default is ``false``.

.. confval:: eventlist.filter.types.label

   Type: *string*

   Defines the text of the option \"Hide other\/fake events\".
   Use double quotes '\"' around the string if it contains spaces.
   Default is ``Hide other/fake events``.

.. confval:: eventlist.filter.types.blacklist

   Type: *list:string*

   List of event type to be hidden if the \"Hide other\/fake events\"
   option is ticked.
   Use double quotes '\"' around the string if it contains spaces.
   Default is ``"not existing"``.

.. confval:: eventlist.filter.types.enabled

   Type: *boolean*

   Sets the default state of the \"Hide other\/fake events\"
   option.
   Default is ``true``.

.. confval:: eventlist.filter.regions.enabled

   Type: *boolean*

   Sets the default state of the \"Hide events outside\"
   option.
   Default is ``false``.

.. note::
   **eventlist.filter.database.\***
   *Pre-set options to filter an event list request.*



.. confval:: eventlist.filter.database.minlat

   Type: *double*

   Unit: *deg*

   *No description available*

.. confval:: eventlist.filter.database.maxlat

   Type: *double*

   Unit: *deg*

   *No description available*

.. confval:: eventlist.filter.database.minlon

   Type: *double*

   Unit: *deg*

   *No description available*

.. confval:: eventlist.filter.database.maxlon

   Type: *double*

   Unit: *deg*

   *No description available*

.. confval:: eventlist.filter.database.mindepth

   Type: *double*

   Unit: *km*

   *No description available*

.. confval:: eventlist.filter.database.maxdepth

   Type: *double*

   Unit: *km*

   *No description available*

.. confval:: eventlist.filter.database.minmag

   Type: *double*

   *No description available*

.. confval:: eventlist.filter.database.maxmag

   Type: *double*

   *No description available*

.. confval:: eventlist.scripts.columns

   Type: *list:string*

   Registration of custom event list columns.


.. note::
   **eventlist.scripts.column.\***
   *Definition of custom event list column whose values are filled by external scripts.*



.. note::

   **eventlist.scripts.column.$name.\***
   $name is a placeholder for the name to be used.


.. confval:: eventlist.scripts.column.$name.script

   Type: *path*

   External script to invoke for each event list entry. The object represented by the
   list entry is serialized to XML and passed to the script on stdin. If the return
   code of the script is 0 \('success'\) then the script result is read from stdout and
   displayed in the corresponding event list cell.


.. confval:: eventlist.scripts.column.$name.pos

   Type: *int*

   Position of the column. If the configured position is less than 0 or if it
   exceeds the total number of columns then the column is appended to the right.
   Default is ``-1``.

.. confval:: eventlist.scripts.column.$name.label

   Type: *string*

   Column name shown in header of event list table.


.. confval:: eventlist.scripts.column.$name.types

   Type: *list:string*

   Object types this script should be invoked for. Supported values are 'Event' and 'Origin'.


.. confval:: eventedit.origin.visibleColumns

   Type: *list:string*

   Configure the columns of the event edit origin table
   that are visible initially.
   Possible values are: Phases, Lat, Lon, Depth, DType, RMS, Stat,
   Method, Agency, Author, Region
   Default is ``Phases, Lat, Lon, Depth, DType, RMS, Stat, Method, Agency, Author, Region``.

.. confval:: eventedit.fm.visibleColumns

   Type: *list:string*

   Configure the columns of the event edit focal mechanism
   tab that are visible initially.
   Possible values are: Depth, M, Count, Misfit, STDR,
   AzGap, Stat, DC, CLVD, ISO, S1,
   D1, R1, S2, D2, R2, Agency, Author
   Default is ``Depth, M, Count, Misfit, STDR, AzGap, Stat, DC, CLVD, ISO, S1, D1, R1, S2, D2, R2, Agency, Author``.

.. note::
   **eventsummary.\***
   *Parameters controlling the event summary view used e.g. in scolv.*



.. confval:: eventsummary.alertTimer.commentId

   Type: *string*

   Set an alert for every event comment that ID matches
   the specified regular expression, e.g. \"alert_.\*\".


.. confval:: eventsummary.alertTimer.commentBlacklist

   Type: *list:string*

   List of comments to ignore, e.g. \"nil\".


.. confval:: eventsummary.alertTimer.alertGradient

   Type: *list:string*

   Unit: *s:color*

   Discrete mapping of time values in seconds to colors used as
   text color in case of an active alert. E.g. \"0:00FF00,900:FF0000\".


.. confval:: eventsummary.alertTimer.textSize

   Type: *int*

   Unit: *pt*

   The text size of the time ago label in case of an active alert.


.. _global/LOCSAT:


LOCSAT extension
----------------

Locator in SeisComP for computing source time and hypocenter
coordinates from phase picks.


.. note::
   **LOCSAT.\***
   *Locator parameters: LOCSAT*



.. confval:: LOCSAT.profiles

   Type: *list:string*

   Defines a list of available LOCSAT travel\-time tables.
   Default is ``iasp91, tab``.

.. confval:: LOCSAT.depthInit

   Type: *double*

   Unit: *km*

   The initial depth estimate for LOCSAT.
   Default is ``20.0``.

.. confval:: LOCSAT.usePickUncertainties

   Type: *boolean*

   Whether to use pick time untertainties for arrival deltim rather
   than a fixed time error. If true then the uncertainties are
   retrieved from each individual pick object. If they are not
   defined then the default pick time uncertainty will be used
   as fallback.
   Default is ``false``.

.. confval:: LOCSAT.defaultTimeError

   Type: *double*

   Unit: *s*

   The default pick time uncertainty assigned to LOCSAT's arrival deltim
   attribute if pick uncertainties are not going to be used or
   if they are absent. A time uncertainty of 0 s may result in
   errors of the SVD decomposition in LOCSAT.
   Default is ``1.0``.

.. confval:: LOCSAT.degreesOfFreedom

   Type: *int*

   Number of degrees of freedom.
   Default is ``9999``.

.. confval:: LOCSAT.confLevel

   Type: *double*

   Confidence level between 0.5 and 1.0.
   Default is ``0.9``.

.. confval:: LOCSAT.enableConfidenceEllipsoid

   Type: *boolean*

   Compute the confidence ellipsoid from covariance matrix in 3D.
   Default is ``false``.

.. _global/FixedHypocenter:


FixedHypocenter extension
-------------------------

Locator for re-computing source time with fixed hypocenter


.. note::
   **FixedHypocenter.\***
   *Locator parameters: FixedHypocenter*



.. confval:: FixedHypocenter.profiles

   Type: *list:string*

   Defines a list of available travel time tables. Each item
   is a tuple separated by a slash with format \"[interface]\/[model]\".
   Built\-in interfaces are \"LOCSAT\" and \"libtau\".
   Other interfaces might be added via plugins. Please check their
   documentation for the required interface name.
   Default is ``LOCSAT/iasp91,LOCSAT/tab``.

.. confval:: FixedHypocenter.usePickUncertainties

   Type: *boolean*

   Whether to use pick time uncertainties rather than a fixed
   time error. If true, then the uncertainties are retrieved from
   each individual pick object. If they are not defined, then the
   default pick time uncertainty as defined by defaultTimeError
   will be used instead.
   Default is ``false``.

.. confval:: FixedHypocenter.defaultTimeError

   Type: *double*

   Unit: *s*

   The default pick time uncertainty if pick uncertainties are
   not going to be used or if they are absent.
   Default is ``1.0``.

.. confval:: FixedHypocenter.degreesOfFreedom

   Type: *int*

   Number of degrees of freedom used for error estimate.
   Default is ``8``.

.. confval:: FixedHypocenter.confLevel

   Type: *double*

   Confidence level between 0.5 and 1.
   Default is ``0.9``.


Bindings
========


Configuration
-------------


.. confval:: amplitudes.MLh.maxavg

   Type: *string*

   Define combiner operation for both horizontals \(min, max, avg\).
   Default is ``max``.

.. confval:: amplitudes.MLh.ClippingThreshold

   Type: *double*

   MLh clipping level, in raw counts, eg. 80% of 2\^23 \= 6710886.


.. confval:: magnitudes.MLh.params

   Type: *string*

   Defines attenuation parameters for MLh.
   Format: \"UpToKilometers A B; UpToNextKilometers A B;\".
   Example: \"30 nomag; 60 0.018 2.17; 700 0.0038 3.02\".
   The first parameter set \"30 nomag\" means that up to 30km
   from the sensor the magnitude should not be calculated.
   
   Note: No MLh computation if params is empty.


.. confval:: magnitudes.md.seismo

   Type: *int*

   Default filter type to use before processing and after deconvolution. It's possible to set :
   1 for a Wood\-Anderson seismometer
   2 for a 5sec generic Seismometer
   3 for a WWSSN LP seismometer
   4 for a WSSN SP seismometer
   5 for a Generic Seismometer
   6 for a Butterworth Low pass filter
   7 for a Butterworth High pass filter
   8 for a Butterworth Band pass filter
   9 for a 1Hz eigen\-frequency L4C seismometer
   Default is ``9``.

.. confval:: magnitudes.md.taper

   Type: *double*

   Unit: *s*

   taper applied to the signal
   Default is ``5``.

.. confval:: magnitudes.md.signal_length

   Type: *double*

   Unit: *s*

   signal length used to compute the duration magnitude
   Default is ``150``.

.. confval:: magnitudes.md.butterworth

   Type: *string*

   Butterworth filter parameter applied to the signal
   Default is ``"3,1.5"``.

.. confval:: magnitudes.md.depthmax

   Type: *double*

   Unit: *km*

   Maximum depth at which duration magnitude is valid
   Default is ``200``.

.. confval:: magnitudes.md.deltamax

   Type: *double*

   Unit: *km*

   Maximum distance between earthquake and station at which duration magnitude is valid
   Default is ``400``.

.. confval:: magnitudes.md.snrmin

   Type: *double*

   Signal to noise ratio below which the coda is reached
   Default is ``1.2``.

.. confval:: magnitudes.md.mdmax

   Type: *double*

   Maximum expected duration magnitude value
   This is used to find how much data should be loaded for a given station by reversing the formula
   Default is ``5.0``.

.. confval:: magnitudes.md.fma

   Type: *double*

   FMA regional coefficient
   See Hypo2000 manual
   Default is ``-0.87``.

.. confval:: magnitudes.md.fmb

   Type: *double*

   FMB regional coefficient
   See Hypo2000 manual
   Default is ``2.0``.

.. confval:: magnitudes.md.fmd

   Type: *double*

   FMD regional coefficient
   See Hypo2000 manual
   Default is ``0.0035``.

.. confval:: magnitudes.md.fmf

   Type: *double*

   FMF regional coefficient
   See Hypo2000 manual
   Default is ``0.0``.

.. confval:: magnitudes.md.fmz

   Type: *double*

   FMZ regional coefficient
   See Hypo2000 manual
   Default is ``0.0``.

.. confval:: magnitudes.md.linearcorrection

   Type: *double*

   Linear correction
   Default is ``1.0``.

.. confval:: magnitudes.md.offset

   Type: *double*

   Offset
   Default is ``0.0``.

.. confval:: magnitudes.md.stacor

   Type: *double*

   Station correction
   Default is ``0.0``.

.. note::
   **magnitudes.MLr.\***
   *Parameter for computing MLr magnitudes for GNS/Geonet from MLv amplitudes.*



.. confval:: magnitudes.MLr.params

   Type: *string*

   Defines Stations Corrections parameters for MLr \(GNS\/Geonet Local magnitude\).
   Format: \"UpToKilometers A ; UpToNextKilometers A ;\".
   Example: \"30 nomag; 60 0.018 ; 700 0.0038 \".
   The first parameter set \"30 nomag\" means that up to 30km
   from the sensor the magnitude should not be calculated.
   A is used as station correction.
   \"nomag\" is used to disable station magnitudes.
   
   Note: No MLr computation if params is empty.


.. note::
   **amplitudes.MN.\***
   *Parameters for measuring AMN amplitudes.*



.. confval:: amplitudes.MN.rms

   Type: *boolean*

   Whether to use RMS ratio of signal and noise window for
   SNR computation or the ration of the peak\-trough
   amplitudes of either window.
   Default is ``false``.

.. confval:: amplitudes.MN.filter

   Type: *string*

   The configurable filter such that the V measurement is
   made on a filtered trace. By default, filtering is not
   enabled.
   
   See https:\/\/docs.gempa.de\/seiscomp\/current\/base\/filter\-grammar.html
   for how to specify the filter.


.. confval:: amplitudes.MN.Vmin

   Type: *double*

   Unit: *km/s*

   The minimum phase velocity used to determine the signal
   window end.
   Default is ``3.2``.

.. confval:: amplitudes.MN.Vmax

   Type: *double*

   Unit: *km/s*

   The maximum phase velocity used to determine the signal
   window start.
   Default is ``3.6``.

.. confval:: amplitudes.MN.snrWindowSeconds

   Type: *double*

   Unit: *s*

   The length of the SNR window.
   Default is ``10``.

.. confval:: amplitudes.MN.noiseWindowPreSeconds

   Type: *double*

   Unit: *s*

   The offset of the noise window. A positive value will move
   the computed noise window to the left on the time axis,
   a negative value will move it to the right on the time axis.
   Default is ``0``.

.. confval:: amplitudes.MN.signalStartPriorities

   Type: *list:string*

   The priority list of phase onsets to compute the signal
   start window. Except for Vmin and Vmax, associated phases
   \(arrivals\) must be present in the origin for this
   particular phase. Picked phases are only considered if
   the origin is a manual origin or the pick is a
   manual pick. The first value in the list which can be
   retrieved or computed, is selected.
   
   Allowed tokens: Pg, Pn, P, Sg, Sn, S, Lg, Rg, Vmin, Vmax
   Default is ``Lg,Sg,Sn,S,Vmax``.

.. confval:: amplitudes.MN.signalEndPriorities

   Type: *list:string*

   The priority list of phase onsets to compute the signal
   end window. Except for Vmin and Vmax, associated phases
   \(arrivals\) must be present in the origin for this
   particular phase. Picked phases are only considered if
   the origin is a manual origin or the pick is a
   manual pick. The first value in the list which can be
   retrieved or computed, is selected.
   
   Allowed tokens: Pg, Pn, P, Sg, Sn, S, Lg, Rg, Vmin, Vmax
   Default is ``Rg,Vmin``.

.. note::
   **magnitudes.MN.\***
   *Parameters for computing MN magnitudes from AMN amplitudes.*



.. confval:: magnitudes.MN.minSNR

   Type: *double*

   The minimum SNR required for a magnitude to pass
   the QC check. The station magnitude will be computed
   anyway but if the SNR is below this threshold it will
   be associated with weight zero and will not contribute
   to the network magnitude.
   Default is ``2``.

.. confval:: magnitudes.MN.minPeriod

   Type: *double*

   Unit: *s*

   The minimum period required for a magnitude to pass
   the QC check. The station magnitude will be computed
   anyway but if the period is below this threshold it will
   be associated with weight zero and will not contribute
   to the network magnitude.
   Default is ``0.01``.

.. confval:: magnitudes.MN.maxPeriod

   Type: *double*

   Unit: *s*

   The maximum period allowed for a magnitude to pass
   the QC check. The station magnitude will be computed
   anyway but if the period is above this threshold it will
   be associated with weight zero and will not contribute
   to the network magnitude.
   Default is ``1.3``.

.. confval:: magnitudes.MN.minDist

   Type: *double*

   Unit: *deg*

   The minimum distance required for a magnitude to pass
   the QC check. The station magnitude will be computed
   anyway but if the distance is below this threshold it
   will be associated with weight zero and will not contribute
   to the network magnitude.
   Default is ``0.5``.

.. confval:: magnitudes.MN.maxDist

   Type: *double*

   Unit: *deg*

   The maximum distance allowed for a magnitude to be
   computed. If the distance exceeds this threshold then
   the computation will be canceled and no station
   magnitude will be available at all.
   Default is ``30``.

.. confval:: detecStream

   Type: *string*

   Defines the channel code of the preferred stream used by
   e.g. scautopick and scrttv. If no component code is given,
   the vertical component will be fetched from inventory.
   For that the channel orientation \(azimuth, dip\) will be used.
   If that approach fails, 'Z' will be appended and used as
   fallback.


.. confval:: detecLocid

   Type: *string*

   Defines the location code of the preferred stream used
   eg by scautopick and scrttv.


.. note::
   **amplitudes.\***
   *Define general parameters for amplitudes of a certain type.*
   *Create amplitude type profiles to define the time windows,*
   *minimum signal-to-noise ratio, amplitude thresholds and restitution*
   *for measuring amplitudes of a certain type.*



.. confval:: amplitudes.saturationThreshold

   Type: *string*

   Unit: *counts; %*

   Defines the saturation threshold for the optional saturation check.
   By default the saturation check is disabled but giving a value above
   0 will enable it. Waveforms that are saturated are not used
   for amplitude calculations.
   
   This value can either be an absolute value of counts such
   as \"100000\" counts or a relative value
   \(optionally in percent\) with respect to the number of
   effective bits, e.g. \"0.8\@23\" or \"80%\@23\".
   The first version uses 1\*\*23 \* 0.8 whereas the latter
   uses 1\*\*23 \* 80\/100.
   
   The boolean value \"false\" explicitly disables
   the check.
   Default is ``false``.

.. confval:: amplitudes.enable

   Type: *boolean*

   Defines if amplitude calculation is enabled. If disabled,
   this station will be skipped for amplitudes and magnitudes.
   Default is ``true``.

.. confval:: amplitudes.enableResponses

   Type: *boolean*

   Activates deconvolution for this station. If no responses are
   configured, an error is raised and the data is not processed.
   This flag will be overridden by the type specific flag
   \(see Amplitude type profile\).
   Default is ``false``.

.. note::

   **amplitudes.$name.\***
   *An amplitude profile configures global parameters for a*
   *particular amplitude type. The available amplitude types*
   *are not fixed and can be extended by plugins. The name of*
   *the type must match the one defined in the corresponding*
   *AmplitudeProcessor.*
   $name is a placeholder for the name to be used.


.. confval:: amplitudes.$name.saturationThreshold

   Type: *string*

   Unit: *counts; %*

   Defines the saturation threshold for the optional saturation check.
   By default the saturation check is disabled but giving a value above
   0 will enable it. Waveforms that are saturated are not used
   for amplitude calculations.
   
   This value can either be an absolute value of counts such
   as \"100000\" counts or a relative value
   \(optionally in percent\) with respect to the number of
   effective bits, e.g. \"0.8\@23\" or \"80%\@23\".
   The first version uses 1\*\*23 \* 0.8 whereas the latter
   uses 1\*\*23 \* 80\/100.
   
   The boolean value \"false\" explicitly disables
   the check.
   Default is ``false``.

.. confval:: amplitudes.$name.enable

   Type: *boolean*

   Defines if amplitude calculation of certain type is enabled.
   Default is ``true``.

.. confval:: amplitudes.$name.enableResponses

   Type: *boolean*

   Activates deconvolution for this amplitude type. If not
   set the global flag \"amplitudes.enableResponses\"
   will be used instead.
   Default is ``false``.

.. confval:: amplitudes.$name.minSNR

   Type: *double*

   Defines the mininum SNR to be reached to compute the
   amplitudes. This value is amplitude type specific and
   has no global default value.


.. confval:: amplitudes.$name.noiseBegin

   Type: *double*

   Unit: *s*

   Overrides the default time \(relative to the trigger
   time\) of the begin of the noise window used to compute
   the noise offset and noise amplitude. Each amplitude
   processor sets its own noise time window and this option
   should only be changed if you know what you are doing.


.. confval:: amplitudes.$name.noiseEnd

   Type: *double*

   Unit: *s*

   Overrides the default time \(relative to the trigger
   time\) of the end of the noise window used to compute
   the noise offset and noise amplitude. Each amplitude
   processor sets its own noise time window and this option
   should only be changed if you know what you are doing.


.. confval:: amplitudes.$name.signalBegin

   Type: *double*

   Unit: *s*

   Overrides the default time \(relative to the trigger
   time\) of the begin of the signal window used to compute
   the final amplitude. Each amplitude processor sets its
   own signal time window and this option should only be
   changed if you know what you are doing.


.. confval:: amplitudes.$name.signalEnd

   Type: *double*

   Unit: *s*

   Overrides the default time \(relative to the trigger
   time\) of the end of the signal window used to compute
   the final amplitude. Each amplitude processor sets its
   own signal time window and this option should only be
   changed if you know what you are doing.


.. confval:: amplitudes.$name.minDist

   Type: *double*

   Unit: *deg*

   The minimum distance required to compute an amplitude.
   This settings has no effect with e.g. scautopick as there
   is no information about the source of the event to compute
   the distance. The default value is implementation
   specific.


.. confval:: amplitudes.$name.maxDist

   Type: *double*

   Unit: *deg*

   The maximum distance allowed to compute an amplitude.
   This settings has no effect with e.g. scautopick as there
   is no information about the source of the event to compute
   the distance. The default value is implementation
   specific.


.. confval:: amplitudes.$name.minDepth

   Type: *double*

   Unit: *km*

   The minimum depth required to compute an amplitude.
   This settings has no effect with e.g. scautopick as there
   is no information about the source of the event to
   retrieve the depth. The default value is implementation
   specific.


.. confval:: amplitudes.$name.maxDepth

   Type: *double*

   Unit: *km*

   The maximum depth allowed to compute an amplitude.
   This settings has no effect with e.g. scautopick as there
   is no information about the source of the event to
   retrieve the depth. The default value is implementation
   specific.


.. note::
   **amplitudes.$name.resp.\***
   *Several parameters if usage of full responses is enabled.*



.. confval:: amplitudes.$name.resp.taper

   Unit: *s*

   Defines the length of the taper at either side of the
   waveform. The length will be added to the data
   request: start \- taper and end + taper.
   Default is ``5``.

.. confval:: amplitudes.$name.resp.minFreq

   Unit: *Hz*

   After data are converted in to the frequency domain that
   minimum frequency defines the end of the left\-side cosine taper for
   the frequency spectrum. The taper applies from 0Hz to {minFreq}Hz.
   A value of 0 or lower disables that taper.
   Default is ``0.00833333``.

.. confval:: amplitudes.$name.resp.maxFreq

   Unit: *Hz*

   After data are converted in to the frequency domain that
   maximum frequency defines the start of the right\-side cosine taper for
   the frequency spectrum. The taper applies from {maxFreq}Hz to {fNyquist}Hz.
   A value of 0 or lower disables that taper.
   Default is ``0``.

.. note::
   **amplitudes.resp.\***
   *Several parameters if usage of full responses is enabled.*
   *The parameters of this group will be overridden by type*
   *specific settings if given (see Amplitude type profile).*



.. confval:: amplitudes.resp.taper

   Unit: *s*

   Defines the length of the taper at either side of the
   waveform. The length will be added to the data
   request: start \- taper and end + taper.
   Default is ``5``.

.. confval:: amplitudes.resp.minFreq

   Unit: *Hz*

   After data are converted in to the frequency domain that
   minimum frequency defines the end of the left\-side cosine taper for
   the frequency spectrum. The taper applies from 0Hz to {minFreq}Hz.
   A value of 0 or lower disables that taper.
   Default is ``0.00833333``.

.. confval:: amplitudes.resp.maxFreq

   Unit: *Hz*

   After data are converted in to the frequency domain that
   maximum frequency defines the start of the right\-side cosine taper for
   the frequency spectrum. The taper applies from {maxFreq}Hz to {fNyquist}Hz.
   A value of 0 or lower disables that taper.
   Default is ``0``.

.. note::
   **amplitudes.WoodAnderson.\***
   *Allows to configure the Wood-Anderson seismometer response.*
   *The default values are according to the version of*
   *Gutenberg (1935). The newer version by Uhrhammer and*
   *Collins (1990) is part of the IASPEI Magnitude*
   *Working Group recommendations of 2011 September 9. This*
   *version uses gain=2800, T0=0.8, h=0.8.*



.. confval:: amplitudes.WoodAnderson.gain

   Type: *double*

   The gain of the Wood\-Anderson response.
   Default is ``2800``.

.. confval:: amplitudes.WoodAnderson.T0

   Type: *double*

   Unit: *s*

   The eigen period of the Wood\-Anderson seismometer.
   Default is ``0.8``.

.. confval:: amplitudes.WoodAnderson.h

   Type: *double*

   The damping constant of the Wood\-Anderson seismometer.
   Default is ``0.8``.

.. confval:: amplitudes.ML.absMax

   Type: *boolean*

   Whether to use the absolute maximum of the filtered WA
   trace or the difference of the maximum and minimum value
   of the signal window.
   Default is ``true``.

.. confval:: amplitudes.ML.measureType

   Type: *string*

   This parameter allows to set how the amplitude is measured.
   Either by finding the absolute maximum of the demeaned
   trace \(AbsMax\), the difference of maximum and minimum of
   the signal window \(MinMax\) or the maximum peak\-trough
   of one cycle \(PeakTrough\).
   
   Note that if absMax is already explicitly configured, this
   parameter has no effect.
   Default is ``AbsMax``.

.. confval:: amplitudes.ML.combiner

   Type: *string*

   Defines the combiner operation for the amplitudes measured
   on either both horizontal component. The default is to
   use the average. Allowed values are: \"average\",
   \"min\", \"max\" and \"geometric_mean\".
   \"geometric_mean\" corresponds to averaging single\-trace
   magnitudes instead of their amplitudes.
   Default is ``average``.

.. confval:: amplitudes.MLv.absMax

   Type: *boolean*

   Whether to use the absolute maximum of the filtered WA
   trace or the difference of the maximum and minimum value
   of the signal window.
   Default is ``true``.

.. confval:: amplitudes.MLv.measureType

   Type: *string*

   This parameter allows to set how the amplitude is measured.
   Either by finding the absolute maximum of the demeaned
   trace \(AbsMax\), the difference of maximum and minimum of
   the signal window \(MinMax\) or the maximum peak\-trough
   of one cycle \(PeakTrough\).
   
   Note that if absMax is already explicitly configured, this
   parameter has no effect.
   Default is ``AbsMax``.

.. note::
   **magnitudes.\***
   *Define magnitude parameters independent of amplitude-type profiles.*
   *For magnitude correction parameters, e.g. network of station corrections,*
   *create a magnitude type profile.*



.. note::

   **magnitudes.$name.\***
   *A magnitude profile configures global parameters for a*
   *particular magnitude type. The available magnitude types*
   *are not fixed and can be extended by plugins. The name of*
   *the type must match the one defined in the corresponding*
   *MagnitudeProcessor.*
   $name is a placeholder for the name to be used.


.. confval:: magnitudes.$name.multiplier

   Type: *double*

   Part of the magnitude station correction. The final
   magnitude value is multiplier\*M+offset. This value
   is usually not required but is here for completeness.
   Default is ``1``.

.. confval:: magnitudes.$name.offset

   Type: *double*

   Part of the magnitude station correction. The final
   magnitude value is multiplier\*M+offset. This value
   can be used to correct station magnitudes.
   Default is ``0``.

.. note::
   **picker.BK.\***
   *Bkpicker is an implementation of the Baer/Kradolfer picker adapted*
   *to SeisComP. It was created by converting Manfred Baers from Fortran*
   *to C++ and inserting it as a replacement for the picker algorithm.*
   *The picker interface name to be used in configuration files is*
   *"BK".*



.. confval:: picker.BK.noiseBegin

   Type: *double*

   Unit: *s*

   Overrides the relative data acquisition time \(relative to the triggering
   pick\). This adds a margin to the actual processing and is useful
   to initialize the filter \(e.g. bandpass\). The data is not used
   at all until signalBegin is reached. The data time window start
   is the minimum of noiseBegin and signalBegin.
   Default is ``0``.

.. confval:: picker.BK.signalBegin

   Type: *double*

   Unit: *s*

   Overrides the default time \(relative to the trigger
   time\) of the begin of the signal window used to pick.
   Default is ``-20``.

.. confval:: picker.BK.signalEnd

   Type: *double*

   Unit: *s*

   Overrides the default time \(relative to the trigger
   time\) of the begin of the signal window used to pick.
   Default is ``80``.

.. confval:: picker.BK.filterType

   Type: *string*

   BP \(Bandpass\) is currently the only option.
   Default is ``BP``.

.. confval:: picker.BK.filterPoles

   Type: *int*

   Number of poles.
   Default is ``2``.

.. confval:: picker.BK.f1

   Type: *double*

   Unit: *Hz*

   Bandpass lower cutoff freq. in Hz.
   Default is ``5``.

.. confval:: picker.BK.f2

   Type: *double*

   Unit: *Hz*

   Bandpass upper cutoff freq. in Hz.
   Default is ``20``.

.. confval:: picker.BK.thrshl1

   Type: *double*

   Threshold to trigger for pick \(c.f. paper\), default 10
   Default is ``10``.

.. confval:: picker.BK.thrshl2

   Type: *double*

   Threshold for updating sigma  \(c.f. paper\), default 20
   Default is ``20``.

.. note::
   **picker.AIC.\***
   *AIC picker is an implementation using the simple non-AR algorithm of Maeda (1985),*
   *see paper of Zhang et al. (2003) in BSSA. The picker interface name to be used in configuration files is*
   *"AIC".*



.. confval:: picker.AIC.noiseBegin

   Type: *double*

   Unit: *s*

   Overrides the relative data acquisition time \(relative to the triggering
   pick\). This adds a margin to the actual processing and is useful
   to initialize the filter \(e.g. bandpass\). The data is not used
   at all until signalBegin is reached. The data time window start
   is the minimum of noiseBegin and signalBegin.
   Default is ``0``.

.. confval:: picker.AIC.signalBegin

   Type: *double*

   Unit: *s*

   Overrides the default time \(relative to the trigger
   time\) of the begin of the signal window used to pick.
   Default is ``-30``.

.. confval:: picker.AIC.signalEnd

   Type: *double*

   Unit: *s*

   Overrides the default time \(relative to the trigger
   time\) of the begin of the signal window used to pick.
   Default is ``10``.

.. confval:: picker.AIC.filter

   Type: *string*

   Overrides the default filter which is \"raw\". The typical filter grammar can be used.


.. confval:: picker.AIC.minSNR

   Type: *double*

   Defines the mininum SNR.
   Default is ``3``.

.. note::
   **spicker.L2.\***
   *L2 is an algorithm to pick S-phases based on existing P-phases. The*
   *picker interface name to be used in configuration files is*
   *"S-L2".*



.. confval:: spicker.L2.noiseBegin

   Type: *double*

   Unit: *s*

   Overrides the relative data processing start time \(relative to the triggering
   pick\). This adds a margin to the actual processing and is useful
   to initialize the filter \(e.g. bandpass\). The data is not used
   at all until signalBegin is reached. The data time window start
   is the minimum of noiseBegin and signalBegin.
   Default is ``-10``.

.. confval:: spicker.L2.signalBegin

   Type: *double*

   Unit: *s*

   Overrides the relative start time \(relative to the triggering
   pick\) of the begin of the signal processing.
   Default is ``0``.

.. confval:: spicker.L2.signalEnd

   Type: *double*

   Unit: *s*

   Overrides the relative end time \(relative to the triggering
   pick\) of the end of the signal window used to pick.
   Default is ``60``.

.. confval:: spicker.L2.filter

   Type: *string*

   Configures the filter used to compute the L2 and to pick
   the onset \(with AIC\) after the detector triggered.
   Default is ``BW(4,0.3,1.0)``.

.. confval:: spicker.L2.detecFilter

   Type: *string*

   Configures the detector in the filtered L2. This filter is
   applied on top of the base L2 filter.
   Default is ``STALTA(1,10)``.

.. confval:: spicker.L2.threshold

   Type: *double*

   The detector threshold that triggers the AIC picker.
   Default is ``3``.

.. confval:: spicker.L2.timeCorr

   Type: *double*

   Unit: *s*

   The time correction \(in seconds\) added to the detection time
   before AIC time window is computed.
   Default is ``0``.

.. confval:: spicker.L2.marginAIC

   Type: *double*

   Unit: *s*

   The AIC time window around the detection used to pick. If 0 AIC is not used.
   Default is ``5``.

.. confval:: spicker.L2.minSNR

   Type: *double*

   Defines the mininum SNR as returned from AIC.
   Default is ``15``.

.. note::
   **magnitudes.mB.\***
   *Parameters for computing mB magnitudes from mB amplitudes.*



.. confval:: magnitudes.mB.minDist

   Type: *double*

   Unit: *deg*

   Minimum epicentral distance for computing mB. Note: According
   to the IASPEI recommendations in 2013, the minimum distance
   should be 20 deg.
   Default is ``5``.

.. confval:: magnitudes.mB.maxDist

   Type: *double*

   Unit: *deg*

   Maximum epicentral distance for computing mB.
   Default is ``105``.

.. note::
   **magnitudes.mb.\***
   *Parameters for computing mb magnitudes from mb amplitudes.*



.. confval:: magnitudes.mb.minDist

   Type: *double*

   Unit: *deg*

   Minimum epicentral distance for computing mb. Note: According
   to the IASPEI recommendations in 2013, the minimum distance
   should be 20 deg.
   Default is ``5``.

.. confval:: magnitudes.mb.maxDist

   Type: *double*

   Unit: *deg*

   Maximum epicentral distance for computing mb.
   Default is ``105``.

.. note::
   **magnitudes.Ms_20.\***
   *Parameters for computing Ms_20 magnitudes from Ms_20 amplitudes.*



.. confval:: magnitudes.Ms_20.lowerPeriod

   Type: *double*

   Unit: *s*

   Lower period limit of the signal for computing Ms_20.
   Default is ``18``.

.. confval:: magnitudes.Ms_20.upperPeriod

   Type: *double*

   Unit: *s*

   Upper period limit of the signal for computing Ms_20.
   Default is ``22``.

.. confval:: magnitudes.Ms_20.minDist

   Type: *double*

   Unit: *deg*

   Minimum epicentral distance for computing Ms_20.
   Default is ``20``.

.. confval:: magnitudes.Ms_20.maxDist

   Type: *double*

   Unit: *deg*

   Maximum epicentral distance for computing Ms_20.
   Default is ``160``.

.. confval:: magnitudes.Ms_20.maxDepth

   Type: *double*

   Unit: *km*

   Maximum depth for computing Ms_20.
   Default is ``100``.

.. note::
   **magnitudes.MLv.\***
   *Parameters for computing MLv magnitudes from MLv amplitudes.*



.. confval:: magnitudes.MLv.logA0

   Type: *string*

   Defines the calibration function log10\(A0\) for computing MLv.
   Format: any number of distance\-value pairs separated by semicolons
   Example: \"0 \-1.3;60 \-2.8;100 \-3.0;400 \-4.5;1000 \-5.85\" specifies 4 distance intervals from 0...60, 60...100, 100...400 and 400...1000 km distance. Within these intervals log10\(A0\) is interpolated linearly between \-1.3...\-2.8, \-2.8...\-3.0, \-3.0...\-4.5 and \-4.5...\-5.8, respectively
   
   Note: The distances of the first and last sample specify the distance range within which MLv shall be computed.
   Default is ``0 -1.3;60 -2.8;100 -3.0;400 -4.5;1000 -5.85``.

.. confval:: magnitudes.MLv.maxDistanceKm

   Type: *double*

   Unit: *km*

   Maximum epicentral distance for computing MLv.
   No distance limitation for maxDistanceKm\=\-1
   Default is ``-1.0``.

.. note::
   **magnitudes.ML.\***
   *Parameters for computing ML magnitudes from ML amplitudes.*



.. confval:: magnitudes.ML.logA0

   Type: *string*

   Defines the calibration function log10\(A0\) for computing ML.
   Format: any number of distance\-value pairs separated by semicolons
   Example: \"0 \-1.3;60 \-2.8;100 \-3.0,400 \-4.5;1000 \-5.85\" specifies 4 distance intervals from 0...60, 60...100, 100...400 and 400...1000 km distance. Within these intervals log10\(A0\) is interpolated linearly between \-1.3...\-2.8, \-2.8...\-3.0, \-3.0...\-4.5 and \-4.5...\-5.8, respectively
   
   Note: The distances of the first and last sample specify the distance range within which ML shall be computed.
   Default is ``0 -1.3;60 -2.8;100 -3.0;400 -4.5;1000 -5.85``.

.. confval:: magnitudes.ML.maxDistanceKm

   Type: *double*

   Unit: *km*

   Maximum epicentral distance for computing ML.
   No distance limitation for maxDistanceKm\=\-1
   Default is ``-1.0``.



Command-line
============

.. program:: global


Generic
-------

.. option:: -h, --help

   show help message.

.. option:: -V, --version

   show version information

.. option:: --config-file arg

   Use alternative configuration file. When this option is used
   the loading of all stages is disabled. Only the given configuration
   file is parsed and used. To use another name for the configuration
   create a symbolic link of the application or copy it, eg scautopick \-> scautopick2.

.. option:: --plugins arg

   Load given plugins.

.. option:: -D, --daemon

   Run as daemon. This means the application will fork itself and
   doesn't need to be started with \&.

.. option:: --auto-shutdown arg

   Enable\/disable self\-shutdown because a master module shutdown. This only
   works when messaging is enabled and the master module sends a shutdown
   message \(enabled with \-\-start\-stop\-msg for the master module\).

.. option:: --shutdown-master-module arg

   Sets the name of the master\-module used for auto\-shutdown. This
   is the application name of the module actually started. If symlinks
   are used then it is the name of the symlinked application.

.. option:: --shutdown-master-username arg

   Sets the name of the master\-username of the messaging used for
   auto\-shutdown. If \"shutdown\-master\-module\" is given as well this
   parameter is ignored.


Verbose
-------

.. option:: --verbosity arg

   Verbosity level [0..4]. 0:quiet, 1:error, 2:warning, 3:info, 4:debug

.. option:: -v, --v

   Increase verbosity level \(may be repeated, eg. \-vv\)

.. option:: -q, --quiet

   Quiet mode: no logging output

.. option:: --print-component arg

   For each log entry print the component right after the
   log level. By default the component output is enabled
   for file output but disabled for console output.

.. option:: --print-context arg

   For each log entry print the source file name and line
   number.

.. option:: --component arg

   Limits the logging to a certain component. This option can be given more than once.

.. option:: -s, --syslog

   Use syslog logging back end. The output usually goes to \/var\/lib\/messages.

.. option:: -l, --lockfile arg

   Path to lock file.

.. option:: --console arg

   Send log output to stdout.

.. option:: --debug

   Debug mode: \-\-verbosity\=4 \-\-console\=1

.. option:: --trace

   Trace mode: \-\-verbosity\=4 \-\-console\=1 \-\-print\-component\=1 \-\-print\-context\=1

.. option:: --log-file arg

   Use alternative log file.


Messaging
---------

.. option:: -u, --user arg

   Overrides configuration parameter :confval:`connection.username`.

.. option:: -H, --host arg

   Overrides configuration parameter :confval:`connection.server`.

.. option:: -t, --timeout arg

   Overrides configuration parameter :confval:`connection.timeout`.

.. option:: -g, --primary-group arg

   Overrides configuration parameter :confval:`connection.primaryGroup`.

.. option:: -S, --subscribe-group arg

   A group to subscribe to. This option can be given more than once.

.. option:: --content-type arg

   Overrides configuration parameter :confval:`connection.contentType`.

.. option:: --start-stop-msg arg

   Sets sending of a start\- and a stop message.


Database
--------

.. option:: --db-driver-list

   List all supported database drivers.

.. option:: -d, --database arg

   The database connection string, format: service:\/\/user:pwd\@host\/database.
   \"service\" is the name of the database driver which can be
   queried with \"\-\-db\-driver\-list\".

.. option:: --config-module arg

   The configmodule to use.

.. option:: --inventory-db arg

   Load the inventory from the given database or file, format: [service:\/\/]location

.. option:: --config-db arg

   Load the configuration from the given database or file, format: [service:\/\/]location


Records
-------

.. option:: --record-driver-list

   List all supported record stream drivers

.. option:: -I, --record-url arg

   The recordstream source URL, format: [service:\/\/]location[#type].
   \"service\" is the name of the recordstream driver which can be
   queried with \"\-\-record\-driver\-list\". If \"service\"
   is not given \"file:\/\/\" is used.

.. option:: --record-file arg

   Specify a file as record source.

.. option:: --record-type arg

   Specify a type for the records being read.


Cities
------

.. option:: --city-xml arg

   The path to the cities XML file. This overrides the default
   paths. Compare with the global parameter \"citiesXML\"


User interface
--------------

.. option:: -F, --full-screen

   Starts the application filling the entire screen. This only works
   with GUI applications.

.. option:: -N, --non-interactive

   Use non\-interactive presentation mode. This only works with GUI applications.

