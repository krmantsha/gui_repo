.. _global:

*****************
Global parameters
*****************

The SeisComP configuration uses a unified schema to configure modules.
Modules which use the SeisComP libraries can read this configuration
directly and share global configuration options like messaging connections,
database configurations, logging and much more.
There are still some modules that do not use the libraries and are called
**standalone** modules such as :ref:`seedlink` and
:ref:`slarchive`.
They need wrappers to generate their native configuration when
:command:`seiscomp update-config` is run.

Global parameters can be used by many modules. Thus multiple configuration can be avoided.
The parameters are read from file in the following order:

#. :file:`@SYSTEMCONFIGDIR@/global.cfg`
#. :file:`@CONFIGDIR@/global.cfg`

Parameters from :file:`@CONFIGDIR@` override parameters from :file:`@SYSTEMCONFIGDIR@`.

Most :term:`trunk` modules read the configuration from the global configuration which can be overridden
by the module configuration. Read the :ref:`concept section on modules <concepts_modules>`
and the :ref:`concept section on the configuraion <concepts_configuration>` for
more details.

Though it is easy to create the configuration by directly editing the configuration
files, it is even more convenient to use a configurator.
SeisComP ships with a graphical configurator and management tool (:ref:`scconfig`)
which makes it easy to maintain
module configurations and station bindings even for large networks. It has built-in
functionality to check the state of all registered modules and to start and stop them.

The configuration is divided into three parts: :ref:`stations <global-stations>`,
:ref:`modules <global_modules>` and :ref:`bindings <global_bindings>`.


.. _global-stations:

Station meta data
=================

Station meta-data is a fundamental requirement for a seismic processing system and
for SeisComP. Read the :ref:`inventory section<concepts_inventory>` in concepts for
more details.


.. _global_modules:

Modules
=======

The concepts of :ref:`modules <concepts_modules>` and
:ref:`their configuration <global_modules_config>` is described in the
:ref:`concepts section <concepts>`.


.. _global_bindings:

Bindings
========

Bindings provide specific configurations per
:ref:`module <global_modules_config>` and station and even stream. Read the
:ref:`bindings section <global_bindings_config>` in concepts for more details on
bindings.


Extensions
==========

Extensions add new configuration options to :term:`modules<module>`. It does
not matter how those extensions are used. Commonly a module loads a plugin,
which requires additional configuration parameters - these are provided by an
extension.

There are currently extensions for the following modules, corresponding to the
plugins shown:

.. include:: /base/extensions.doc

See the documentation for each module for further information about its
extensions.



.. _global-configuration:


Plugins
=======

* :ref:`NonLinLoc <global_nonlinloc>`

  NonLinLoc locator wrapper plugin for SeisComP. NonLinLoc was written by Anthony Lomax (http://alomax.free.fr/nlloc).
* :ref:`MLh <global_mlh>`

  The MLh plugin (previously MLsed) is designed to compute amplitudes and magnitudes according to the Swiss Seismological Service (SED) standards.
* :ref:`Hypo71 <global_hypo71>`

  The traditional Hypo71PC locator with SeisComP.
* :ref:`Md <global_md>`

  Duration magnitude plugin
* :ref:`MLr <global_mlr>`

  The GNS/Geonet local magnitude
* :ref:`iLoc <global_iloc>`

  Locator in SeisComP implemented by the plugin lociloc.
* :ref:`MN <global_mn>`

  Nuttli magnitude for Canada and other Cratonic regions
* :ref:`StdLoc <global_stdloc>`

  Generic locator plugin for SeisComP.
* :ref:`LocExt <global_locext>`

  Locator which forwards the processing to external scripts
* :ref:`GUI <global_gui>`

  The GUI configuration plugin extends the configuration of graphical user interfaces to various options to adjust the look and feel.
* :ref:`RecordStream <global_recordstream>`

  RecordStream interface for SeisComP.
* :ref:`FX-DFX <global_fx-dfx>`

  Implementation of the CTBTO/IDC polarization analysis for three-component stations.
* :ref:`mB_BB <global_mb_bb>`

  Body wave magnitude  at teleseismic distances similar to mb
* :ref:`mb <global_mb>`

  Body wave magnitude at teleseismic distances
* :ref:`mb_IDC <global_mb_idc>`

  Body wave magnitude computed at CTBTO/IDC (mb) is calculated for seismic events from the time-defining primary body waves recorded at seismic stations at an epicentral distance between 20 and 105 degrees from the event.
* :ref:`Ms_20 <global_ms_20>`

  Surface wave magnitude measured at around 20 s
* :ref:`MLc <global_mlc>`

  Custom magnitude for local events measured on horizontal components
* :ref:`MLv <global_mlv>`

  Local (Richter) magnitude measured on the vertical component
* :ref:`ML <global_ml>`

  Standard local (Richter) magnitude
* :ref:`ML_IDC <global_ml_idc>`

  CTBTO/IDC local magnitude.
* :ref:`homogeneous <global_homogeneous>`

  Travel-times for a homogeneous velocity model
* :ref:`LOCSAT <global_locsat>`

  Locator in SeisComP for computing source time and hypocenter coordinates from phase picks.
* :ref:`FixedHypocenter <global_fixedhypocenter>`

  Locator for re-computing source time with fixed hypocenter

.. _global_configuration:

Module Configuration
====================



.. confval:: agencyID

   Default: ``GFZ``

   Type: *string*

   Agency ID used to set creationInfo.agencyID in
   data model objects. Should not contain spaces.


.. confval:: datacenterID

   Type: *string*

   Datacenter ID which is primarily used by Arclink and
   its tools. Should not contain spaces.


.. confval:: organization

   Default: ``Unset``

   Type: *string*

   Organization name used mainly by ArcLink and SeedLink.


.. confval:: author

   Default: ``@appname@@@@hostname@``

   Type: *string*

   Author name used to set creationInfo.author in data model
   objects. \@appname\@ is replace by the name of the
   respective executable, \@hostname\@ by the name of the computer
   on which it runs.


.. confval:: plugins

   Type: *list:string*

   List of plugins loaded at startup. Separate multiple names by
   comma. Add \${plugins} to consider all previously read values.


.. confval:: cityXML

   Type: *string*

   Path to the cities XML file. If undefined, the data is read
   from \"\@CONFIGDIR\@\/cities.xml\" or
   \"\@DATADIR\@\/cities.xml\".
   SeisComP ships with \"\@DATADIR\@\/cities.xml\".


.. confval:: loadCities

   Type: *boolean*

   Load cities from file configured by the \"cityXML\"
   parameter. GUI and map applications enable loading of cities
   by default considering the parameter
   \"scheme.map.showCities\".


.. confval:: loadRegions

   Type: *boolean*

   Load custom FEP \(Flinn\-Engdahl polygon\) regions from
   \"\@CONFIGDIR\@\/fep\/\" or \@DATADIR\@\/fep\/\".
   GUI and map applications and scevent enable FEP regions by
   default. Explicitly uncheck the option to disregard by these
   applications.


.. confval:: publicIDPattern

   Type: *string*

   Define a custom pattern for generation of public object IDs.
   The following variables are resolved:
   \@classname\@ \(class name of object\),
   \@id\@ \(public object count\),
   \@globalid\@ \(general object count\),
   \@time\@ \(current time, use '\/' to supply custom format e.g.
   \@time\/%FT%T.%fZ\@


.. confval:: configModule

   Default: ``trunk``

   Type: *string*

   Name of the configuration module.


.. confval:: database

   Type: *string*

   Define the database connection. If no database is configured
   \(which is the default\) and a messaging connection is available,
   the application will receive the parameters after the connection
   is established. Override these values only if you know what you
   are doing.
   
   The format is: service:\/\/user:pwd\@host\/database.
   \"service\" is the name of the database driver which
   can be queried with \"\-\-db\-driver\-list\".
   IMPORTANT: This parameter replaces former
   \"database.type\" and \"database.parameters\"
   which have been removed.


.. confval:: recordstream

   Type: *string*

   SeisComP applications access waveform data through the RecordStream
   interface. Read the SeisComP documentation for a list of
   supported services and their configuration.
   
   This parameter configures RecordStream source URL.
   
   Format: [service:\/\/]location[#type]
   
   \"service\": The name of the RecordStream implementation.
   If not given, \"file:\/\/\" is implied.
   
   IMPORTANT: This parameter replaces former RecordStream
   configurations in \"recordstream.service\" and
   \"recordstream.source\" which have been removed.


.. confval:: logging.level

   Default: ``2``

   Type: *int*

   Set the logging level between 1 and 4 where 1\=ERROR,
   2\=WARNING, 3\=INFO and 4\=DEBUG.


.. confval:: logging.syslog

   Default: ``false``

   Type: *boolean*

   Enable logging to syslog if supported by the host system.


.. confval:: logging.components

   Type: *list:string*

   Limit the logging to the specified list of components.
   Example: 'Application, Server'.


.. confval:: logging.component

   Type: *boolean*

   For each log entry print the component right after the
   log level. By default, the component output is enabled
   for file output but disabled for console output.


.. confval:: logging.context

   Default: ``false``

   Type: *boolean*

   For each log entry print the source file name and line
   number.


.. confval:: logging.utc

   Type: *boolean*

   Use UTC instead of local time in logging timestamps.


.. confval:: logging.file.rotator

   Default: ``true``

   Type: *boolean*

   Enable rotation of log files.


.. confval:: logging.file.rotator.timeSpan

   Default: ``86400``

   Type: *int*

   Unit: *s*

   Time span after which a log file is rotated.


.. confval:: logging.file.rotator.archiveSize

   Default: ``7``

   Type: *int*

   How many historic log files to keep.


.. confval:: logging.file.rotator.maxFileSize

   Default: ``104857600``

   Type: *int*

   Unit: *byte*

   The maximum size of a logfile in byte. The default
   value is 100 megabyte. If a logfile exceeds that
   size, then it is rotated. To disable the size limit
   give 0 or a negative value.


.. confval:: logging.objects.timeSpan

   Default: ``60``

   Type: *int*

   Unit: *s*

   Time span for counting input\/output of objects.


.. confval:: logging.syslog.facility

   Default: ``local0``

   Type: *string*

   Define the syslog facility to be used according to the
   defined facility names in syslog.h. The default is local0.
   If the given name is invalid or not available,
   initializing logging will fail and the application quits.


.. confval:: connection.server

   Default: ``localhost``

   Type: *host-with-port*

   Define the URL of the messaging server to connect to.
   URL format is [scheme:\/\/]host[:port][\/queue].
   Default scheme: scmp, default port: 18180,
   default queue: production.
   Examples:
   
   All default: localhost
   
   Specific host: scmp:\/\/10.0.1.4:18180\/production
   
   Specific host and SSL encryption:
   scmps:\/\/10.0.1.4:18180\/production


.. confval:: connection.username

   Type: *string*

   Define the username to be used. The length is maybe limited
   by the messaging system used. By default, the module name
   \(name of the executable\) is used but sometimes it exceeds
   the 10 character limit and access is denied. To prevent
   errors set a different username. An empty username will
   let the system to generate one.


.. confval:: connection.certificate

   Type: *string*

   Define the OpenSSL client certificate to be used. Path to
   OpenSSL certificate in PKCS 12 format or the prefix \"data:\"
   followed by the Base64 encoded certificate data.


.. confval:: connection.timeout

   Default: ``3``

   Type: *int*

   Unit: *s*

   The connection timeout in seconds. 3 seconds are normally
   more than enough. If a client needs to connect to a
   remote system with a slow connection, a larger timeout
   might be needed.


.. confval:: connection.primaryGroup

   Type: *string*

   Define the primary group of a module. This is the name
   of the group where a module sends its messages to if the
   target group is not explicitly given in the send call.


.. confval:: connection.contentType

   Default: ``binary``

   Type: *string*

   Define the message encoding for sending. Allowed values
   are \"binary\", \"json\" or \"xml\".
   XML has more overhead in processing but is more robust when
   schema versions between client and server are different.


.. confval:: connection.subscriptions

   Type: *list:string*

   Define a list of message groups to subscribe to. The
   default is usually given by the application and does not
   need to be changed.


.. note::
   **database.\***
   *Define the database connection. If no database is configured*
   *(which is the default) and a messaging connection is available,*
   *the application will receive the parameters after the connection*
   *is established. Override these values only if you know what you*
   *are doing.*



.. confval:: database.inventory

   Type: *string*

   Load the inventory database from a given XML file if set.
   This overrides the inventory definitions loaded from the
   database backend.


.. confval:: database.config

   Type: *string*

   Load the configuration database from a given XML file if set.
   This overrides the configuration definitions loaded from the
   database backend.


.. confval:: processing.whitelist.agencies

   Type: *list:string*

   Define a whitelist of agencies that are allowed for
   processing. Separate items by comma.


.. confval:: processing.blacklist.agencies

   Type: *list:string*

   Define a blacklist of agencies that are not allowed for
   processing. Separate items by comma.


.. confval:: inventory.whitelist.nettype

   Type: *list:string*

   List of network types to include when loading the
   inventory.


.. confval:: inventory.whitelist.statype

   Type: *list:string*

   List of station types to include when loading the
   inventory.


.. confval:: inventory.blacklist.nettype

   Type: *list:string*

   List of network types to exclude when loading the
   inventory.


.. confval:: inventory.blacklist.statype

   Type: *list:string*

   List of station types to exclude when loading the
   inventory.


.. confval:: scripts.crashHandler

   Type: *path*

   Path to crash handler script.


.. confval:: core.plugins

   Default: ``dbmysql``

   Type: *list:string*

   Define a list of core modules loaded at startup.


.. confval:: client.startStopMessage

   Default: ``false``

   Type: *boolean*

   Enable sending of an application start\- and stop message to
   the STATUS_GROUP.


.. confval:: client.autoShutdown

   Default: ``false``

   Type: *boolean*

   Enable automatic application shutdown triggered by a status
   message.


.. confval:: client.shutdownMasterModule

   Type: *string*

   Trigger shutdown if the module name of the received messages
   match.


.. confval:: client.shutdownMasterUsername

   Type: *string*

   Trigger shutdown if the user name of the received messages
   match.


.. confval:: commands.target

   Type: *string*

   A regular expression of all clients that should handle
   a command message usually send to the GUI messaging group.
   Currently this flag is only used by GUI applications to
   set an artificial origin and to tell other clients to
   show this origin. To let all connected clients handle the
   command, \".\*\$\" can be used.


.. note::
   **ttt.\***
   *Travel time table related configuration. Travel time tables can*
   *be added via plugins. Built-in interfaces are LOCSAT, libtau and*
   *homogeneous.*
   *For each loaded interface a list of supported models must be*
   *provided.*



.. note::

   **ttt.$name.\***
   $name is a placeholder for the name to be used.


.. confval:: ttt.$name.tables

   Type: *list:string*

   The list of supported model names per interface.


.. note::
   **amplitudes.\***
   *Parameters of amplitude measurements.*



.. note::
   **amplitudes.WoodAnderson.\***
   *Parameters of the Wood-Anderson seismometer response used*
   *for instrument simulation. The WA parameters can be overridden*
   *per stream by global bindings.*



.. confval:: amplitudes.WoodAnderson.gain

   Default: ``2800``

   Type: *double*

   The gain of the Wood\-Anderson response.


.. confval:: amplitudes.WoodAnderson.T0

   Default: ``0.8``

   Type: *double*

   Unit: *s*

   The eigenperiod of the Wood\-Anderson seismometer.


.. confval:: amplitudes.WoodAnderson.h

   Default: ``0.8``

   Type: *double*

   The damping constant of the Wood\-Anderson seismometer.


.. note::
   **magnitudes.\***
   *Magnitude configurations overriding global bindings.*
   *Add regionalization by magnitude-type profiles. Profile*
   *names correspond to magnitude types.*



.. note::

   **magnitudes.$name.\***
   $name is a placeholder for the name to be used.


.. confval:: magnitudes.$name.regionFile

   Type: *path*

   Path to a geofeature file, e.g. in BNA or GeoJSON format,
   with one or more polygons defining geographic regions.
   Each region allows further magnitude parametrization.
   The order of polygons\/regions matters. The list is
   tested from front to back and the first hit wins.
   Magnitude\-region profiles refer to the polygons by the
   name of the profile. The special name \"world\"
   must not be present in the geofeature file.


.. note::
   **magnitudes.$name.region.\***
   *Add parameter profiles for regions defined in the*
   *geofeature file. Profile names must match one polygon*
   *name. Otherwise, the profile is not considered.*
   *The special name "world" corresponds to the*
   *region of the entire planet as a fallback.*
   **
   *Magnitude-specific parameters, e.g. calibration functions,*
   *are adjusted in a separate section of  magnitudes with*
   *the same name.*



.. note::

   **magnitudes.$name.region.$name.\***
   $name is a placeholder for the name to be used.


.. confval:: magnitudes.$name.region.$name.enable

   Default: ``false``

   Type: *boolean*

   Enable the region or not.


.. confval:: magnitudes.$name.region.$name.minDist

   Type: *double*

   Unit: *deg*

   The minimum distance required to compute a
   magnitude. This settings has no effect with e.g.
   scautopick as there is no information about the
   source of the event to compute the distance.
   The default value is implementation specific.


.. confval:: magnitudes.$name.region.$name.maxDist

   Type: *double*

   Unit: *deg*

   The maximum distance allowed to compute a magnitude.
   This settings has no effect with e.g. scautopick
   as there is no information about the source of
   the event to compute the distance. The default
   value is implementation specific.


.. confval:: magnitudes.$name.region.$name.minDepth

   Type: *double*

   Unit: *km*

   The minimum depth required to compute a magnitude.
   This settings has no effect with e.g. scautopick
   as there is no information about the source of
   the event to retrieve the depth. The default
   value is implementation specific.


.. confval:: magnitudes.$name.region.$name.maxDepth

   Type: *double*

   Unit: *km*

   The maximum depth allowed to compute a magnitude.
   This settings has no effect with e.g. scautopick
   as there is no information about the source of
   the event to retrieve the depth. The default
   value is implementation specific.


.. confval:: magnitudes.$name.region.$name.check

   Default: ``source``

   Type: *string*

   Define how the region check is performed to accept
   a source receiver pair for further processing.
   Allowed values are:
   
   source: Only the source\/origin must be within
   the region.
   
   source\-receiver: Both source\/origin and
   receiver\/station must be within the region.
   
   raypath: The entire path between source\/origin
   and receiver\/station must be withing the region.


.. confval:: magnitudes.$name.region.$name.multiplier

   Default: ``1``

   Type: *double*

   Linear part of the default station correction
   for this region.


.. confval:: magnitudes.$name.region.$name.offset

   Default: ``0``

   Type: *double*

   Constant part of the default station correction
   for this region.


.. _global/NonLinLoc:


NonLinLoc extension
-------------------

NonLinLoc locator wrapper plugin for SeisComP.
NonLinLoc was written by Anthony Lomax (http://alomax.free.fr/nlloc).


.. confval:: NonLinLoc.publicID

   Default: ``NLL.@time/%Y%m%d%H%M%S.%f@.@id@``

   Type: *string*

   PublicID creation pattern for an origin created by NonLinLoc.


.. confval:: NonLinLoc.outputPath

   Default: ``/tmp/sc3.nll``

   Type: *path*

   Defines the output path for all native NonLinLoc input and output files.


.. confval:: NonLinLoc.saveInput

   Default: ``true``

   Type: *boolean*

   Save input files \*.obs in outputPath for later processing.
   Setting to false reduces file i\/o and saves disk space.


.. confval:: NonLinLoc.saveIntermediateOutput

   Default: ``true``

   Type: *boolean*

   Save output files in outputPath for later processing or
   for viewing by the Seismicity Viewer.
   Setting to false reduces file i\/o and saves disk space.


.. confval:: NonLinLoc.controlFile

   Type: *path*

   The default NonLinLoc control file to use.


.. confval:: NonLinLoc.defaultPickError

   Default: ``0.5``

   Type: *double*

   Unit: *s*

   The default pick error in seconds passed to NonLinLoc if a SeisComP pick
   object does not provide pick time uncertainties.


.. confval:: NonLinLoc.fixedDepthGridSpacing

   Default: ``0.1``

   Type: *double*

   Unit: *km*

   Since NLL does not support fixing the depth natively so this
   feature is emulated by settings the Z grid very tight around
   the depth to be fixed. This value sets the Z grid spacing.


.. confval:: NonLinLoc.allowMissingStations

   Default: ``true``

   Type: *boolean*

   Picks from stations with missing configuration will be
   ignored. The origin will be relocated without that pick
   if possible.
   
   If set to false, the plug\-in throws
   an excepection without locating.


.. confval:: NonLinLoc.profiles

   Type: *list:string*

   Defines a list of active profiles to be used by the plugin.


.. note::

   **NonLinLoc.profile.$name.\***
   *Defines a regional profile that is used if a prelocation falls*
   *inside the configured region.*
   $name is a placeholder for the name to be used and needs to be added to :confval:`NonLinLoc.profiles` to become active.

   .. code-block:: sh

      NonLinLoc.profiles = a,b
      NonLinLoc.profile.a.value1 = ...
      NonLinLoc.profile.b.value1 = ...
      # c is not active because it has not been added
      # to the list of NonLinLoc.profiles
      NonLinLoc.profile.c.value1 = ...


.. confval:: NonLinLoc.profile.$name.earthModelID

   Type: *string*

   earthModelID that is stored in the created origin.


.. confval:: NonLinLoc.profile.$name.methodID

   Default: ``NonLinLoc``

   Type: *string*

   methodID that is stored in the created origin.


.. confval:: NonLinLoc.profile.$name.tablePath

   Type: *path*

   Path to travel time tables \(grids\).


.. confval:: NonLinLoc.profile.$name.stationNameFormat

   Default: ``@STA@``

   Type: *string*

   Format of the station name used to select the right travel time table \(grid\) file
   for a station.
   By default only the station code is used \(e.g. tablePath.P.\@STA\@.time.\*\), but
   that doesn't allow to distinguish between multiple network codes or location codes
   that use the same station code.
   To overcome this limitation this parameter could be set in a more general way, for
   example \@NET\@_\@STA\@_\@LOC\@. In this way NonLinLoc will look for
   travel time table \(grid\) files of the form: tablePath.P.\@NET\@_\@STA\@_\@LOC\@.time.\*
   Where \@NET\@ \@STA\@ \@LOC\@ are just placeholder for the actual codes


.. confval:: NonLinLoc.profile.$name.controlFile

   Type: *path*

   Control file of the current profile. If not set, the default
   control file will be used instead.


.. confval:: NonLinLoc.profile.$name.transform

   Default: ``GLOBAL``

   Type: *string*

   Transformation type of the configured region. Supported are
   SIMPLE and GLOBAL.
   
   Default: GLOBAL is assumed.


.. confval:: NonLinLoc.profile.$name.region

   Type: *list:double*

   Defines the 4 corner values of the epicentral region for selecting the profile.
   The original epicentre must be within the region.
   
   If transform is GLOBAL: min_lat, min_lon, max_lat, max_lon.
   The values define the geographic corner coordinates. Unit is degree.
   
   If transform is SIMPLE: xmin, ymin, xmax, ymax.
   The values define the region relative to the configured origin.
   Unit is km.


.. confval:: NonLinLoc.profile.$name.origin

   Type: *list:double*

   Unit: *deg*

   Only used for transformation SIMPLE. Expects 2 values: latitude, longitude.
   The value define the geographic origin of the area spanned by region.
   Unit is degree.


.. confval:: NonLinLoc.profile.$name.rotation

   Type: *double*

   Unit: *deg*

   Only used for transformation SIMPLE. Defines the rotation around the
   origin of the defined region.


.. _global/Hypo71:


Hypo71 extension
----------------

The traditional Hypo71PC locator with SeisComP.


.. note::
   **hypo71.\***
   *General Hypo71 configuration parameters.*



.. confval:: hypo71.logFile

   Default: ``@LOGDIR@/HYPO71.LOG``

   Type: *string*

   Temporary file used by Hypo71 to store calculation logs.


.. confval:: hypo71.inputFile

   Default: ``@DATADIR@/hypo71/HYPO71.INP``

   Type: *string*

   Temporary file to write Hypo71 input data to.


.. confval:: hypo71.outputFile

   Default: ``@DATADIR@/hypo71/HYPO71.PRT``

   Type: *string*

   Temporary output file to read Hypo71 location data from.


.. confval:: hypo71.defaultControlFile

   Default: ``@DATADIR@/hypo71/profiles/default.hypo71.conf``

   Type: *string*

   Hypo71 default profile.
   If no custom profile is specified, this profile will be used by the plugin when proceeding to a localization.


.. confval:: hypo71.hypo71ScriptFile

   Default: ``@DATADIR@/hypo71/run.sh``

   Type: *string*

   Bash script executed when calling the Hypo71 locator plugin for locating the earthquake.


.. confval:: hypo71.profiles

   Type: *list:string*

   Hypo71 profile name.
   Multiples names may be set. They must be separated by comma.
   Each profile can have different velocity or parameters.


.. confval:: hypo71.publicID

   Type: *string*

   Custom patternID to use when generating origin publicID


.. confval:: hypo71.useHypo71PatternID

   Type: *boolean*

   Specifies if the given publicD should be used for generating origin publicID


.. note::
   **hypo71.profile.\***
   *Profiles containing the profile-specific velocity model and the Hypo71 parameters.*



.. note::

   **hypo71.profile.$name.\***
   $name is a placeholder for the name to be used and needs to be added to :confval:`hypo71.profiles` to become active.

   .. code-block:: sh

      hypo71.profiles = a,b
      hypo71.profile.a.value1 = ...
      hypo71.profile.b.value1 = ...
      # c is not active because it has not been added
      # to the list of hypo71.profiles
      hypo71.profile.c.value1 = ...


.. confval:: hypo71.profile.$name.earthModelID

   Type: *string*

   Profile's velocity model name.


.. confval:: hypo71.profile.$name.methodID

   Default: ``Hypo71``

   Type: *string*

   Profile's method.
   It is generally the locator's name \(Hypo71\).


.. confval:: hypo71.profile.$name.controlFile

   Type: *string*

   File containing the profile parameters.


.. confval:: hypo71.profile.$name.fixStartDepthOnly

   Default: ``false``

   Type: *boolean*

   If the depth is requested to be fixed \(e.g. by ticking the option
   in scolv\) the plugin performs only one location starting at
   specified depth but with free depth evaluation. This option
   defines whether it should really fix the depth \(false\) or
   use this fixed depth only as starting point \(true\).


.. _global/iLoc:


iLoc extension
--------------

Locator in SeisComP implemented by the plugin lociloc.


.. note::
   **iLoc.\***
   *Locator parameters: iLoc*



.. confval:: iLoc.auxDir

   Default: ``@DATADIR@/iloc/iLocAuxDir``

   Type: *string*

   iLoc directory for auxialiary files and directories. Some
   of them must be provided from the iLoc website. Read the
   documentation for their installation.


.. confval:: iLoc.profiles

   Default: ``iasp91,ak135``

   Type: *list:string*

   iLoc profile name.
   Multiples names may be set separated by comma.
   Each profile can have different velocity or parameters.


.. note::
   **iLoc.profile.\***
   *Profiles containing the specific locator parameters. For*
   *the global models, iasp91 and ak135, profiles are*
   *automatically considered with defaults.*
   *To adjust the profile parameters the corresponding profile*
   *must be created.*



.. note::

   **iLoc.profile.$name.\***
   $name is a placeholder for the name to be used and needs to be added to :confval:`iLoc.profiles` to become active.

   .. code-block:: sh

      iLoc.profiles = a,b
      iLoc.profile.a.value1 = ...
      iLoc.profile.b.value1 = ...
      # c is not active because it has not been added
      # to the list of iLoc.profiles
      iLoc.profile.c.value1 = ...


.. confval:: iLoc.profile.$name.Verbose

   Default: ``true``

   Type: *boolean*

   


.. confval:: iLoc.profile.$name.globalModel

   Type: *string*

   Name of globally applied velocity model
   into which RSTT or the local model is integrated. If
   unset, the name of the profile is considered instead.


.. confval:: iLoc.profile.$name.UseRSTT

   Default: ``false``

   Type: *boolean*

   Use regional seismic travel\-time tables


.. confval:: iLoc.profile.$name.UseRSTTPnSn

   Default: ``true``

   Type: *boolean*

   Use regional seismic travel\-time tables for Pn and Sn


.. confval:: iLoc.profile.$name.UseRSTTPgLg

   Default: ``true``

   Type: *boolean*

   Use regional seismic travel\-time tables for Pg and Lg


.. confval:: iLoc.profile.$name.UseLocalTT

   Default: ``false``

   Type: *boolean*

   Use local velocity model if defined in LocalVmodel.


.. confval:: iLoc.profile.$name.LocalVmodel

   Type: *string*

   Full path to a file containing the local velocity model.
   Requires: UseLocalTT \= true. Empty string or unset or
   UseLocalTT \= false disables using a local model in
   this profile.
   
   Example:
   
   \@DATADIR\@\/iloc\/iLocAuxDir\/localmodels\/model.localmodel.dat.


.. confval:: iLoc.profile.$name.MaxLocalTTDelta

   Default: ``3``

   Type: *float*

   Unit: *deg*

   Maximum epicentral distance for applying the local
   velocity model.


.. confval:: iLoc.profile.$name.DoGridSearch

   Default: ``true``

   Type: *boolean*

   Perform neighbourhood algorithm


.. confval:: iLoc.profile.$name.NAsearchRadius

   Default: ``5``

   Type: *float*

   Unit: *deg*

   Neighbourhood Algorithm: Search radius around initial
   epicentre


.. confval:: iLoc.profile.$name.NAsearchDepth

   Default: ``300``

   Type: *float*

   Unit: *km*

   Neighbourhood Algorithm: Search radius around initial
   depth


.. confval:: iLoc.profile.$name.NAsearchOT

   Default: ``30``

   Type: *float*

   Unit: *s*

   Neighbourhood Algorithm: Search radius around initial
   origin time


.. confval:: iLoc.profile.$name.NAlpNorm

   Default: ``1``

   Type: *float*

   Neighbourhood Algorithm: p\-value for norm to compute
   misfit [1,2]


.. confval:: iLoc.profile.$name.NAiterMax

   Default: ``5``

   Type: *integer*

   Neighbourhood Algorithm: Maximum number of iterations


.. confval:: iLoc.profile.$name.NAcells

   Default: ``25``

   Type: *integer*

   Neighbourhood Algorithm: Number of cells to be resampled
   at each iteration


.. confval:: iLoc.profile.$name.NAinitialSample

   Default: ``1000``

   Type: *integer*

   Neighbourhood Algorithm: Size of initial sample


.. confval:: iLoc.profile.$name.NAnextSample

   Default: ``100``

   Type: *integer*

   Neighbourhood Algorithm: Size of subsequent samples


.. confval:: iLoc.profile.$name.MinDepthPhases

   Default: ``3``

   Type: *integer*

   Depth resolution: Minimum number of depth phases for depdp


.. confval:: iLoc.profile.$name.MaxLocalDistDeg

   Default: ``0.2``

   Type: *float*

   Unit: *deg*

   Depth resolution: Maximum local distance


.. confval:: iLoc.profile.$name.MinLocalStations

   Default: ``1``

   Type: *integer*

   Depth resolution: Minimum number of local defining stations


.. confval:: iLoc.profile.$name.MaxSPDistDeg

   Default: ``2.0``

   Type: *float*

   Unit: *deg*

   Depth resolution: Maximum distance for using S\-P travel\-time differences.


.. confval:: iLoc.profile.$name.MinSPpairs

   Default: ``3``

   Type: *integer*

   Depth resolution: Minimum number of defining S\-P phase pairs


.. confval:: iLoc.profile.$name.MinCorePhases

   Default: ``3``

   Type: *integer*

   Depth resolution: Minimum number of defining core reflection phases


.. confval:: iLoc.profile.$name.MaxShallowDepthError

   Default: ``30.0``

   Type: *float*

   Unit: *km*

   Depth resolution: Maximum depth error for crustal free\-depth


.. confval:: iLoc.profile.$name.MaxDeepDepthError

   Default: ``60.0``

   Type: *float*

   Unit: *km*

   Depth resolution: Maximum depth error for deep free\-depth


.. confval:: iLoc.profile.$name.DoCorrelatedErrors

   Default: ``true``

   Type: *boolean*

   Linearized inversion: Account for correlated errors


.. confval:: iLoc.profile.$name.SigmaThreshold

   Default: ``6.0``

   Type: *float*

   Unit: *s*

   Linearized inversion: Used to exclude big residuals from solution


.. confval:: iLoc.profile.$name.AllowDamping

   Default: ``true``

   Type: *boolean*

   Linearized inversion: Allow damping of model vector


.. confval:: iLoc.profile.$name.MinIterations

   Default: ``4``

   Type: *integer*

   Linearized inversion: Minimum number of iterations


.. confval:: iLoc.profile.$name.MaxIterations

   Default: ``20``

   Type: *integer*

   Linearized inversion: Maximum number of iterations


.. confval:: iLoc.profile.$name.MinNdefPhases

   Default: ``4``

   Type: *integer*

   Linearized inversion: Minimum number of defining phases


.. confval:: iLoc.profile.$name.DoNotRenamePhases

   Default: ``false``

   Type: *boolean*

   Linearized inversion: Do not rename phases. Deactivating
   allows to rename the phases automatically for this
   profile.


.. _global/MN:


MN extension
------------

Nuttli magnitude for Canada and other Cratonic regions


.. note::
   **amplitudes.MN.\***
   *Amplitude control parameters for MN (Nuttli magnitude).*



.. confval:: amplitudes.MN.velocityModel

   Default: ``iasp91``

   Type: *string*

   The travel time table set compiled for LocSAT. The tables
   are located in \"share\/locsat\/tables\/[vmodel].\*\".


.. note::
   **magnitudes.MN.\***
   *Regionalization of MN (Nuttli magnitude).*



.. confval:: magnitudes.MN.region

   Default: ``@DATADIR@/magnitudes/MN/MN.bna``

   Type: *path*

   The path to the BNA file which defines the valid region
   for the MN magnitude. Note that the entire path from
   source to receiver must lie entirely within the polygon\(s\).


.. confval:: magnitudes.MN.offsetMw

   Type: *double*

   The offset applied to the MN network magnitude to
   estimate Mw\(MN\). If not configured then no Mw estimation
   will be applied.


.. _global/StdLoc:


StdLoc extension
----------------

Generic locator plugin for SeisComP.


.. confval:: StdLoc.profiles

   Type: *list:string*

   Defines a list of profiles to make available to the plugin.


.. note::

   **StdLoc.profile.$name.\***
   $name is a placeholder for the name to be used and needs to be added to :confval:`StdLoc.profiles` to become active.

   .. code-block:: sh

      StdLoc.profiles = a,b
      StdLoc.profile.a.value1 = ...
      StdLoc.profile.b.value1 = ...
      # c is not active because it has not been added
      # to the list of StdLoc.profiles
      StdLoc.profile.c.value1 = ...


.. confval:: StdLoc.profile.$name.method

   Default: ``GridSearch+LeastSquares``

   Type: *string*

   The location method to use: LeastSquares, GridSearch, OctTree,
   GridSearch+LeastSquares or OctTree+LeastSquares.


.. confval:: StdLoc.profile.$name.tableType

   Default: ``LOCSAT``

   Type: *string*

   Travel time table format type.


.. confval:: StdLoc.profile.$name.tableModel

   Default: ``iasp91``

   Type: *string*

   The model to be used. The format depends on tableType.


.. confval:: StdLoc.profile.$name.PSTableOnly

   Default: ``true``

   Type: *boolean*

   If enabled the arrival travel time information are fetched
   using 'P' and 'S' tables only and the user selected phase type is not
   considered \(e.g Pg, Sg, PmP, SmS, P1, S1, etc\).


.. confval:: StdLoc.profile.$name.usePickUncertainties

   Default: ``false``

   Type: *boolean*

   Whether to use pick time uncertainties rather than a fixed
   time error. If true, then the uncertainties are retrieved from
   each individual picks and a weight associated accordingly to
   'pickUncertaintyClasses' parameter.


.. confval:: StdLoc.profile.$name.pickUncertaintyClasses

   Default: ``0.000,0.025,0.050,0.100,0.200,0.400``

   Type: *list:string*

   Unit: *s*

   Define the pick time uncertainty classes from which the pick weight is computed.
   This parameter defines a list of uncertainty time intervals: the interval
   in which a pick time uncertainty falls defines the pick class e.g. a pick
   wich uncertainty of 0.150 falls in the 4th interval and the pick class
   is then 4. if pick uncertainties are absent, the lowest class will be used.
   The pick weight then is computed as: 1 \/ 2\^\(class\-1\)


.. confval:: StdLoc.profile.$name.confLevel

   Default: ``0.9``

   Type: *double*

   Confidence level, between 0.5 and 1.0, used in computing the confidence ellipsoid.


.. confval:: StdLoc.profile.$name.enableConfidenceEllipsoid

   Default: ``true``

   Type: *boolean*

   Compute the confidence ellipsoid for the location. This is optional since
   if it is not required it can be disabled to save some computation.


.. note::
   **StdLoc.profile.$name.GridSearch.\***
   *Find the source location by evaluating the hypocenter probability*
   *of each grid cell and returning the maximum likelihood hypocenter.*
   *The source time is derived from the weighted average of arrival*
   *travel times.*
   *The solution can be further improved combining it with the Least Squares*
   *algorithm, which will then be run for each grid cell, using the cell*
   *centroid as initial location estimate. In this case only few big cells*
   *are required.*



.. confval:: StdLoc.profile.$name.GridSearch.center

   Default: ``auto,auto,5``

   Type: *list:string*

   Latitude,longitude,depth[km].


.. confval:: StdLoc.profile.$name.GridSearch.autoLatLon

   Default: ``true``

   Type: *boolean*

   If enabled, the grid center latitude and longitude
   are automatically computed as the average of the arrival station
   locations. The center depth should still be provided.


.. confval:: StdLoc.profile.$name.GridSearch.size

   Default: ``20,20,5``

   Type: *list:string*

   Unit: *km*

   Grid X, Y, Z size in km


.. confval:: StdLoc.profile.$name.GridSearch.cellSize

   Default: ``2.5,2.5,5``

   Type: *list:string*

   Unit: *km*

   Cell X, Y, Z size in km


.. confval:: StdLoc.profile.$name.GridSearch.misfitType

   Default: ``L1``

   Type: *string*

   The type of misfit to use, from which the likelyhood function is
   derived: L1 or L2 norm. L1 is less sensitive to outliers and so more
   suitable with automatic picks, L2 is the preferred choice for manual picks.


.. confval:: StdLoc.profile.$name.GridSearch.travelTimeError

   Default: ``0.25``

   Type: *double*

   Unit: *s*

   Typical error in seconds for travel\-time to one station. This
   value affects the uncertainty of the location. In OctTree it also
   influences the probability density computation: a too conservative value
   increases the number of iterations required by OctTree to converge to a
   high resolution solution.


.. note::
   **StdLoc.profile.$name.OctTree.\***
   *Find the source location and time via OctTree search. This method uses the*
   *parameters defined in GridSearch, but applies the OctTree search algorithm.*
   *The solution can be further improved combining OctTree with the Least Squares*
   *algorithm, which can use the OctTree solution as initial location estimate.*



.. confval:: StdLoc.profile.$name.OctTree.maxIterations

   Default: ``50000``

   Type: *int*

   Number of iterations after which the search stops. A zero or negative
   value disable this stopping mechanism.


.. confval:: StdLoc.profile.$name.OctTree.minCellSize

   Default: ``0.1``

   Type: *double*

   Unit: *km*

   Minimum cell size to be generate by the OctTree search to stop. A zero
   or negative value disable this stopping mechanism.


.. note::
   **StdLoc.profile.$name.LeastSquares.\***
   *Find the source location and time via iterative Least Square.*
   *However an initial location estatimate is required. if that is not*
   *available then this method should be combined with GridSearch or*
   *OctTree.*



.. confval:: StdLoc.profile.$name.LeastSquares.iterations

   Default: ``20``

   Type: *int*

   Number of iterations. Each iteration will use the
   location and time from the previous Least
   Square solution.


.. confval:: StdLoc.profile.$name.LeastSquares.dampingFactor

   Default: ``0``

   Type: *double*

   Damping factor value to be used when solving the equation system.
   0 menas no damping factor.


.. confval:: StdLoc.profile.$name.LeastSquares.solverType

   Default: ``LSMR``

   Type: *string*

   Algorithm to use: either LSMR or LSQR


.. _global/LocExt:


LocExt extension
----------------

Locator which forwards the processing to external scripts


.. note::
   **ExternalLocator.\***
   *Locator parameters: ExternalLocator*



.. confval:: ExternalLocator.profiles

   Type: *list:string*

   A list of profiles defined as tuples of name
   and path to a script separated by colon.


.. _global/GUI:


GUI extension
-------------

The GUI configuration plugin extends the configuration of
graphical user interfaces to various options to adjust the look
and feel.


.. note::
   **groups.\***
   *Configures the target messaging groups for various object types.*
   *These parameters should only be touched if you know what you*
   *are doing.*



.. confval:: groups.pick

   Default: ``PICK``

   Type: *string*

   Defines the target messaging group for manual picks, e.g.
   made in scolv.


.. confval:: groups.amplitude

   Default: ``AMPLITUDE``

   Type: *string*

   Defines the target messaging group for amplitudes, e.g.
   computed in scolv.


.. confval:: groups.magnitude

   Default: ``MAGNITUDE``

   Type: *string*

   Defines the target messaging group for magnitudes. scolv does
   not use this group but sends magnitudes together with the
   origin to the origin group.


.. confval:: groups.location

   Default: ``LOCATION``

   Type: *string*

   Defines the target messaging group for origins created in
   e.g. scolv.


.. confval:: groups.focalMechanism

   Default: ``FOCMECH``

   Type: *string*

   Defines the target messaging group for focal mechanisms created in
   e.g. scolv.


.. confval:: groups.event

   Default: ``EVENT``

   Type: *string*

   Defines the target messaging group for events and event
   journal entries.


.. confval:: map.location

   Default: ``@DATADIR@/maps/world%s.png``

   Type: *string*

   Specified the location and the structure of the map tiles to be used. This
   path is composed of zero or more directives and must include at least one
   conversion specification which starts with is introduced by the character %
   followed by a conversion specifier.  Valid specifiers are s \(replaced by
   tile ID\), l \(tile level\), c \(tile column\) and r \(tile row\). An example for
   using the OpenStreetMap file structure is \/path\/to\/maps\/%l\/%c\/%r.png.


.. confval:: map.format

   Default: ``rectangular``

   Type: *string*

   Projection of the map tiles. Supported formats are: rectangular and mercator.


.. confval:: map.cacheSize

   Default: ``0``

   Type: *int*

   Unit: *bytes*

   Cache size of the map tiles. If 0 is specified a default
   cache size of 32mb is used. The higher the cache size
   the better the performance in higher resolutions. A
   higher cache size causes less image loader calls but
   requires more client memory.


.. confval:: map.type

   Type: *string*

   Used to distinguish tile store implementations provided by plug\-ins.


.. confval:: map.customLayers

   Type: *list:string*

   Allows to add custom layers that are included via plugins.
   This is a list of layer names. A plugin must implement
   the layer interface and register itself with the
   name used in this list. The order of layers is the
   default order. The custom layers are prepended to
   the maps defaults layers such as the grid and the cities.


.. confval:: map.layers

   Type: *string*

   Defines the order of all configured layers. This
   includes the standard layers \(grid, cities\) as
   well as custom layers. The name of the grid layer
   is \"grid\" and the name of the cities
   layer is \"cities\".


.. note::
   **map.layers.events.\***
   *Configuration options for the events layer that*
   *shows all events on the map that are loaded in the*
   *event list.*



.. confval:: map.layers.events.visible

   Default: ``false``

   Type: *boolean*

   Show the events layer on maps. Currently only supported
   by scolv.


.. note::
   **map.layers.fep.\***
   *Configuration for the fep layer showing the polygons*
   *of FEP (FLinn-Engdahl-Polygon) files on maps if they*
   *exist in @DATADIR@/fep or @CONFIGDIR@/fep.*



.. confval:: map.layers.fep.visible

   Default: ``true``

   Type: *boolean*

   Show the fep layer on maps.


.. confval:: map.layers.cities.topPopulatedPlaces

   Default: ``-1``

   Type: *int*

   Maximum number of cities to be rendered. If
   cityPopulationWeight is less or equal than 0 then
   all cities are rendered ordered by population count,
   highest first.
   To show the N most populated places in the visible
   map region, set
   \"scheme.map.cityPopulationWeight\" to 0
   and set this parameter to N.


.. confval:: map.zoom.sensitivity

   Default: ``0.5``

   Type: *double*

   Zoom sensitivity of the map


.. note::
   **scheme.\***
   *This group defines various options for color, pen, brush, font, etc. for SeisComP*
   *graphical user interfaces. There are various conventions to*
   *define colors, fonts and gradients.*
   **
   *Colors are defined in HTML*
   *convention, e.g. as rgb values, hexadecimal numbers or color*
   *keyword names defined by W3C. If rgb or rgba is used, it must*
   *be quoted because the comma is handled as list separator by*
   *the configuration.*
   *Examples: "rgb(255,0,0)", FF00FF40, green.*
   **
   *Gradients are configured as lists of tuples where each tuple*
   *is colon separated in the form value:color. Value is either*
   *int or double and color is again a color definition.*
   *Example: 0:yellow,10:red*



.. confval:: scheme.showMenu

   Default: ``true``

   Type: *boolean*

   Show menu bar.


.. confval:: scheme.showStatusBar

   Default: ``true``

   Type: *boolean*

   Show status bar.


.. confval:: scheme.tabPosition

   Type: *string*

   Set position if tab bar. An unset value lets the application
   decide where to place the tab bar. This option might not be
   supported by all applications. Valid positions are: off, north,
   south, east, west


.. confval:: scheme.map.stationSize

   Default: ``8``

   Type: *int*

   Unit: *px*

   The station symbol size \(e.g. in scmv\).


.. confval:: scheme.map.originSymbolMinSize

   Default: ``9``

   Type: *int*

   Unit: *px*

   The origin symbol minimum size. The formula to compute the
   size of the origin symbol is: 4.9\*\(M\-1.2\).


.. confval:: scheme.map.vectorLayerAntiAlias

   Default: ``false``

   Type: *boolean*

   Apply antialiasing to map layers.
   This improves the visual quality but decreases performance.


.. confval:: scheme.map.bilinearFilter

   Default: ``true``

   Type: *boolean*

   Apply bilinear filtering to maps.
   The bilinear filter improves the visual quality but decreases
   performance slightly. It is only used for static map images.
   Not while dragging.


.. confval:: scheme.map.showGrid

   Default: ``true``

   Type: *boolean*

   Display the latitude\/longitude grid on maps


.. confval:: scheme.map.showCities

   Default: ``true``

   Type: *boolean*

   Show cities defined in \"citiesXML\" on maps


.. confval:: scheme.map.cityPopulationWeight

   Default: ``150``

   Type: *int*

   Controls at which zoom level a city will be visible. The
   following formula is used:
   screen_width \(km\) \* weight >\= population


.. confval:: scheme.map.showLayers

   Default: ``true``

   Type: *boolean*

   Show custom layers on maps


.. confval:: scheme.map.showLegends

   Default: ``false``

   Type: *boolean*

   Show map legends initially. Some applications provide
   controls to toggle the visibility in addition to this
   option.


.. confval:: scheme.map.projection

   Default: ``Rectangular``

   Type: *string*

   SeisComP ships with the rectangular projection built\-in.
   Other projections may be provided through plugins.


.. confval:: scheme.map.toBGR

   Default: ``false``

   Type: *boolean*

   Converts map colors from RGB color scheme to BGR.


.. confval:: scheme.map.polygonRoughness

   Default: ``3``

   Type: *int*

   Unit: *px*

   Minimum screen distance to plot a polygon or polyline line segment.


.. confval:: scheme.colors.background

   Type: *color*

   A general application background color. Can be used to give
   each application a different background color. An unset value
   lets Qt decide.


.. confval:: scheme.colors.agencies

   Type: *list:string-tuples*

   Sets desired colors for particular agencyIDs. It depends on the
   applications if they honor this setting or not. The event list
   will render the agencyID string with the defined colors.
   This is a list of tuples \(AGENCY:COLOR\),
   e.g. \"GEOFON:black, USGS:blue\".


.. confval:: scheme.colors.map.lines

   Type: *color*

   The color of lines in the map \(e.g. lines
   connecting the origin and a station\).


.. confval:: scheme.colors.map.outlines

   Type: *color*

   The color of station outlines in the map.


.. confval:: scheme.colors.map.stationAnnotations

   Type: *color*

   The color of station annotations.


.. confval:: scheme.colors.map.cityLabels

   Type: *color*

   The color of city labels.


.. confval:: scheme.colors.map.cityOutlines

   Type: *color*

   The color of city outlines.


.. confval:: scheme.colors.map.cityCapital

   Type: *color*

   The color of a capital.


.. confval:: scheme.colors.map.cityNormal

   Type: *color*

   The color of a \"normal\" city.


.. note::
   **scheme.colors.map.grid.\***
   *Defines the pen of the latitude/longitude grid of the map.*



.. confval:: scheme.colors.map.grid.color

   Default: ``FFFFFF``

   Type: *color*

   The color of the pen.


.. confval:: scheme.colors.map.grid.style

   Default: ``DotLine``

   Type: *string*

   The style of the pen. Supported values are: NoPen, SolidLine, DashLine, DotLine, DashDotLine, DashDotDotLine.


.. confval:: scheme.colors.map.grid.width

   Default: ``1``

   Type: *double*

   Unit: *px*

   The width of the pen.


.. note::
   **scheme.colors.map.annotations.\***
   *Appearance of map annotations including a text*
   *color (pen), a border color (pen) and a background*
   *color (brush).*



.. confval:: scheme.colors.map.annotations.textSize

   Default: ``9``

   Type: *int*

   Unit: *pt*

   Font point size of the label text.


.. note::
   **scheme.colors.map.annotations.normalText.\***
   *Text pen for non highlighted annotations.*



.. confval:: scheme.colors.map.annotations.normalText.color

   Default: ``c0c0c0``

   Type: *color*

   The color of the pen.


.. confval:: scheme.colors.map.annotations.normalText.style

   Default: ``SolidLine``

   Type: *string*

   The style of the pen. Supported values are:
   NoPen, SolidLine, DashLine, DotLine, DashDotLine, DashDotDotLine.


.. confval:: scheme.colors.map.annotations.normalText.width

   Default: ``1``

   Type: *double*

   Unit: *px*

   The width of the pen.


.. note::
   **scheme.colors.map.annotations.normalBorder.\***
   *Border pen for non highlighted annotations.*



.. confval:: scheme.colors.map.annotations.normalBorder.color

   Default: ``a0a0a4``

   Type: *color*

   The color of the pen.


.. confval:: scheme.colors.map.annotations.normalBorder.style

   Default: ``SolidLine``

   Type: *string*

   The style of the pen. Supported values are:
   NoPen, SolidLine, DashLine, DotLine, DashDotLine, DashDotDotLine.


.. confval:: scheme.colors.map.annotations.normalBorder.width

   Default: ``1``

   Type: *double*

   Unit: *px*

   The width of the pen.


.. note::
   **scheme.colors.map.annotations.normalBackground.\***
   *Background brush for non highlighted annotations.*



.. confval:: scheme.colors.map.annotations.normalBackground.color

   Default: ``202020c0``

   Type: *color*

   The color of the brush.


.. confval:: scheme.colors.map.annotations.normalBackground.style

   Default: ``solid``

   Type: *string*

   The style of the brush. Supported values are, e.g.:
   solid, dense1, dense7, horizontal, vertical,
   cross, bdiag, fdiag, diagcross.


.. note::
   **scheme.colors.map.annotations.highlightedText.\***
   *Text pen for highlighted annotations.*



.. confval:: scheme.colors.map.annotations.highlightedText.color

   Default: ``000000``

   Type: *color*

   The color of the pen.


.. confval:: scheme.colors.map.annotations.highlightedText.style

   Default: ``SolidLine``

   Type: *string*

   The style of the pen. Supported values are:
   NoPen, SolidLine, DashLine, DotLine, DashDotLine, DashDotDotLine.


.. confval:: scheme.colors.map.annotations.highlightedText.width

   Default: ``1``

   Type: *double*

   Unit: *px*

   The width of the pen.


.. note::
   **scheme.colors.map.annotations.highlightedBorder.\***
   *Border pen for highlighted annotations.*



.. confval:: scheme.colors.map.annotations.highlightedBorder.color

   Default: ``a0a0a4``

   Type: *color*

   The color of the pen.


.. confval:: scheme.colors.map.annotations.highlightedBorder.style

   Default: ``SolidLine``

   Type: *string*

   The style of the pen. Supported values are:
   NoPen, SolidLine, DashLine, DotLine, DashDotLine, DashDotDotLine.


.. confval:: scheme.colors.map.annotations.highlightedBorder.width

   Default: ``1``

   Type: *double*

   Unit: *px*

   The width of the pen.


.. note::
   **scheme.colors.map.annotations.highlightedBackground.\***
   *Background brush for highlighted annotations.*



.. confval:: scheme.colors.map.annotations.highlightedBackground.color

   Default: ``ffffffa0``

   Type: *color*

   The color of the brush.


.. confval:: scheme.colors.map.annotations.highlightedBackground.style

   Default: ``solid``

   Type: *string*

   The style of the brush. Supported values are, e.g.:
   solid, dense1, dense7, horizontal, vertical,
   cross, bdiag, fdiag, diagcross.


.. confval:: scheme.colors.records.foreground

   Default: ``808080``

   Type: *color*

   The general color of records\/traces.


.. confval:: scheme.colors.records.alternateForeground

   Default: ``808080``

   Type: *color*

   A general trace color of the alternate trace \(eg scheli\).


.. confval:: scheme.colors.records.background

   Type: *color*

   The general background color of records\/traces.


.. confval:: scheme.colors.records.alternateBackground

   Type: *color*

   A general background color of the alternate trace.


.. confval:: scheme.colors.records.spectrogram

   Default: ``000000``

   Type: *color*

   The trace color used on top of a spectrogram.


.. confval:: scheme.colors.records.gaps

   Default: ``FFFF0040``

   Type: *color*

   The color of data gaps in trace views.


.. confval:: scheme.colors.records.overlaps

   Default: ``FF00FF40``

   Type: *color*

   The color of data overlaps in trace views.


.. confval:: scheme.colors.records.alignment

   Default: ``FF0000``

   Type: *color*

   The color of the alignment marker in trace views.


.. note::
   **scheme.colors.records.borders.\***
   *Properties of record borders*



.. note::
   **scheme.colors.records.borders.standard.\***
   *Standard properties*



.. note::
   **scheme.colors.records.borders.standard.pen.\***
   *Defines the pen of the border line.*



.. confval:: scheme.colors.records.borders.standard.pen.color

   Type: *color*

   The color of the pen.


.. confval:: scheme.colors.records.borders.standard.pen.style

   Type: *string*

   The style of the pen. Supported values are:
   NoPen, SolidLine, DashLine, DotLine, DashDotLine, DashDotDotLine.


.. confval:: scheme.colors.records.borders.standard.pen.width

   Type: *double*

   Unit: *px*

   The width of the pen.


.. note::
   **scheme.colors.records.borders.standard.brush.\***
   *Defines the brush of the enlcosed area.*



.. confval:: scheme.colors.records.borders.standard.brush.color

   Type: *color*

   The color of the pen.


.. confval:: scheme.colors.records.borders.standard.brush.style

   Type: *string*

   The style of the brush. Supported values are, e.g.:
   solid, dense1, dense7, horizontal, vertical,
   cross, bdiag, fdiag, diagcross.


.. note::
   **scheme.colors.records.borders.signatureValid.\***
   *Properties for records with valid signatures*



.. note::
   **scheme.colors.records.borders.signatureValid.pen.\***
   *Defines the pen of the border line.*



.. confval:: scheme.colors.records.borders.signatureValid.pen.color

   Type: *color*

   The color of the pen.


.. confval:: scheme.colors.records.borders.signatureValid.pen.style

   Type: *string*

   The style of the pen. Supported values are:
   NoPen, SolidLine, DashLine, DotLine, DashDotLine, DashDotDotLine.


.. confval:: scheme.colors.records.borders.signatureValid.pen.width

   Type: *double*

   Unit: *px*

   The width of the pen.


.. note::
   **scheme.colors.records.borders.signatureValid.brush.\***
   *Defines the brush of the enlcosed area.*



.. confval:: scheme.colors.records.borders.signatureValid.brush.color

   Type: *color*

   The color of the pen.


.. confval:: scheme.colors.records.borders.signatureValid.brush.style

   Type: *string*

   The style of the pen. Supported values are, e.g.:
   solid, dense1, dense7, horizontal, vertical,
   cross, bdiag, fdiag, diagcross.


.. note::
   **scheme.colors.records.borders.signatureInvalid.\***
   *Properties for records with invalid signatures*



.. note::
   **scheme.colors.records.borders.signatureInvalid.pen.\***
   *Defines the pen of the border line.*



.. confval:: scheme.colors.records.borders.signatureInvalid.pen.color

   Type: *color*

   The color of the pen.


.. confval:: scheme.colors.records.borders.signatureInvalid.pen.style

   Type: *string*

   The style of the pen. Supported values are:
   NoPen, SolidLine, DashLine, DotLine, DashDotLine, DashDotDotLine.


.. confval:: scheme.colors.records.borders.signatureInvalid.pen.width

   Type: *double*

   Unit: *px*

   The width of the pen.


.. note::
   **scheme.colors.records.borders.signatureInvalid.brush.\***
   *Defines the brush of the enlcosed area.*



.. confval:: scheme.colors.records.borders.signatureInvalid.brush.color

   Type: *color*

   The color of the pen.


.. confval:: scheme.colors.records.borders.signatureInvalid.brush.style

   Type: *string*

   The style of the pen. Supported values are, e.g.:
   solid, dense1, dense7, horizontal, vertical,
   cross, bdiag, fdiag, diagcross.


.. note::
   **scheme.colors.records.offset.\***
   *Defines the pen of the record offset line.*



.. confval:: scheme.colors.records.offset.color

   Default: ``C0C0FF``

   Type: *color*

   The color of the pen.


.. confval:: scheme.colors.records.offset.style

   Default: ``SolidLine``

   Type: *string*

   The style of the pen. Supported values are: NoPen, SolidLine, DashLine, DotLine, DashDotLine, DashDotDotLine.


.. confval:: scheme.colors.records.offset.width

   Default: ``0.0``

   Type: *double*

   Unit: *px*

   The width of the pen.


.. note::
   **scheme.colors.records.gridPen.\***
   *Defines the pen of the record grid.*



.. confval:: scheme.colors.records.gridPen.color

   Default: ``00000020``

   Type: *color*

   The color of the pen.


.. confval:: scheme.colors.records.gridPen.style

   Default: ``DashLine``

   Type: *string*

   The style of the pen. Supported values are: NoPen, SolidLine, DashLine, DotLine, DashDotLine, DashDotDotLine.


.. confval:: scheme.colors.records.gridPen.width

   Default: ``1.0``

   Type: *double*

   Unit: *px*

   The width of the pen.


.. note::
   **scheme.colors.records.subGridPen.\***
   *Defines the pen of the secondary record grid.*



.. confval:: scheme.colors.records.subGridPen.color

   Default: ``00000000``

   Type: *color*

   The color of the pen.


.. confval:: scheme.colors.records.subGridPen.style

   Default: ``DotLine``

   Type: *string*

   The style of the pen. Supported values are: NoPen, SolidLine, DashLine, DotLine, DashDotLine, DashDotDotLine.


.. confval:: scheme.colors.records.subGridPen.width

   Default: ``1.0``

   Type: *double*

   Unit: *px*

   The width of the pen.


.. note::
   **scheme.colors.records.states.\***
   *Defines the background color of records depending on their state.*



.. confval:: scheme.colors.records.states.unrequested

   Default: ``00000080``

   Type: *color*

   Additional data which was not requested.


.. confval:: scheme.colors.records.states.requested

   Default: ``ffff0080``

   Type: *color*

   Requested data Background color of requested data.


.. confval:: scheme.colors.records.states.inProgress

   Default: ``00ff0010``

   Type: *color*

   Data currently loading.


.. confval:: scheme.colors.records.states.notAvailable

   Default: ``ff000080``

   Type: *color*

   Data which was requested but is not available.


.. confval:: scheme.colors.picks.manual

   Default: ``00FF00``

   Type: *color*

   The color of manual picks.


.. confval:: scheme.colors.picks.automatic

   Default: ``FF0000``

   Type: *color*

   The color of automatic picks.


.. confval:: scheme.colors.picks.undefined

   Default: ``A0A0A4``

   Type: *color*

   The color of picks with undefined state.


.. confval:: scheme.colors.picks.disabled

   Default: ``A0A0A4``

   Type: *color*

   The color of disabled picks.


.. confval:: scheme.colors.arrivals.manual

   Default: ``00A000``

   Type: *color*

   The color of manual arrivals \(arrivals that bind manual picks,
   e.g. residual plot of scolv, manual picker, ...\)


.. confval:: scheme.colors.arrivals.automatic

   Default: ``A00000``

   Type: *color*

   The color of automatic arrivals,


.. confval:: scheme.colors.arrivals.theoretical

   Default: ``0000A0``

   Type: *color*

   The color of theoretical arrivals.


.. confval:: scheme.colors.arrivals.undefined

   Default: ``A00000``

   Type: *color*

   The color of arrivals binding picks with undefined state.


.. confval:: scheme.colors.arrivals.disabled

   Default: ``A0A0A4``

   Type: *color*

   The color of disabled arrivals.


.. confval:: scheme.colors.arrivals.residuals

   Type: *gradient*

   The gradient of arrivals residuals. A gradient is defined as
   a list of tuples separated by colon where the first item is
   the value and the second is the color. Colors can be given in
   rgb notation or hexadecimal. When rgb is used double quotes are needed to
   protect the comma inside the rgb definition, e.g.
   \-8:\"rgb\(0,0,100\)\", \-4:\"rgb\(0,0,255\)\", \-3:\"rgb\(100,100,255\)\", ...


.. confval:: scheme.colors.magnitudes.set

   Default: ``00A000``

   Type: *color*

   The color of active magnitudes.


.. confval:: scheme.colors.magnitudes.unset

   Default: ``000000``

   Type: *color*

   The color of inactive magnitudes.


.. confval:: scheme.colors.magnitudes.disabled

   Default: ``A0A0A4``

   Type: *color*

   The color of disabled magnitudes.


.. confval:: scheme.colors.magnitudes.residuals

   Type: *gradient*

   The gradient of magnitude residuals.


.. confval:: scheme.colors.stations.text

   Default: ``ffffff``

   Type: *color*

   The color of the station name.


.. confval:: scheme.colors.stations.associated

   Default: ``82AD58``

   Type: *color*

   The color of associated stations \(e.g. in scmv\).


.. confval:: scheme.colors.stations.triggering

   Type: *color*

   The color of triggered stations.


.. confval:: scheme.colors.stations.triggered0

   Type: *color*

   *No description available*

.. confval:: scheme.colors.stations.triggered1

   Type: *color*

   *No description available*

.. confval:: scheme.colors.stations.triggered2

   Type: *color*

   *No description available*

.. confval:: scheme.colors.stations.disabled

   Type: *color*

   The color of disabled stations.


.. confval:: scheme.colors.stations.idle

   Type: *color*

   The color of idle stations.


.. note::
   **scheme.colors.qc.\***
   *The color of QC.delay thresholds in scmv.*



.. confval:: scheme.colors.qc.delay0

   Default: ``00ffff``

   Type: *color*

   *No description available*

.. confval:: scheme.colors.qc.delay1

   Default: ``00ff00``

   Type: *color*

   *No description available*

.. confval:: scheme.colors.qc.delay2

   Default: ``fffd00``

   Type: *color*

   *No description available*

.. confval:: scheme.colors.qc.delay3

   Default: ``ff6633``

   Type: *color*

   *No description available*

.. confval:: scheme.colors.qc.delay4

   Default: ``ff0000``

   Type: *color*

   *No description available*

.. confval:: scheme.colors.qc.delay5

   Default: ``cccccc``

   Type: *color*

   *No description available*

.. confval:: scheme.colors.qc.delay6

   Default: ``999999``

   Type: *color*

   *No description available*

.. confval:: scheme.colors.qc.delay7

   Default: ``666666``

   Type: *color*

   *No description available*

.. confval:: scheme.colors.qc.qcWarning

   Default: ``ffff00``

   Type: *color*

   *No description available*

.. confval:: scheme.colors.qc.qcError

   Default: ``ff0000``

   Type: *color*

   *No description available*

.. confval:: scheme.colors.qc.qcOk

   Default: ``00ff00``

   Type: *color*

   *No description available*

.. confval:: scheme.colors.qc.qcNotSet

   Default: ``000000``

   Type: *color*

   *No description available*

.. note::
   **scheme.colors.gm.\***
   *The color of ground motion amplitudes in scmv.*



.. confval:: scheme.colors.gm.gm0

   Type: *color*

   *No description available*

.. confval:: scheme.colors.gm.gm1

   Type: *color*

   *No description available*

.. confval:: scheme.colors.gm.gm2

   Type: *color*

   *No description available*

.. confval:: scheme.colors.gm.gm3

   Type: *color*

   *No description available*

.. confval:: scheme.colors.gm.gm4

   Type: *color*

   *No description available*

.. confval:: scheme.colors.gm.gm5

   Type: *color*

   *No description available*

.. confval:: scheme.colors.gm.gm6

   Type: *color*

   *No description available*

.. confval:: scheme.colors.gm.gm7

   Type: *color*

   *No description available*

.. confval:: scheme.colors.gm.gm8

   Type: *color*

   *No description available*

.. confval:: scheme.colors.gm.gm9

   Type: *color*

   *No description available*

.. confval:: scheme.colors.gm.gmNotSet

   Type: *color*

   *No description available*

.. confval:: scheme.colors.recordView.selectedTraceZoom

   Default: ``C0C0FFC0``

   Type: *color*

   The color of the selected zoom area \(e.g. manual picker\).


.. confval:: scheme.colors.legend.background

   Type: *color*

   The map legend background color.


.. confval:: scheme.colors.legend.border

   Type: *color*

   The map legend border color.


.. confval:: scheme.colors.legend.text

   Type: *color*

   The map legend text color.


.. confval:: scheme.colors.legend.headerText

   Type: *color*

   The map legend header color.


.. confval:: scheme.colors.originSymbol.classic

   Default: ``false``

   Type: *boolean*

   *No description available*

.. confval:: scheme.colors.originSymbol.depth.gradient

   Default: ``0:FF0000,50:ffA500,100:FFFF00,250:00FF00,600:0000FF``

   Type: *gradient*

   The depth gradient.


.. confval:: scheme.colors.originSymbol.depth.discrete

   Default: ``true``

   Type: *boolean*

   Setting this parameter to true will not interpolate between
   the depth steps and the color for a depth <\= input is used.


.. note::
   **scheme.colors.originStatus.\***
   *The origin status colors (e.g. in event list).*



.. confval:: scheme.colors.originStatus.automatic

   Type: *color*

   *No description available*

.. confval:: scheme.colors.originStatus.manual

   Type: *color*

   *No description available*

.. note::
   **scheme.colors.splash.\***
   *Defines colors used in the splash screen shown at application startup.*



.. confval:: scheme.colors.splash.message

   Default: ``808080``

   Type: *color*

   Text color of the message string.


.. confval:: scheme.colors.splash.version

   Default: ``02589e``

   Type: *color*

   Text color of the version string.


.. confval:: scheme.marker.lineWidth

   Type: *int*

   Unit: *px*

   The line width of the marker \(e.g. picks of manual picker\).


.. confval:: scheme.records.lineWidth

   Default: ``1``

   Type: *int*

   Unit: *px*

   The line width of the records \/ traces.


.. confval:: scheme.records.antiAliasing

   Default: ``true``

   Type: *boolean*

   Configures antialiasing of records \/ traces. Antialiasing
   needs more two times to storage space as non antialiasing
   but it improves visual quality.


.. confval:: scheme.records.optimize

   Default: ``true``

   Type: *boolean*

   Configures optimization of trace polylines. If activated
   then lines on the same pixel line or same pixel row
   collapse into single lines.


.. confval:: scheme.records.borders.drawMode

   Default: ``box``

   Type: *string*

   Mode for drawing record borders as box or line on top or
   bottom.
   
   Supported values: \"topline\",\"box\",\"bottomline\"


.. note::
   **scheme.fonts.base.\***
   *The general base font of an application. This overrides*
   *the default Qt4 application font.*



.. confval:: scheme.fonts.base.family

   Type: *string*

   Sets the family name of the font. The name is case insensitive and may include a foundry name.


.. confval:: scheme.fonts.base.size

   Type: *int*

   Defines the point size of the font


.. confval:: scheme.fonts.base.bold

   Default: ``false``

   Type: *boolean*

   *No description available*

.. confval:: scheme.fonts.base.italic

   Default: ``false``

   Type: *boolean*

   *No description available*

.. confval:: scheme.fonts.base.underline

   Default: ``false``

   Type: *boolean*

   *No description available*

.. confval:: scheme.fonts.base.overline

   Default: ``false``

   Type: *boolean*

   *No description available*

.. note::
   **scheme.fonts.small.\***
   *The smallest available font. If undefined the point size is 2 points smaller than the base font.*



.. confval:: scheme.fonts.small.family

   Type: *string*

   Sets the family name of the font. The name is case insensitive and may include a foundry name.


.. confval:: scheme.fonts.small.size

   Type: *int*

   Defines the point size of the font


.. confval:: scheme.fonts.small.bold

   Default: ``false``

   Type: *boolean*

   *No description available*

.. confval:: scheme.fonts.small.italic

   Default: ``false``

   Type: *boolean*

   *No description available*

.. confval:: scheme.fonts.small.underline

   Default: ``false``

   Type: *boolean*

   *No description available*

.. confval:: scheme.fonts.small.overline

   Default: ``false``

   Type: *boolean*

   *No description available*

.. note::
   **scheme.fonts.normal.\***
   *The default text font. If undefined the point size is 2 points larger than the base font.*



.. confval:: scheme.fonts.normal.family

   Type: *string*

   Sets the family name of the font. The name is case insensitive and may include a foundry name.


.. confval:: scheme.fonts.normal.size

   Type: *int*

   Defines the point size of the font


.. confval:: scheme.fonts.normal.bold

   Default: ``false``

   Type: *boolean*

   *No description available*

.. confval:: scheme.fonts.normal.italic

   Default: ``false``

   Type: *boolean*

   *No description available*

.. confval:: scheme.fonts.normal.underline

   Default: ``false``

   Type: *boolean*

   *No description available*

.. confval:: scheme.fonts.normal.overline

   Default: ``false``

   Type: *boolean*

   *No description available*

.. note::
   **scheme.fonts.large.\***
   *The largest text font. If undefined the point size is 6 points larger than the base font.*



.. confval:: scheme.fonts.large.family

   Type: *string*

   Sets the family name of the font. The name is case insensitive and may include a foundry name.


.. confval:: scheme.fonts.large.size

   Type: *int*

   Defines the point size of the font


.. confval:: scheme.fonts.large.bold

   Default: ``false``

   Type: *boolean*

   *No description available*

.. confval:: scheme.fonts.large.italic

   Default: ``false``

   Type: *boolean*

   *No description available*

.. confval:: scheme.fonts.large.underline

   Default: ``false``

   Type: *boolean*

   *No description available*

.. confval:: scheme.fonts.large.overline

   Default: ``false``

   Type: *boolean*

   *No description available*

.. note::
   **scheme.fonts.highlight.\***
   *Font used to highlight text. If undefined it equals the normal font except for a bold font face.*



.. confval:: scheme.fonts.highlight.family

   Type: *string*

   Sets the family name of the font. The name is case insensitive and may include a foundry name.


.. confval:: scheme.fonts.highlight.size

   Type: *int*

   Defines the point size of the font


.. confval:: scheme.fonts.highlight.bold

   Default: ``false``

   Type: *boolean*

   *No description available*

.. confval:: scheme.fonts.highlight.italic

   Default: ``false``

   Type: *boolean*

   *No description available*

.. confval:: scheme.fonts.highlight.underline

   Default: ``false``

   Type: *boolean*

   *No description available*

.. confval:: scheme.fonts.highlight.overline

   Default: ``false``

   Type: *boolean*

   *No description available*

.. note::
   **scheme.fonts.heading1.\***
   *The largest heading font. If undefined it uses a bold font face and a font size twice as large as the normal font.*



.. confval:: scheme.fonts.heading1.family

   Type: *string*

   Sets the family name of the font. The name is case insensitive and may include a foundry name.


.. confval:: scheme.fonts.heading1.size

   Type: *int*

   Defines the point size of the font


.. confval:: scheme.fonts.heading1.bold

   Default: ``false``

   Type: *boolean*

   *No description available*

.. confval:: scheme.fonts.heading1.italic

   Default: ``false``

   Type: *boolean*

   *No description available*

.. confval:: scheme.fonts.heading1.underline

   Default: ``false``

   Type: *boolean*

   *No description available*

.. confval:: scheme.fonts.heading1.overline

   Default: ``false``

   Type: *boolean*

   *No description available*

.. note::
   **scheme.fonts.heading2.\***
   *The second largest heading font. If undefined it uses a bold font face and a font size twice as large as the base font.*



.. confval:: scheme.fonts.heading2.family

   Type: *string*

   Sets the family name of the font. The name is case insensitive and may include a foundry name.


.. confval:: scheme.fonts.heading2.size

   Type: *int*

   Defines the point size of the font


.. confval:: scheme.fonts.heading2.bold

   Default: ``false``

   Type: *boolean*

   *No description available*

.. confval:: scheme.fonts.heading2.italic

   Default: ``false``

   Type: *boolean*

   *No description available*

.. confval:: scheme.fonts.heading2.underline

   Default: ``false``

   Type: *boolean*

   *No description available*

.. confval:: scheme.fonts.heading2.overline

   Default: ``false``

   Type: *boolean*

   *No description available*

.. note::
   **scheme.fonts.heading3.\***
   *The smallest heading font. If undefined it uses a bold font face and a font size 4 points larger than the base font.*



.. confval:: scheme.fonts.heading3.family

   Type: *string*

   Sets the family name of the font. The name is case insensitive and may include a foundry name.


.. confval:: scheme.fonts.heading3.size

   Type: *int*

   Defines the point size of the font


.. confval:: scheme.fonts.heading3.bold

   Default: ``false``

   Type: *boolean*

   *No description available*

.. confval:: scheme.fonts.heading3.italic

   Default: ``false``

   Type: *boolean*

   *No description available*

.. confval:: scheme.fonts.heading3.underline

   Default: ``false``

   Type: *boolean*

   *No description available*

.. confval:: scheme.fonts.heading3.overline

   Default: ``false``

   Type: *boolean*

   *No description available*

.. note::
   **scheme.fonts.cityLabels.\***
   *Font used for city labels. If undefined it equals the base font.*



.. confval:: scheme.fonts.cityLabels.family

   Type: *string*

   Sets the family name of the font. The name is case insensitive and may include a foundry name.


.. confval:: scheme.fonts.cityLabels.size

   Type: *int*

   Defines the point size of the font


.. confval:: scheme.fonts.cityLabels.bold

   Default: ``false``

   Type: *boolean*

   *No description available*

.. confval:: scheme.fonts.cityLabels.italic

   Default: ``false``

   Type: *boolean*

   *No description available*

.. confval:: scheme.fonts.cityLabels.underline

   Default: ``false``

   Type: *boolean*

   *No description available*

.. confval:: scheme.fonts.cityLabels.overline

   Default: ``false``

   Type: *boolean*

   *No description available*

.. note::
   **scheme.fonts.splashVersion.\***
   *Font used for version string in the splash dialog shown at application startup. If undefined it equals the base font with a bold font face and a font size of 12.*



.. confval:: scheme.fonts.splashVersion.family

   Type: *string*

   Sets the family name of the font. The name is case insensitive and may include a foundry name.


.. confval:: scheme.fonts.splashVersion.size

   Type: *int*

   Defines the point size of the font


.. confval:: scheme.fonts.splashVersion.bold

   Default: ``false``

   Type: *boolean*

   *No description available*

.. confval:: scheme.fonts.splashVersion.italic

   Default: ``false``

   Type: *boolean*

   *No description available*

.. confval:: scheme.fonts.splashVersion.underline

   Default: ``false``

   Type: *boolean*

   *No description available*

.. confval:: scheme.fonts.splashVersion.overline

   Default: ``false``

   Type: *boolean*

   *No description available*

.. note::
   **scheme.fonts.splashMessage.\***
   *Font used for the message text in the splash dialog shown at application startup. If undefined it equals the base font with a font size of 12.*



.. confval:: scheme.fonts.splashMessage.family

   Type: *string*

   Sets the family name of the font. The name is case insensitive and may include a foundry name.


.. confval:: scheme.fonts.splashMessage.size

   Type: *int*

   Defines the point size of the font


.. confval:: scheme.fonts.splashMessage.bold

   Default: ``false``

   Type: *boolean*

   *No description available*

.. confval:: scheme.fonts.splashMessage.italic

   Default: ``false``

   Type: *boolean*

   *No description available*

.. confval:: scheme.fonts.splashMessage.underline

   Default: ``false``

   Type: *boolean*

   *No description available*

.. confval:: scheme.fonts.splashMessage.overline

   Default: ``false``

   Type: *boolean*

   *No description available*

.. confval:: scheme.precision.depth

   Default: ``0``

   Type: *int*

   The precision of depth values.


.. confval:: scheme.precision.distance

   Default: ``1``

   Type: *int*

   The precision of distance values.


.. confval:: scheme.precision.location

   Default: ``2``

   Type: *int*

   The precision of lat\/lon values.


.. confval:: scheme.precision.magnitude

   Default: ``1``

   Type: *int*

   The precision of magnitude values.


.. confval:: scheme.precision.originTime

   Default: ``0``

   Type: *int*

   The precision of origin times.


.. confval:: scheme.precision.pickTime

   Default: ``1``

   Type: *int*

   The precision of pick times.


.. confval:: scheme.precision.traceValues

   Default: ``1``

   Type: *int*

   Precision of displayed offset\/amp in all trace widgets.


.. confval:: scheme.precision.rms

   Default: ``1``

   Type: *int*

   Precision of RMS values.


.. confval:: scheme.precision.uncertainties

   Default: ``0``

   Type: *int*

   Precision of uncertainty values, e.g. latitude errors.


.. confval:: scheme.unit.distanceInKM

   Default: ``false``

   Type: *boolean*

   Display distances in km?


.. confval:: scheme.dateTime.useLocalTime

   Default: ``false``

   Type: *boolean*

   Display times in localtime or UTC \(default\).


.. note::
   **scheme.splash.\***
   *Defines the appearance of the splash screen shown at application startup.*



.. note::
   **scheme.splash.message.\***
   *Position of the message text.*



.. confval:: scheme.splash.message.align

   Default: ``44``

   Type: *int*

   Qt::Alignment bit mask. Default: AlignHCenter \| AlignBottom


.. note::
   **scheme.splash.message.pos.\***
   *Position in screen coordinates.*



.. confval:: scheme.splash.message.pos.x

   Default: ``200``

   Type: *int*

   Unit: *px*

   Horizontal position.


.. confval:: scheme.splash.message.pos.y

   Default: ``260``

   Type: *int*

   Unit: *px*

   Vertical position.


.. note::
   **scheme.splash.version.\***
   *Position of the version string*



.. confval:: scheme.splash.version.align

   Default: ``34``

   Type: *int*

   Qt::Alignment bit mask. Default: AlignRight \| AlignBottom


.. note::
   **scheme.splash.version.pos.\***
   *Position in screen coordinates.*



.. confval:: scheme.splash.version.pos.x

   Default: ``362``

   Type: *int*

   Unit: *px*

   Horizontal position.


.. confval:: scheme.splash.version.pos.y

   Default: ``190``

   Type: *int*

   Unit: *px*

   Vertical position.


.. note::
   **events.timeAgo.\***
   *Defines maximum age of events to load. The value of all parameters are aggregated.*



.. confval:: events.timeAgo.days

   Default: ``1``

   Type: *int*

   Unit: *d*

   Age in days.


.. confval:: events.timeAgo.hours

   Default: ``0``

   Type: *int*

   Unit: *h*

   Age in hours.


.. confval:: events.timeAgo.minutes

   Default: ``0``

   Type: *int*

   Unit: *m*

   Age in minutes.


.. confval:: events.timeAgo.seconds

   Default: ``0``

   Type: *int*

   Unit: *s*

   Age in seconds.


.. note::
   **mode.\***
   *Configuration of special applications modes.*



.. confval:: mode.interactive

   Default: ``true``

   Type: *boolean*

   Defines if application interaction is allowed.


.. confval:: mode.fullscreen

   Default: ``false``

   Type: *boolean*

   Defines if the application should be launched in fullscreen
   mode hiding title bar, main menu and status bar.


.. confval:: picker.filters

   Default: ``"BP 0.1 - 1 Hz  3rd order;RMHP(10)>>ITAPER(30)>>BW(3,0.1,1)",      "BP 0.1 - 2 Hz  3rd order;RMHP(10)>>ITAPER(30)>>BW(3,0.1,2)",      "BP 1 - 3 Hz  3rd order;RMHP(10)>>ITAPER(30)>>BW(3,1.0,3)",      "BP 0.4 - 1 Hz  3rd order;RMHP(10)>>ITAPER(30)>>BW(3,0.4,1)",      "@BP 0.7 - 2 Hz  3rd order;RMHP(10)>>ITAPER(30)>>BW(3,0.7,2)",      "BP 2 - 4 Hz  3rd order;RMHP(5)>>ITAPER(10)>>BW(3,2.0,4)",      "BP 3 - 6 Hz  3rd order;RMHP(5)>>ITAPER(10)>>BW(3,3.0,6)",      "BP 4 - 8 Hz  3rd order;RMHP(5)>>ITAPER(10)>>BW(3,4.0,8)",      "BP 1 - 5 Hz  3rd order;RMHP(5)>>ITAPER(10)>>BW(3,1.0,5)",      "HP 3 Hz  3rd order;RMHP(1)>>ITAPER(2)>>BW_HP(3,3)",      "BP 0.7 - 2 Hz + STA/LTA(1,50);RMHP(10)->ITAPER(30)->BW(3,0.7,2)->STALTA(1,50)"``

   Type: *list:string*

   Configures the default filters selectable in manual picker.
   The entry with a leading \"\@\" is selected as default filter.


.. note::
   **eventlist.\***
   *Control the Events tab, e.g. in scolv, showing the list of loaded events.*



.. confval:: eventlist.visibleColumns

   Default: ``M,MType,Phases,RMS,Lat,Lon,Depth,Stat,Agency,Region,ID``

   Type: *list:string*

   Configure the columns of the event list that are visible
   initially. The first column containing the origin time is
   always visible and cannot be hidden. Possible values are:
   
   Certainty, Type, M, MType, RMS, AzGap, Phases, Lat, Lon, Depth, DType,
   Stat, FM, Origins, Agency, Author, Region, ID.
   
   Custom columns can be added by eventlist.customColumn.\* or
   eventlist.scripts.\* parameters.


.. note::
   **eventlist.customColumn.\***
   *Custom column showing origin or event comments.*



.. confval:: eventlist.customColumn.name

   Type: *string*

   Name of the custom column to be shown in the column
   header.


.. confval:: eventlist.customColumn.originCommentID

   Type: *string*

   ID of the origin comment to look up.


.. confval:: eventlist.customColumn.eventCommentID

   Type: *string*

   ID of the event comment to look up.
   
   originCommentID, if configured, takes priority.


.. confval:: eventlist.customColumn.pos

   Default: ``-1``

   Type: *int*

   Position of the column. If the configured position is
   less than 0 or if it exceeds the total number of columns,
   then the column is appended to the right.


.. confval:: eventlist.customColumn.default

   Type: *string*

   Default value to display if the specified origin or
   event comment id was not found.


.. confval:: eventlist.customColumn.colors

   Type: *list:string*

   Mapping of comment values to colors used as text color.
   E.g. \"foo:#000,bar:red\".


.. note::
   **eventlist.scripts.\***
   *Custom columns showing parameters extracted by scripts e.g.*
   *from origins or events.*



.. confval:: eventlist.scripts.columns

   Type: *list:string*

   Name of custom column profiles to be registered. Comma
   separated list.


.. note::
   **eventlist.scripts.column.\***
   *Definition of custom column profiles for creating custom*
   *event list columns whose values are filled by external scripts.*
   *The scolv documentation provides an example script.*



.. note::

   **eventlist.scripts.column.$name.\***
   $name is a placeholder for the name to be used and needs to be added to :confval:`eventlist.scripts.profiles` to become active.

   .. code-block:: sh

      eventlist.scripts.profiles = a,b
      eventlist.scripts.column.a.value1 = ...
      eventlist.scripts.column.b.value1 = ...
      # c is not active because it has not been added
      # to the list of eventlist.scripts.profiles
      eventlist.scripts.column.c.value1 = ...


.. confval:: eventlist.scripts.column.$name.script

   Type: *path*

   External script to invoke for each event list entry. The object represented by the
   list entry is serialized to XML and passed to the script on stdin. If the return
   code of the script is 0 \('success'\) then the script result is read from stdout and
   displayed in the corresponding event list cell.


.. confval:: eventlist.scripts.column.$name.pos

   Default: ``-1``

   Type: *int*

   Position of the column. If the configured position is less than 0 or if it
   exceeds the total number of columns, then the column is appended to the right.


.. confval:: eventlist.scripts.column.$name.label

   Type: *string*

   Column name shown in header of event list table.


.. confval:: eventlist.scripts.column.$name.types

   Type: *list:string*

   Object types passed to the script.
   Supported values are 'Event' and 'Origin'.
   Mandatory parameter.


.. note::
   **eventlist.filter.agencies.\***
   *Filter the loaded event list by agency ID.*



.. confval:: eventlist.filter.agencies.label

   Default: ``Show only own events``

   Type: *string*

   Defines the text of the option \"Show only own events\".
   Use double quotes '\"' around the string if it contains spaces.


.. confval:: eventlist.filter.agencies.whitelist

   Type: *list:string*

   Sets a list of preferred agencies. Events from preferred
   agencies are defined as \"own\" events.


.. confval:: eventlist.filter.agencies.type

   Default: ``events``

   Type: *string*

   Sets the type of the filter. If type is \"events\" the agency
   of the preferred origin of the event is checked.
   If type is \"origins\" the agency of all origins of
   an event is checked and if at least one origins agency is part
   of the whitelist it will pass the filter. Or in other words,
   the event is hidden if no origin is from a preferred agency.


.. confval:: eventlist.filter.agencies.enabled

   Default: ``false``

   Type: *boolean*

   Sets the default state of the \"Show only own events\"
   option.


.. note::
   **eventlist.filter.regions.\***
   *Filter the loaded event list by region within or outside a*
   *bounding box. Register the profile name in the regions parameter.*



.. confval:: eventlist.filter.regions.profiles

   Type: *list:string*

   Add the defined region profiles separated by comma.
   The order determines the ocurrence in the filter menu.


.. confval:: eventlist.filter.regions.enabled

   Default: ``false``

   Type: *boolean*

   Hide events by the defined region by default.


.. note::

   **eventlist.filter.regions.region.$name.\***
   *Define a rectangular region to filter the loaded event list.*
   $name is a placeholder for the name to be used and needs to be added to :confval:`eventlist.filter.regions.profiles` to become active.

   .. code-block:: sh

      eventlist.filter.regions.profiles = a,b
      eventlist.filter.regions.region.a.value1 = ...
      eventlist.filter.regions.region.b.value1 = ...
      # c is not active because it has not been added
      # to the list of eventlist.filter.regions.profiles
      eventlist.filter.regions.region.c.value1 = ...


.. confval:: eventlist.filter.regions.region.$name.name

   Type: *string*

   Defines the name of the region that shows up in the
   listbox.


.. confval:: eventlist.filter.regions.region.$name.rect

   Type: *list:double*

   Defines a rectangular region with a list of 4 values:
   latmin, lonmin, latmax, lonmax.


.. confval:: eventlist.filter.regions.region.$name.poly

   Type: *string*

   Defines the name of the polygon for the region check.
   If defined then the rect region has no effect.
   The configured polygon name is being search for
   in the global FEP regions and the spatial
   vector layer. The first polygon found with
   the given name will be taken.


.. note::
   **eventlist.filter.types.\***
   *Filter the loaded event list by event types.*



.. confval:: eventlist.filter.types.label

   Default: ``"Hide other/fake events"``

   Type: *string*

   Defines the text of the option \"Hide other\/fake events\".
   Use double quotes '\"' around the string if it contains spaces.


.. confval:: eventlist.filter.types.blacklist

   Default: ``"not existing"``

   Type: *list:string*

   List of event type to be hidden if the \"Hide other\/fake events\"
   option is ticked.
   Use double quotes '\"' around the string if it contains spaces.


.. confval:: eventlist.filter.types.enabled

   Default: ``true``

   Type: *boolean*

   Sets the default state of the \"Hide other\/fake events\"
   option.


.. note::
   **eventlist.filter.database.\***
   *Pre-set options to filter a database request to load events*
   *into the event list.*



.. confval:: eventlist.filter.database.minlat

   Type: *double*

   Unit: *deg*

   Minimum latitude


.. confval:: eventlist.filter.database.maxlat

   Type: *double*

   Unit: *deg*

   Maximum latitude


.. confval:: eventlist.filter.database.minlon

   Type: *double*

   Unit: *deg*

   Minimum longitude


.. confval:: eventlist.filter.database.maxlon

   Type: *double*

   Unit: *deg*

   Maximum longitude


.. confval:: eventlist.filter.database.mindepth

   Type: *double*

   Unit: *km*

   Minimum depth


.. confval:: eventlist.filter.database.maxdepth

   Type: *double*

   Unit: *km*

   Maximum depth


.. confval:: eventlist.filter.database.minmag

   Type: *double*

   Minimum magnitude


.. confval:: eventlist.filter.database.maxmag

   Type: *double*

   Maximum magnitude


.. note::
   **eventedit.\***
   *Control the Event tab, e.g. in scolv, showing origins and*
   *focal mechanisms of a selected event.*



.. confval:: eventedit.origin.visibleColumns

   Default: ``Phases, Lat, Lon, Depth, DType, RMS, AzGap, Stat, Method, Agency, Author, Region, ID``

   Type: *list:string*

   Configure the columns of the event edit origin table
   that are visible initially. Origin creation time and
   origin time are always visible.
   Possible values are:
   
   Phases, Lat, Lon, Depth, DType, RMS, AzGap, Stat, Method, Agency, Author, Region, ID


.. note::
   **eventedit.origin.customColumn.\***
   *Custom column showing origin comments.*



.. confval:: eventedit.origin.customColumn.name

   Type: *string*

   Name of the custom column to be shown in the column
   header.


.. confval:: eventedit.origin.customColumn.originCommentID

   Type: *string*

   ID of the origin comment to look up.


.. confval:: eventedit.origin.customColumn.pos

   Default: ``-1``

   Type: *int*

   Position of the column. If the configured position is less than 0 or if it
   exceeds the total number of columns then the column is appended to the right.


.. confval:: eventedit.origin.customColumn.default

   Type: *string*

   Default value to display if the specified origin or event comment id was not found.


.. confval:: eventedit.origin.customColumn.colors

   Type: *list:string*

   Mapping of comment values to colors used as text color. E.g. \"foo:#000,bar:red\".


.. confval:: eventedit.fm.visibleColumns

   Default: ``Depth, M, Count, Misfit, STDR, AzGap, Stat, DC, CLVD, ISO, S1, D1, R1, S2, D2, R2, Agency, Author``

   Type: *list:string*

   Configure the columns of the event edit focal mechanism
   tab that are visible initially.
   Possible values are: Depth, M, Count, Misfit, STDR,
   AzGap, Stat, DC, CLVD, ISO, S1,
   D1, R1, S2, D2, R2, Agency, Author


.. note::
   **eventsummary.\***
   *Parameters controlling the event summary view used e.g. in scolv.*



.. confval:: eventsummary.alertTimer.commentId

   Type: *string*

   Set an alert for every event comment that ID matches
   the specified regular expression, e.g. \"alert_.\*\".


.. confval:: eventsummary.alertTimer.commentBlacklist

   Type: *list:string*

   List of comments to ignore, e.g. \"nil\".


.. confval:: eventsummary.alertTimer.alertGradient

   Type: *list:string*

   Unit: *s:color*

   Discrete mapping of time values in seconds to colors used as
   text color in case of an active alert. E.g. \"0:00FF00,900:FF0000\".


.. confval:: eventsummary.alertTimer.textSize

   Type: *int*

   Unit: *pt*

   The text size of the time ago label in case of an active alert.


.. _global/MLc:


MLc extension
-------------

Custom magnitude for local events measured on horizontal components


.. note::
   **magnitudes.MLc.\***
   *Regionalized calibration parameters for MLc. The region itself is defined*
   *by another magnitude-type MLc profile.*



.. note::
   **magnitudes.MLc.region.\***
   *Add one profile for every region. The profile name*
   *equals the name of a polygon configured in the BNA file*
   *of the Magnitude-type profile. The Magnitude-type profile*
   *and the polygon must exist.*
   *The special name "world" corresponds to the*
   *region of the entire planet as a fallback.*



.. note::

   **magnitudes.MLc.region.$name.\***
   $name is a placeholder for the name to be used.


.. note::
   **magnitudes.MLc.region.$name.A0.\***
   *Parameters for A0, non-parametric magnitude calibration.*



.. confval:: magnitudes.MLc.region.$name.A0.logA0

   Type: *string*

   Overrides the calibration function log10\(A0\)
   for computing MLc per region. See logA0
   description in the bindings.


.. note::
   **magnitudes.MLc.region.$name.parametric.\***
   *Parameters for parametric magnitude calibration:*
   *MLc = log10(A) + c3 * log10(r/c5) + c2 * (r + c4) + c1 + c0(station)*



.. confval:: magnitudes.MLc.region.$name.parametric.c0

   Type: *double*

   Overrides the calibration parameter c0
   for computing MLc per region. See c0
   description in the bindings.


.. confval:: magnitudes.MLc.region.$name.parametric.c1

   Type: *double*

   Overrides the calibration parameter c1
   for computing MLc per region. See c1
   description in the bindings.


.. confval:: magnitudes.MLc.region.$name.parametric.c2

   Type: *double*

   Overrides the calibration parameter c2
   for computing MLc per region. See c2
   description in the bindings.


.. confval:: magnitudes.MLc.region.$name.parametric.c3

   Type: *double*

   Overrides the calibration parameter c3
   for computing MLc per region. See c3
   description in the bindings.


.. confval:: magnitudes.MLc.region.$name.parametric.c4

   Type: *double*

   Overrides the calibration parameter c4
   for computing MLc per region. See c4
   description in the bindings.


.. confval:: magnitudes.MLc.region.$name.parametric.c5

   Type: *double*

   Overrides the calibration parameter c5
   for computing MLc per region. See c5
   description in the bindings.


.. _global/MLv:


MLv extension
-------------

Local (Richter) magnitude measured on the vertical component


.. note::
   **magnitudes.MLv.\***
   *Regional calibration parameters for MLv. The region itself is defined*
   *by another magnitude-type MLv profile.*



.. note::
   **magnitudes.MLv.region.\***
   *Add one profile for every region. The profile name*
   *equals the name of a polygon configured in the BNA file*
   *of the Magnitude-type profile. The Magnitude-type profile*
   *and the polygon must exist.*
   *The special name "world" corresponds to the*
   *region of the entire planet as a fallback.*



.. note::

   **magnitudes.MLv.region.$name.\***
   $name is a placeholder for the name to be used.


.. confval:: magnitudes.MLv.region.$name.logA0

   Type: *string*

   Overrides the calibration function log10\(A0\)
   for computing MLv per region. See logA0
   description in the bindings.


.. _global/ML:


ML extension
------------

Standard local (Richter) magnitude


.. note::
   **magnitudes.ML.\***
   *Regionalized calibration parameters for ML. The region itself is defined*
   *by another magnitude-type ML profile.*



.. note::
   **magnitudes.ML.region.\***
   *Add one profile for every region. The profile name*
   *equals the name of a polygon configured in the BNA file*
   *of the Magnitude-type profile. The Magnitude-type profile*
   *and the polygon must exist.*
   *The special name "world" corresponds to the*
   *region of the entire planet as a fallback.*



.. note::

   **magnitudes.ML.region.$name.\***
   $name is a placeholder for the name to be used.


.. confval:: magnitudes.ML.region.$name.logA0

   Type: *string*

   Overrides the calibration function log10\(A0\)
   for computing ML per region. See logA0
   description in the bindings.


.. _global/LOCSAT:


LOCSAT extension
----------------

Locator in SeisComP for computing source time and hypocenter
coordinates from phase picks.


.. note::
   **LOCSAT.\***
   *Locator parameters: LOCSAT*



.. confval:: LOCSAT.profiles

   Default: ``iasp91, tab``

   Type: *list:string*

   Defines a list of available LOCSAT travel\-time tables.


.. confval:: LOCSAT.depthInit

   Default: ``20.0``

   Type: *double*

   Unit: *km*

   The initial depth estimate for LOCSAT.


.. confval:: LOCSAT.usePickUncertainties

   Default: ``false``

   Type: *boolean*

   Whether to use pick time untertainties for arrival deltim rather
   than a fixed time error. If true then the uncertainties are
   retrieved from each individual pick object. If they are not
   defined then the default pick time uncertainty will be used
   as fallback.


.. confval:: LOCSAT.defaultTimeError

   Default: ``1.0``

   Type: *double*

   Unit: *s*

   The default pick time uncertainty assigned to LOCSAT's arrival deltim
   attribute if pick uncertainties are not going to be used or
   if they are absent. A time uncertainty of 0 s may result in
   errors of the SVD decomposition in LOCSAT.


.. confval:: LOCSAT.usePickBackazimuth

   Default: ``true``

   Type: *boolean*

   Whether to forward pick backazimuth to LOCSAT or not. In an
   automatic mode backazimuth measurements might be inaccurrate
   and disabling their usage in LOCSAT can be controlled with
   this parameter.


.. confval:: LOCSAT.usePickSlowness

   Default: ``true``

   Type: *boolean*

   Whether to forward pick horizontal slowness to LOCSAT or not.
   In an automatic mode slowness measurements might be
   inaccurrate and disabling their usage in LOCSAT can be
   controlled with	this parameter.


.. confval:: LOCSAT.degreesOfFreedom

   Default: ``9999``

   Type: *int*

   Number of degrees of freedom.


.. confval:: LOCSAT.confLevel

   Default: ``0.9``

   Type: *double*

   Confidence level between 0.5 and 1.0.


.. confval:: LOCSAT.enableConfidenceEllipsoid

   Default: ``false``

   Type: *boolean*

   Compute the confidence ellipsoid from covariance matrix in 3D.


.. _global/FixedHypocenter:


FixedHypocenter extension
-------------------------

Locator for re-computing source time with fixed hypocenter


.. note::
   **FixedHypocenter.\***
   *Locator parameters: FixedHypocenter*



.. confval:: FixedHypocenter.profiles

   Default: ``LOCSAT/iasp91,LOCSAT/tab``

   Type: *list:string*

   Defines a list of available travel time tables. Each item
   is a tuple separated by a slash with format \"[interface]\/[model]\".
   Built\-in interfaces are \"LOCSAT\" and \"libtau\".
   Other interfaces might be added via plugins. Please check their
   documentation for the required interface name.


.. confval:: FixedHypocenter.usePickUncertainties

   Default: ``false``

   Type: *boolean*

   Whether to use pick time uncertainties rather than a fixed
   time error. If true, then the uncertainties are retrieved from
   each individual pick object. If they are not defined, then the
   default pick time uncertainty as defined by defaultTimeError
   will be used instead.


.. confval:: FixedHypocenter.defaultTimeError

   Default: ``1.0``

   Type: *double*

   Unit: *s*

   The default pick time uncertainty if pick uncertainties are
   not going to be used or if they are absent.


.. confval:: FixedHypocenter.degreesOfFreedom

   Default: ``8``

   Type: *int*

   Number of degrees of freedom used for error estimate.


.. confval:: FixedHypocenter.confLevel

   Default: ``0.9``

   Type: *double*

   Confidence level between 0.5 and 1.



Bindings Parameters
===================



.. confval:: amplitudes.MLh.maxavg

   Default: ``max``

   Type: *string*

   Define combiner operation for both horizontals \(min, max, avg\).


.. confval:: amplitudes.MLh.ClippingThreshold

   Type: *double*

   MLh clipping level, in raw counts, eg. 80% of 2\^23 \= 6710886.


.. confval:: magnitudes.MLh.params

   Type: *string*

   Defines attenuation parameters for MLh.
   Format: \"UpToKilometers A B; UpToNextKilometers A B;\".
   Example: \"30 nomag; 60 0.018 2.17; 700 0.0038 3.02\".
   The first parameter set \"30 nomag\" means that up to 30km
   from the sensor the magnitude should not be calculated.
   
   Note: No MLh computation if params is empty.


.. confval:: magnitudes.MLh.maxDepth

   Default: ``80``

   Type: *double*

   Unit: *km*

   Maximum depth allowed to compute the magnitude. Make sure to
   also update the MLh amplitude bindings accordingly to this
   value. maxDepth should not be greater than 80km.


.. confval:: magnitudes.md.seismo

   Default: ``9``

   Type: *int*

   Default filter type to use before processing and after deconvolution. It's possible to set :
   1 for a Wood\-Anderson seismometer
   2 for a 5sec generic Seismometer
   3 for a WWSSN LP seismometer
   4 for a WSSN SP seismometer
   5 for a Generic Seismometer
   6 for a Butterworth Low pass filter
   7 for a Butterworth High pass filter
   8 for a Butterworth Band pass filter
   9 for a 1Hz eigen\-frequency L4C seismometer


.. confval:: magnitudes.md.taper

   Default: ``5``

   Type: *double*

   Unit: *s*

   taper applied to the signal


.. confval:: magnitudes.md.signal_length

   Default: ``150``

   Type: *double*

   Unit: *s*

   signal length used to compute the duration magnitude


.. confval:: magnitudes.md.butterworth

   Default: ``"3,1.5"``

   Type: *string*

   Butterworth filter parameter applied to the signal


.. confval:: magnitudes.md.depthmax

   Default: ``200``

   Type: *double*

   Unit: *km*

   Maximum depth at which duration magnitude is valid


.. confval:: magnitudes.md.deltamax

   Default: ``400``

   Type: *double*

   Unit: *km*

   Maximum distance between earthquake and station at which duration magnitude is valid


.. confval:: magnitudes.md.snrmin

   Default: ``1.2``

   Type: *double*

   Signal to noise ratio below which the coda is reached


.. confval:: magnitudes.md.mdmax

   Default: ``5.0``

   Type: *double*

   Maximum expected duration magnitude value
   This is used to find how much data should be loaded for a given station by reversing the formula


.. confval:: magnitudes.md.fma

   Default: ``-0.87``

   Type: *double*

   FMA regional coefficient
   See Hypo2000 manual


.. confval:: magnitudes.md.fmb

   Default: ``2.0``

   Type: *double*

   FMB regional coefficient
   See Hypo2000 manual


.. confval:: magnitudes.md.fmd

   Default: ``0.0035``

   Type: *double*

   FMD regional coefficient
   See Hypo2000 manual


.. confval:: magnitudes.md.fmf

   Default: ``0.0``

   Type: *double*

   FMF regional coefficient
   See Hypo2000 manual


.. confval:: magnitudes.md.fmz

   Default: ``0.0``

   Type: *double*

   FMZ regional coefficient
   See Hypo2000 manual


.. confval:: magnitudes.md.linearcorrection

   Default: ``1.0``

   Type: *double*

   Linear correction


.. confval:: magnitudes.md.offset

   Default: ``0.0``

   Type: *double*

   Offset


.. confval:: magnitudes.md.stacor

   Default: ``0.0``

   Type: *double*

   Station correction


.. note::
   **magnitudes.MLr.\***
   *Parameter for computing MLr magnitudes for GNS/Geonet from MLv amplitudes.*



.. confval:: magnitudes.MLr.params

   Type: *string*

   Defines Stations Corrections parameters for MLr \(GNS\/Geonet Local magnitude\).
   Format: \"UpToKilometers A ; UpToNextKilometers A ;\".
   Example: \"30 nomag; 60 0.018 ; 700 0.0038 \".
   The first parameter set \"30 nomag\" means that up to 30km
   from the sensor the magnitude should not be calculated.
   A is used as station correction.
   \"nomag\" is used to disable station magnitudes.
   
   Note: No MLr computation if params is empty.


.. note::
   **amplitudes.MN.\***
   *Parameters for measuring AMN amplitudes.*



.. confval:: amplitudes.MN.rms

   Default: ``false``

   Type: *boolean*

   Whether to use RMS ratio of signal and noise window for
   SNR computation or the ration of the peak\-trough
   amplitudes of either window.


.. confval:: amplitudes.MN.filter

   Type: *string*

   The configurable filter such that the V measurement is
   made on a filtered trace. By default, filtering is not
   enabled.
   
   See https:\/\/docs.gempa.de\/seiscomp\/current\/base\/filter\-grammar.html
   for how to specify the filter.


.. confval:: amplitudes.MN.Vmin

   Default: ``3.2``

   Type: *double*

   Unit: *km/s*

   The minimum phase velocity used to determine the signal
   window end.


.. confval:: amplitudes.MN.Vmax

   Default: ``3.6``

   Type: *double*

   Unit: *km/s*

   The maximum phase velocity used to determine the signal
   window start.


.. confval:: amplitudes.MN.snrWindowSeconds

   Default: ``10``

   Type: *double*

   Unit: *s*

   The length of the SNR window.


.. confval:: amplitudes.MN.noiseWindowPreSeconds

   Default: ``0``

   Type: *double*

   Unit: *s*

   The offset of the noise window. A positive value will move
   the computed noise window to the left on the time axis,
   a negative value will move it to the right on the time axis.


.. confval:: amplitudes.MN.signalStartPriorities

   Default: ``Lg,Sg,Sn,S,Vmax``

   Type: *list:string*

   The priority list of phase onsets to compute the signal
   start window. Except for Vmin and Vmax, associated phases
   \(arrivals\) must be present in the origin for this
   particular phase. Picked phases are only considered if
   the origin is a manual origin or the pick is a
   manual pick. The first value in the list which can be
   retrieved or computed, is selected.
   
   Allowed tokens: Pg, Pn, P, Sg, Sn, S, Lg, Rg, Vmin, Vmax


.. confval:: amplitudes.MN.signalEndPriorities

   Default: ``Rg,Vmin``

   Type: *list:string*

   The priority list of phase onsets to compute the signal
   end window. Except for Vmin and Vmax, associated phases
   \(arrivals\) must be present in the origin for this
   particular phase. Picked phases are only considered if
   the origin is a manual origin or the pick is a
   manual pick. The first value in the list which can be
   retrieved or computed, is selected.
   
   Allowed tokens: Pg, Pn, P, Sg, Sn, S, Lg, Rg, Vmin, Vmax


.. note::
   **magnitudes.MN.\***
   *Parameters for computing MN magnitudes from AMN amplitudes.*



.. confval:: magnitudes.MN.minSNR

   Default: ``2``

   Type: *double*

   The minimum SNR required for a magnitude to pass
   the QC check. The station magnitude will be computed
   anyway but if the SNR is below this threshold it will
   be associated with weight zero and will not contribute
   to the network magnitude.


.. confval:: magnitudes.MN.minPeriod

   Default: ``0.01``

   Type: *double*

   Unit: *s*

   The minimum period required for a magnitude to pass
   the QC check. The station magnitude will be computed
   anyway but if the period is below this threshold it will
   be associated with weight zero and will not contribute
   to the network magnitude.


.. confval:: magnitudes.MN.maxPeriod

   Default: ``1.3``

   Type: *double*

   Unit: *s*

   The maximum period allowed for a magnitude to pass
   the QC check. The station magnitude will be computed
   anyway but if the period is above this threshold it will
   be associated with weight zero and will not contribute
   to the network magnitude.


.. confval:: magnitudes.MN.minDist

   Default: ``0.5``

   Type: *double*

   Unit: *deg*

   The minimum distance required for a magnitude to pass
   the QC check. The station magnitude will be computed
   anyway but if the distance is below this threshold it
   will be associated with weight zero and will not contribute
   to the network magnitude.


.. confval:: magnitudes.MN.maxDist

   Default: ``30``

   Type: *double*

   Unit: *deg*

   The maximum distance allowed for a magnitude to be
   computed. If the distance exceeds this threshold then
   the computation will be canceled and no station
   magnitude will be available at all.


.. confval:: detecLocid

   Type: *string*

   The sensor location code of the preferred stream used e.g.
   by scautopick and scrttv.


.. confval:: detecStream

   Type: *string*

   The channel code of the preferred stream used by
   e.g. scautopick and scrttv. If no component code is given,
   the vertical component will be fetched from inventory
   considering the channel orientation \(azimuth, dip\).
   If that approach fails, 'Z' will be appended and used as
   fallback. Do not use regular expressions\!


.. note::
   **amplitudes.\***
   *Define general parameters for amplitudes of a certain type.*
   *Create amplitude type profiles to define the time windows,*
   *minimum signal-to-noise ratio, amplitude thresholds and*
   *restitution for measuring amplitudes of a certain type.*



.. confval:: amplitudes.saturationThreshold

   Default: ``false``

   Type: *string*

   Unit: *counts; %*

   Define the saturation threshold for the optional saturation
   check.
   By default, the saturation check is disabled but giving a
   value above 0 will enable it. Waveforms that are saturated
   are not used for amplitude calculations.
   
   This value can either be an absolute value of counts such
   as \"100000\" counts or a relative value
   \(optionally in percent\) with respect to the number of
   effective bits, e.g. \"0.8\@23\" or \"80%\@23\".
   The first version uses 1\*\*23 \* 0.8 whereas the latter
   uses 1\*\*23 \* 80\/100.
   
   The boolean value \"false\" explicitly disables
   the check.


.. confval:: amplitudes.enable

   Default: ``true``

   Type: *boolean*

   Define if amplitude calculation is enabled. If disabled,
   this station will be skipped for amplitudes and magnitudes.


.. confval:: amplitudes.enableResponses

   Default: ``false``

   Type: *boolean*

   Activate deconvolution for this station. If no responses are
   configured, an error is raised and the data is not processed.
   This flag will be overridden by the type specific flag
   \(see Amplitude type profile\).


.. note::

   **amplitudes.$name.\***
   *An amplitude profile configures global parameters for a*
   *particular amplitude type. The available amplitude types*
   *are not fixed and can be extended by plugins. The name of*
   *the type must match the one defined in the corresponding*
   *AmplitudeProcessor.*
   $name is a placeholder for the name to be used.


.. confval:: amplitudes.$name.saturationThreshold

   Default: ``false``

   Type: *string*

   Unit: *counts; %*

   Define the saturation threshold for the optional
   saturation check. By default, the saturation check is
   disabled but giving a value above 0 will enable it.
   Waveforms that are saturated are not used for amplitude
   calculations.
   
   This value can either be an absolute value of counts such
   as \"100000\" counts or a relative value
   \(optionally in percent\) with respect to the number of
   effective bits, e.g. \"0.8\@23\" or \"80%\@23\".
   The first version uses 1\*\*23 \* 0.8 whereas the latter
   uses 1\*\*23 \* 80\/100.
   
   The boolean value \"false\" explicitly disables
   the check.


.. confval:: amplitudes.$name.enable

   Default: ``true``

   Type: *boolean*

   Define if amplitude calculation of certain type is enabled.


.. confval:: amplitudes.$name.enableResponses

   Default: ``false``

   Type: *boolean*

   Activate deconvolution for this amplitude type. If not
   set, the global flag \"amplitudes.enableResponses\"
   will be used instead.


.. confval:: amplitudes.$name.minSNR

   Type: *double*

   Define the mininum SNR to be reached to compute the
   amplitudes. This value is amplitude type specific and
   has no global default value.


.. confval:: amplitudes.$name.noiseBegin

   Type: *double*

   Unit: *s*

   Override the default time \(relative to the trigger
   time\) of the begin of the noise window used to compute
   the noise offset and noise amplitude. Each amplitude
   processor sets its own noise time window and this option
   should only be changed if you know what you are doing.


.. confval:: amplitudes.$name.noiseEnd

   Type: *double*

   Unit: *s*

   Override the default time \(relative to the trigger
   time\) of the end of the noise window used to compute
   the noise offset and noise amplitude. Each amplitude
   processor sets its own noise time window and this option
   should only be changed if you know what you are doing.


.. confval:: amplitudes.$name.signalBegin

   Type: *double*

   Unit: *s*

   Override the default time \(relative to the trigger
   time\) of the begin of the signal window used to compute
   the final amplitude. Each amplitude processor sets its
   own signal time window and this option should only be
   changed if you know what you are doing.


.. confval:: amplitudes.$name.signalEnd

   Type: *double*

   Unit: *s*

   Override the default time \(relative to the trigger
   time\) of the end of the signal window used to compute
   the final amplitude. Each amplitude processor sets its
   own signal time window and this option should only be
   changed if you know what you are doing.


.. confval:: amplitudes.$name.minDist

   Type: *double*

   Unit: *deg*

   The minimum distance required to compute an amplitude.
   This settings has no effect with e.g. scautopick as there
   is no information about the source of the event to compute
   the distance. The default value is implementation
   specific.


.. confval:: amplitudes.$name.maxDist

   Type: *double*

   Unit: *deg*

   The maximum distance allowed to compute an amplitude.
   This settings has no effect with e.g. scautopick as there
   is no information about the source of the event to compute
   the distance. The default value is implementation
   specific.


.. confval:: amplitudes.$name.minDepth

   Type: *double*

   Unit: *km*

   The minimum depth required to compute an amplitude.
   This settings has no effect with e.g. scautopick as there
   is no information about the source of the event to
   retrieve the depth. The default value is implementation
   specific.


.. confval:: amplitudes.$name.maxDepth

   Type: *double*

   Unit: *km*

   The maximum depth allowed to compute an amplitude.
   This settings has no effect with e.g. scautopick as there
   is no information about the source of the event to
   retrieve the depth. The default value is implementation
   specific.


.. confval:: amplitudes.$name.regionalize

   Default: ``true``

   Type: *boolean*

   Control if the amplitude calculation should be
   regionalized or not. The regions and their configuration
   are taken from the corresponding magnitude profiles. If
   regionalization is activate, then e.g. modules without
   origin information will not be able to compute an
   amplitude as the origin is required to determine the
   effective settings.
   
   If amplitudes for this particular type shall be computed
   regardless of any defined regions, set this parameter to
   false.


.. note::
   **amplitudes.$name.resp.\***
   *Several parameters if usage of full responses is enabled.*



.. confval:: amplitudes.$name.resp.taper

   Default: ``5``

   Unit: *s*

   Define the length of the taper at either side of the
   waveform. The length will be added to the data
   request: start \- taper and end + taper.


.. confval:: amplitudes.$name.resp.minFreq

   Default: ``0.00833333``

   Unit: *Hz*

   After data are converted in to the frequency domain
   that minimum frequency defines the end of the left\-side
   cosine taper for the frequency spectrum. The taper
   applies from 0 Hz to {minFreq} Hz.
   A value of 0 or lower disables that taper.


.. confval:: amplitudes.$name.resp.maxFreq

   Default: ``0``

   Unit: *Hz*

   After data are converted in to the frequency domain
   that maximum frequency defines the start of the right\-side
   cosine taper for the frequency spectrum. The taper
   applies from {maxFreq} Hz to {fNyquist} Hz.
   A value of 0 or lower disables that taper.


.. note::
   **amplitudes.resp.\***
   *Several parameters if usage of full responses is enabled.*
   *The parameters of this group will be overridden by type*
   *specific settings if given (see Amplitude type profile).*



.. confval:: amplitudes.resp.taper

   Default: ``5``

   Unit: *s*

   Define the length of the taper at either side of the
   waveform. The length will be added to the data
   request: start \- taper and end + taper.


.. confval:: amplitudes.resp.minFreq

   Default: ``0.00833333``

   Unit: *Hz*

   The minimum frequency of the considered spectrum.
   
   After data is converted into the frequency domain that
   minimum frequency defines the end of the left\-side cosine
   taper applied to the spectrum. The taper applies from
   0 Hz to {minFreq} Hz. A value of 0 or lower disables
   that taper.


.. confval:: amplitudes.resp.maxFreq

   Default: ``0``

   Unit: *Hz*

   The maximum frequency of the considered spectrum.
   
   After data are converted in to the frequency domain that
   maximum frequency defines the start of the right\-side
   cosine taper applied to the spectrum. The taper applies from
   {maxFreq} Hz to {fNyquist} Hz.
   A value of 0 or lower disables that taper.


.. note::
   **amplitudes.WoodAnderson.\***
   *Parameters of the Wood-Anderson seismometer response used*
   *for instrument simulation.*
   *The default values are according to the version of*
   *Gutenberg (1935). The newer version by Uhrhammer and*
   *Collins (1990) is part of the IASPEI Magnitude*
   *Working Group recommendations of 2011 September 9. This*
   *version uses gain=2800, T0=0.8 s, h=0.8.*



.. confval:: amplitudes.WoodAnderson.gain

   Default: ``2800``

   Type: *double*

   The gain of the Wood\-Anderson response.


.. confval:: amplitudes.WoodAnderson.T0

   Default: ``0.8``

   Type: *double*

   Unit: *s*

   The eigenperiod of the Wood\-Anderson seismometer.


.. confval:: amplitudes.WoodAnderson.h

   Default: ``0.8``

   Type: *double*

   The damping constant of the Wood\-Anderson seismometer.


.. note::
   **magnitudes.\***
   *Define magnitude parameters independent of amplitude-type profiles.*
   *For magnitude correction parameters, e.g, network of station*
   *corrections, create a magnitude type profile.*



.. note::

   **magnitudes.$name.\***
   *A magnitude profile configures global parameters for a*
   *particular magnitude type. The available magnitude types*
   *are not fixed and can be extended by plugins. The name of*
   *the type must match the one defined in the corresponding*
   *MagnitudeProcessor.*
   $name is a placeholder for the name to be used.


.. confval:: magnitudes.$name.multiplier

   Default: ``1``

   Type: *list:string*

   Part of the magnitude station correction. The final
   magnitude value is multiplier\*M+offset. This value
   can be regionalized with name\-value pairs.
   The name is the name of the region. Without
   a name the value is the default without regionalization.
   Example: \"1.0, regionA: 0.9, regionB: 1.1\".


.. confval:: magnitudes.$name.offset

   Default: ``0``

   Type: *list:string*

   Part of the magnitude station correction. The final
   magnitude value is multiplier\*M+offset. This value
   can be regionalized with name\-value pairs.
   The name is the name of the region. Without
   a name the value is the default without regionalization.
   Example: \"0.0, regionA: \-0.1, regionB: 0.2\".


.. note::
   **picker.\***
   *Parameters controlling the second-stage picker for re-picking P*
   *phases after an initial detection.*



.. note::
   **picker.AIC.\***
   *AIC picker is an implementation using the simple non-AR*
   *algorithm of Maeda (1985),*
   *see paper of Zhang et al. (2003) in BSSA. The picker*
   *interface name to be used in configuration files, e.g. of*
   *scautopick, is "AIC".*



.. confval:: picker.AIC.noiseBegin

   Default: ``0``

   Type: *double*

   Unit: *s*

   Override the relative data acquisition time \(relative to
   the triggering pick\). This adds a margin to the actual
   processing and is useful to initialize the filter \(Example:
   bandpass\). The data is not used at all until signalBegin
   is reached. The data time window start is the minimum of
   noiseBegin and signalBegin.


.. confval:: picker.AIC.signalBegin

   Default: ``-30``

   Type: *double*

   Unit: *s*

   Override the default time \(relative to the trigger
   time\) of the begin of the signal window used to pick.


.. confval:: picker.AIC.signalEnd

   Default: ``10``

   Type: *double*

   Unit: *s*

   Override the default time \(relative to the trigger
   time\) of the begin of the signal window used to pick.


.. confval:: picker.AIC.filter

   Type: *string*

   Override the default filter which is \"raw\". The typical
   filter grammar can be used.


.. confval:: picker.AIC.minSNR

   Default: ``3``

   Type: *double*

   Mininum SNR as returned from AIC for accepting picks.


.. note::
   **picker.BK.\***
   *Bkpicker is an implementation of the Baer/Kradolfer picker*
   *adapted to SeisComP. It was created by converting Manfred*
   *Baers from Fortran to C++ and inserting it as a replacement*
   *for the picker algorithm. The picker interface name to be*
   *used in configuration files, e.g. of scautopick,is*
   *"BK".*



.. confval:: picker.BK.noiseBegin

   Default: ``0``

   Type: *double*

   Unit: *s*

   Override the relative data acquisition time \(relative to
   the triggering pick\). This adds a margin to the actual
   processing and is useful to initialize the filter \(Example:
   bandpass\). The data is not used at all until signalBegin
   is reached. The data time window start is the minimum of
   noiseBegin and signalBegin.


.. confval:: picker.BK.signalBegin

   Default: ``-20``

   Type: *double*

   Unit: *s*

   Override the default time \(relative to the trigger
   time\) of the begin of the signal window used to pick.


.. confval:: picker.BK.signalEnd

   Default: ``80``

   Type: *double*

   Unit: *s*

   Override the default time \(relative to the trigger
   time\) of the begin of the signal window used to pick.


.. confval:: picker.BK.filterType

   Default: ``BP``

   Type: *string*

   BP \(Bandpass\) is currently the only option.


.. confval:: picker.BK.filterPoles

   Default: ``2``

   Type: *int*

   Number of poles.


.. confval:: picker.BK.f1

   Default: ``5``

   Type: *double*

   Unit: *Hz*

   Bandpass lower cutoff freq. in Hz.


.. confval:: picker.BK.f2

   Default: ``20``

   Type: *double*

   Unit: *Hz*

   Bandpass upper cutoff freq. in Hz.


.. confval:: picker.BK.thrshl1

   Default: ``10``

   Type: *double*

   Threshold to trigger for pick \(c.f. paper\), default 10


.. confval:: picker.BK.thrshl2

   Default: ``20``

   Type: *double*

   Threshold for updating sigma  \(c.f. paper\), default 20


.. note::
   **spicker.\***
   *Parameters controlling the secondary picker. Example: for picking S*
   *phases.*



.. note::
   **spicker.L2.\***
   *L2 is an algorithm to pick S-phases based on existing*
   *P-phases. It works by creating the L2 norm of the two filtered*
   *horizontal components and then running the `detecFilter` on*
   *the L2 trace to find the S pick. Finally AIC is applied*
   *around the detected pick time to refine the detection.*
   *The picker name to be used in configuration files is*
   *"S-L2".*



.. confval:: spicker.L2.noiseBegin

   Default: ``-10``

   Type: *double*

   Unit: *s*

   Override the relative data processing start time
   \(relative to the triggering pick\). This adds a margin to
   the actual processing and is useful to initialize the
   filter \(Example: bandpass\). The data is not used at all
   until signalBegin is reached. The data time window start
   is the minimum of noiseBegin and signalBegin.


.. confval:: spicker.L2.signalBegin

   Default: ``0``

   Type: *double*

   Unit: *s*

   Override the relative start time \(relative to the
   triggering pick\) of the begin of the signal processing.


.. confval:: spicker.L2.signalEnd

   Default: ``60``

   Type: *double*

   Unit: *s*

   Override the relative end time \(relative to the triggering
   pick\) of the end of the signal window used to pick.


.. confval:: spicker.L2.filter

   Default: ``BW(4,0.3,1.0)``

   Type: *string*

   Configure the filter used to process the horizontal
   components traces before computing the L2\-norm.


.. confval:: spicker.L2.detecFilter

   Default: ``STALTA(1,10)``

   Type: *string*

   Configure the detector filter applied on the filtered
   L2 trace.


.. confval:: spicker.L2.threshold

   Default: ``3``

   Type: *double*

   The detector threshold that triggers the AIC picker.


.. confval:: spicker.L2.timeCorr

   Default: ``0``

   Type: *double*

   Unit: *s*

   The time correction added to the detection
   time before AIC time window is computed.


.. confval:: spicker.L2.marginAIC

   Default: ``5``

   Type: *double*

   Unit: *s*

   The AIC time window around the detection used to pick.
   If 0, AIC is not used.


.. confval:: spicker.L2.minSNR

   Default: ``15``

   Type: *double*

   Minimum SNR as returned from AIC for accepting picks.


.. note::
   **spicker.V.\***
   *This S-picker works similarly to L2 but it only uses the*
   *vertical component to pick S-phases. The picker name to be*
   *used in configuration files is "S-V".*



.. confval:: spicker.V.noiseBegin

   Default: ``-10``

   Type: *double*

   Unit: *s*

   Override the relative data processing start time
   \(relative to the triggering pick\). This adds a margin to
   the actual processing and is useful to initialize the
   filter \(Example: bandpass\). The data is not used at all
   until signalBegin is reached. The data time window start
   is the minimum of noiseBegin and signalBegin.


.. confval:: spicker.V.signalBegin

   Default: ``0``

   Type: *double*

   Unit: *s*

   Override the relative start time \(relative to the
   triggering pick\) of the begin of the signal processing.


.. confval:: spicker.V.signalEnd

   Default: ``60``

   Type: *double*

   Unit: *s*

   Override the relative end time \(relative to the triggering
   pick\) of the end of the signal window used to pick.


.. confval:: spicker.V.filter

   Default: ``BW(4,0.3,1.0)``

   Type: *string*

   Configure the filter used to process the raw vertical
   component data.


.. confval:: spicker.V.detecFilter

   Default: ``STALTA(1,10)``

   Type: *string*

   Configure the detector filter applied on filtered data.


.. confval:: spicker.V.threshold

   Default: ``3``

   Type: *double*

   The detector threshold that triggers the AIC picker.


.. confval:: spicker.V.timeCorr

   Default: ``0``

   Type: *double*

   Unit: *s*

   The time correction added to the detection time
   before AIC time window is computed.


.. confval:: spicker.V.marginAIC

   Default: ``5``

   Type: *double*

   Unit: *s*

   The AIC time window around the detection used to pick.
   If 0, AIC is not used.


.. confval:: spicker.V.minSNR

   Default: ``15``

   Type: *double*

   Define the mininum SNR as returned from AIC.


.. note::
   **fx.\***
   *Feature extraction types, e.g. for scautopick.*



.. note::
   **fx.DFX.\***
   *Three component feature extraction algorithm ported from the*
   *automatic processing system implemented at CTBTO/IDC. The*
   *documentation of the methods is not publically available.*
   *In case of questions and comments, please contact CTBTO by*
   *email: support@ctbto.org.*



.. note::
   **fx.DFX.filter.\***
   *Butterworth filter options of the bandpass.*



.. confval:: fx.DFX.filter.order

   Default: ``3``

   Type: *int*

   The order of the filter.


.. confval:: fx.DFX.filter.loFreq

   Default: ``1``

   Type: *double*

   Unit: *Hz*

   The lower cut\-off frequency. A negative value or zero
   will disable a lower cut\-off frequency.


.. confval:: fx.DFX.filter.hiFreq

   Default: ``3``

   Type: *double*

   Unit: *Hz*

   The upper cut\-off frequency. A negative value or zero
   will disable a upper cut\-off frequency.


.. confval:: fx.DFX.polar.window

   Default: ``1.5``

   Type: *double*

   Unit: *s*

   Length of the covariance window in seconds.


.. confval:: fx.DFX.polar.overlap

   Default: ``0.5``

   Type: *double*

   The fraction of the covariance window to overlap.


.. confval:: fx.DFX.polar.alpha

   Default: ``0.3``

   Type: *double*

   A station\-dependent parameter used to compute a polarization slowness estimate.


.. confval:: fx.DFX.polar.ds

   Default: ``0.03``

   Type: *double*

   A station\-dependent parameter used to compute the back azimuth and slowness errors.


.. confval:: fx.DFX.polar.dk

   Default: ``0.1``

   Type: *double*

   A station\-dependent parameter used to compute the back azimuth and slowness errors.


.. note::
   **magnitudes.mB.\***
   *Parameters for computing mB magnitudes from mB amplitudes.*



.. confval:: magnitudes.mB.minDist

   Default: ``5``

   Type: *double*

   Unit: *deg*

   Minimum epicentral distance for computing mB. Note: According
   to the IASPEI recommendations in 2013, the minimum distance
   should be 20 deg.


.. confval:: magnitudes.mB.maxDist

   Default: ``105``

   Type: *double*

   Unit: *deg*

   Maximum epicentral distance for computing mB.


.. note::
   **magnitudes.mb.\***
   *Parameters for computing mb magnitudes from mb amplitudes.*



.. confval:: magnitudes.mb.minDist

   Default: ``5``

   Type: *double*

   Unit: *deg*

   Minimum epicentral distance for computing mb. Note: According
   to the IASPEI recommendations in 2013, the minimum distance
   should be 20 deg.


.. confval:: magnitudes.mb.maxDist

   Default: ``105``

   Type: *double*

   Unit: *deg*

   Maximum epicentral distance for computing mb.


.. confval:: magnitudes.mb(IDC).Q

   Type: *path*

   Location of the station specific Q table. If not
   specified then \@DATADIR\@\/magnitudes\/IDC\/qfvc.ml will be
   used as fallback. {net}, {sta} and {loc} are placeholders
   which will be replaced with the concrete network code,
   station code and location code.


.. note::
   **magnitudes.Ms_20.\***
   *Parameters for computing Ms_20 magnitudes from Ms_20 amplitudes.*



.. confval:: magnitudes.Ms_20.lowerPeriod

   Default: ``18``

   Type: *double*

   Unit: *s*

   Lower period limit of the signal for computing Ms_20.


.. confval:: magnitudes.Ms_20.upperPeriod

   Default: ``22``

   Type: *double*

   Unit: *s*

   Upper period limit of the signal for computing Ms_20.


.. confval:: magnitudes.Ms_20.minDist

   Default: ``20``

   Type: *double*

   Unit: *deg*

   Minimum epicentral distance for computing Ms_20.


.. confval:: magnitudes.Ms_20.maxDist

   Default: ``160``

   Type: *double*

   Unit: *deg*

   Maximum epicentral distance for computing Ms_20.


.. confval:: magnitudes.Ms_20.maxDepth

   Default: ``100``

   Type: *double*

   Unit: *km*

   Maximum depth for computing Ms_20.


.. note::
   **amplitudes.MLc.\***
   *Parameters for measuring MLc amplitudes. Add more parameters*
   *by adding an amplitude type profile 'MLc',*



.. confval:: amplitudes.MLc.preFilter

   Default: ``BW(3,0.5,12)``

   Type: *string*

   The filter applied to raw records before applying
   Wood\-Anderson simulation.


.. confval:: amplitudes.MLc.applyWoodAnderson

   Default: ``true``

   Type: *boolean*

   Applying Wood\-Anderson simulation. To achieve displacement
   records without WA simulation, an integration filter can
   be applied with the pre\-filter.


.. confval:: amplitudes.MLc.amplitudeScale

   Default: ``1.0``

   Type: *string*

   Scaling value multiplied to the measured amplitudes to
   match the amplitude units expected by the magnitude
   calibration function.
   
   Expected amplitudes are
   in units of mym but actual amplitudes provided from
   Wood\-Anderson\-corrected seismograms are in units of mm:
   amplitudeScale \= 1000.
   
   If data are not corrected for WA, measured amplitudes
   take the unit of gain\-corrected data considering the
   preFilter:
   amplitudeScale converts between units of measured and
   excpected amplitude.


.. confval:: amplitudes.MLc.measureType

   Default: ``AbsMax``

   Type: *string*

   Type for measuring amplitudes. Available:
   
   AbsMax: absolute maximum
   
   MinMax: half difference between absolute maximum and minimum
   
   PeakTrough: half difference between maximum and minimum
   on a half cycle


.. confval:: amplitudes.MLc.combiner

   Default: ``max``

   Type: *string*

   Define how to combine the amplitudes measured on both
   horizontals components:
   
   min: take the minimum
   
   max: take the maxium
   
   avgerage: form the average
   
   geometric_mean: form the geometric mean


.. note::
   **magnitudes.MLc.\***
   *Parameters for computing MLc magnitudes from MLc amplitudes.*



.. confval:: magnitudes.MLc.distMode

   Default: ``hypocentral``

   Type: *string*

   Considered distance measure between source and receiver.
   Possible values are
   
   hypocentral: hypocentral distance
   
   epicentral: epicentral


.. confval:: magnitudes.MLc.minDist

   Default: ``-1.0``

   Type: *double*

   Unit: *deg*

   The minimum distance for computing magnitudes from amplitudes.
   Negative values deactivate the check.


.. confval:: magnitudes.MLc.maxDist

   Default: ``8``

   Type: *double*

   Unit: *deg*

   The maximum distance for computing magnitudes from amplitudes.
   Negative values deactivate the check.


.. confval:: magnitudes.MLc.maxDepth

   Default: ``80``

   Type: *double*

   Unit: *km*

   The maximum depth up to which magnitudes are computed.


.. confval:: magnitudes.MLc.calibrationType

   Default: ``"parametric"``

   Type: *string*

   Type of magnitude calibration formula to be considered.
   The calibration parameters are considered accordingly.
   Currently supported are
   
   \"parametric\": consider parameters of parametric
   configuration in parametric section
   
   \"A0\": consider parameters of non\-parametric
   configuration in A0 section.


.. note::
   **magnitudes.MLc.A0.\***
   *Parameters for A0, non-parametric magnitude calibration.*
   *Considered if magnitude.MLc.calibrationType = "A0".*



.. confval:: magnitudes.MLc.A0.logA0

   Default: ``0:-1.3,60:-2.8,100:-3.0,400:-4.5,1000:-5.85``

   Type: *string*

   The non\-parametric calibration function log10\(A0\).
   
   Format: any list of distance\-value pairs separated by
   comma. Values within pairs are separated by colon.
   
   Example: \"0:\-1.3,60:\-2.8,100:\-3.0,400:\-4.5,1000:\-5.85\"
   specifies 4 distance intervals from
   0...60, 60...100, 100...400 and 400...1000 km distance.
   Within these intervals log10\(A0\) is interpolated linearly
   between \-1.3...\-2.8, \-2.8...\-3.0, \-3.0...\-4.5 and \-4.5...\-5.8,
   respectively.
   
   Note: The first and last distance samples limit the
   maximum distance range for computing MLv.


.. note::
   **magnitudes.MLc.parametric.\***
   *Parameters for parametric magnitude calibration:*
   *MLc = log10(A) + c3 * log10(r/c5) + c2 * (r + c4) + c1 + c0(station)*
   **
   *Considered if magnitude.MLc.calibrationType = "parametric".*



.. confval:: magnitudes.MLc.parametric.c0

   Default: ``0.0``

   Type: *double*

   Station correction. This is the calibration value 'c0'
   applied in the magnitude calibration formula
   
   MLc \= c0\(station\) + c1 + c2 \* \(r + c4\) + c3 \* log\(r\/c5\) + log10\(A\)


.. confval:: magnitudes.MLc.parametric.c1

   Default: ``0.69``

   Type: *double*

   The calibration value 'c1' applied in the magnitude
   calibration formula
   
   MLc \= c0\(station\) + c1 + c2 \* \(r + c4\) + c3 \* log\(r\/c5\) + log10\(A\)


.. confval:: magnitudes.MLc.parametric.c2

   Default: ``0.00095``

   Type: *double*

   The calibration value 'c2' applied in the
   magnitude calibration formula
   
   MLc \= c0\(station\) + c1 + c2 \* \(r + c4\) + c3 \* log\(r\/c5\) + log10\(A\)


.. confval:: magnitudes.MLc.parametric.c3

   Default: ``1.11``

   Type: *double*

   The calibration value 'c3' applied in the
   magnitude calibration formula
   
   MLc \= c0\(station\) + c1 + c2 \* \(r + c4\) + c3 \* log\(r\/c5\) + log10\(A\)


.. confval:: magnitudes.MLc.parametric.c4

   Default: ``0.0``

   Type: *double*

   The calibration value 'c4' applied in the
   magnitude calibration formula
   
   MLc \= c0\(station\) + c1 + c2 \* \(r + c4\) + c3 \* log\(r\/c5\) + log10\(A\)


.. confval:: magnitudes.MLc.parametric.c5

   Default: ``1.0``

   Type: *double*

   The calibration value 'c4' applied in the
   magnitude calibration formula
   
   MLc \= c0\(station\) + c1 + c2 \* \(r + c4\) + c3 \* log\(r\/c5\) + log10\(A\)


.. note::
   **amplitudes.MLv.\***
   *Parameters for measuring MLv amplitudes. Add more parameters*
   *by adding an amplitude type profile 'MLv',*



.. confval:: amplitudes.MLv.preFilter

   Type: *string*

   The filter applied to raw records before applying
   Wood\-Anderson simulation. Default: no pre\-filtering.


.. confval:: amplitudes.MLv.measureType

   Default: ``AbsMax``

   Type: *string*

   This parameter allows to set how the amplitude is measured.
   Either by finding the absolute maximum of the demeaned
   trace \(AbsMax\), the difference of maximum and minimum of
   the signal window \(MinMax\) or the maximum peak\-trough
   of one cycle \(PeakTrough\).
   
   Note that if absMax is already explicitly configured, this
   parameter has no effect.


.. note::
   **magnitudes.MLv.\***
   *Parameters for computing MLv magnitudes from MLv amplitudes.*



.. confval:: magnitudes.MLv.logA0

   Default: ``0:-1.3,60:-2.8,100:-3.0,400:-4.5,1000:-5.85``

   Type: *string*

   The calibration function log10\(A0\).
   
   Format: any list of distance\-value pairs separated by
   comma. Values within pairs are separated by colon.
   
   Example: \"0:\-1.3,60:\-2.8,100:\-3.0,400:\-4.5,1000:\-5.85\"
   specifies 4 distance intervals from
   0...60, 60...100, 100...400 and 400...1000 km distance.
   Within these intervals log10\(A0\) is interpolated linearly
   between \-1.3...\-2.8, \-2.8...\-3.0, \-3.0...\-4.5 and \-4.5...\-5.8,
   respectively.
   
   Note: The first and last distance samples limit the
   maximum distance range for computing MLv.


.. confval:: magnitudes.MLv.maxDistanceKm

   Default: ``-1.0``

   Type: *double*

   Unit: *km*

   Maximum epicentral distance for computing MLv.
   No distance limitation for maxDistanceKm\=\-1


.. note::
   **amplitudes.ML.\***
   *Parameters for measuring ML amplitudes. Add more parameters*
   *by adding an amplitude type profile 'ML',*



.. confval:: amplitudes.ML.preFilter

   Type: *string*

   The filter applied to raw records before applying
   Wood\-Anderson simulation. Default: no pre\-filtering.


.. confval:: amplitudes.ML.measureType

   Default: ``AbsMax``

   Type: *string*

   This parameter allows to set how the amplitude is measured.
   Either by finding the absolute maximum of the demeaned
   trace \(AbsMax\), the difference of maximum and minimum of
   the signal window \(MinMax\) or the maximum peak\-trough
   of one cycle \(PeakTrough\).
   
   Note that if absMax is already explicitly configured, this
   parameter has no effect.


.. confval:: amplitudes.ML.combiner

   Default: ``average``

   Type: *string*

   Defines the combiner operation for the amplitudes measured
   on either both horizontal component. The default is to
   use the average. Allowed values are: \"average\",
   \"min\", \"max\" and \"geometric_mean\".
   \"geometric_mean\" corresponds to averaging single\-trace
   magnitudes instead of their amplitudes.


.. note::
   **magnitudes.ML.\***
   *Parameters for computing ML magnitudes from ML amplitudes.*



.. confval:: magnitudes.ML.logA0

   Default: ``0:-1.3,60:-2.8,100:-3.0,400:-4.5,1000:-5.85``

   Type: *string*

   The calibration function log10\(A0\).
   
   Format: any list of distance\-value pairs separated by
   comma. Values within pairs are separated by colon.
   
   Example: \"0:\-1.3,60:\-2.8,100:\-3.0,400:\-4.5,1000:\-5.85\"
   specifies 4 distance intervals from
   0...60, 60...100, 100...400 and 400...1000 km distance.
   Within these intervals log10\(A0\) is interpolated linearly
   between \-1.3...\-2.8, \-2.8...\-3.0, \-3.0...\-4.5 and \-4.5...\-5.8,
   respectively.
   
   Note: The first and last distance samples limit the
   maximum distance range for computing ML.


.. confval:: magnitudes.ML.maxDistanceKm

   Default: ``-1.0``

   Type: *double*

   Unit: *km*

   Maximum epicentral distance for computing ML.
   No distance limitation for maxDistanceKm \= \-1.


.. confval:: magnitudes.ML(IDC).A

   Type: *path*

   Location of the station specific attenuation table. If not
   specified then \@DATADIR\@\/magnitudes\/IDC\/global.ml will be
   used as fallback. {net}, {sta} and {loc} are placeholders
   which will be replaced with the concrete network code,
   station code and location code.




Command-Line Options
====================

.. program:: global


Generic
-------

.. option:: -h, --help

   Show help message.

.. option:: -V, --version

   Show version information.

.. option:: --config-file arg

   Use alternative configuration file. When this option is
   used the loading of all stages is disabled. Only the
   given configuration file is parsed and used. To use
   another name for the configuration create a symbolic
   link of the application or copy it. Example:
   scautopick \-> scautopick2.

.. option:: --plugins arg

   Load given plugins.

.. option:: -D, --daemon

   Run as daemon. This means the application will fork itself
   and doesn't need to be started with \&.

.. option:: --auto-shutdown arg

   Enable\/disable self\-shutdown because a master module shutdown.
   This only works when messaging is enabled and the master
   module sends a shutdown message \(enabled with \-\-start\-stop\-msg
   for the master module\).

.. option:: --shutdown-master-module arg

   Set the name of the master\-module used for auto\-shutdown.
   This is the application name of the module actually
   started. If symlinks are used, then it is the name of
   the symlinked application.

.. option:: --shutdown-master-username arg

   Set the name of the master\-username of the messaging
   used for auto\-shutdown. If \"shutdown\-master\-module\" is
   given as well, this parameter is ignored.


Verbose
-------

.. option:: --verbosity arg

   Verbosity level [0..4]. 0:quiet, 1:error, 2:warning, 3:info,
   4:debug.

.. option:: -v, --v

   Increase verbosity level \(may be repeated, eg. \-vv\).

.. option:: -q, --quiet

   Quiet mode: no logging output.

.. option:: --print-component arg

   For each log entry print the component right after the
   log level. By default the component output is enabled
   for file output but disabled for console output.

.. option:: --print-context arg

   For each log entry print the source file name and line
   number.

.. option:: --component arg

   Limit the logging to a certain component. This option can
   be given more than once.

.. option:: -s, --syslog

   Use syslog logging backend. The output usually goes to
   \/var\/lib\/messages.

.. option:: -l, --lockfile arg

   Path to lock file.

.. option:: --console arg

   Send log output to stdout.

.. option:: --debug

   Execute in debug mode.
   Equivalent to \-\-verbosity\=4 \-\-console\=1 .

.. option:: --trace

   Execute in trace mode.
   Equivalent to \-\-verbosity\=4 \-\-console\=1 \-\-print\-component\=1
   \-\-print\-context\=1 .

.. option:: --log-file arg

   Use alternative log file.


Messaging
---------

.. option:: -u, --user arg

   Overrides configuration parameter :confval:`connection.username`.

.. option:: -H, --host arg

   Overrides configuration parameter :confval:`connection.server`.

.. option:: -t, --timeout arg

   Overrides configuration parameter :confval:`connection.timeout`.

.. option:: -g, --primary-group arg

   Overrides configuration parameter :confval:`connection.primaryGroup`.

.. option:: -S, --subscribe-group arg

   A group to subscribe to.
   This option can be given more than once.

.. option:: --content-type arg

   Overrides configuration parameter :confval:`connection.contentType`.

.. option:: --start-stop-msg arg

   Set sending of a start and a stop message.


Database
--------

.. option:: --db-driver-list

   List all supported database drivers.

.. option:: -d, --database arg

   The database connection string, format:
   service:\/\/user:pwd\@host\/database.
   \"service\" is the name of the database driver which
   can be queried with \"\-\-db\-driver\-list\".

.. option:: --config-module arg

   The config module to use.

.. option:: --inventory-db arg

   Load the inventory from the given database or file, format:
   [service:\/\/]location .

.. option:: --config-db arg

   Load the configuration from the given database or file,
   format: [service:\/\/]location .


Records
-------

.. option:: --record-driver-list

   List all supported record stream drivers.

.. option:: -I, --record-url arg

   The recordstream source URL, format:
   [service:\/\/]location[#type].
   \"service\" is the name of the recordstream driver
   which can be queried with \"\-\-record\-driver\-list\".
   If \"service\" is not given, \"file:\/\/\" is
   used.

.. option:: --record-file arg

   Specify a file as record source.

.. option:: --record-type arg

   Specify a type for the records being read.


Cities
------

.. option:: --city-xml arg

   The path to the cities XML file. This overrides the default
   paths. Compare with the global parameter \"citiesXML\".


User interface
--------------

.. option:: -F, --full-screen

   Start the application filling the entire screen.
   This only works with GUI applications.

.. option:: -N, --non-interactive

   Use non\-interactive presentation mode. This only works with
   GUI applications.

