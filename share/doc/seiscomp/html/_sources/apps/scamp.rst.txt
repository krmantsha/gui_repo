.. highlight:: rst

.. _scamp:

#####
scamp
#####

**Calculates amplitudes on basis of incoming origins and the associated picks.**


Description
===========

scamp measures several different kinds of amplitudes from waveform data.
It listens for origins and measures amplitudes in time windows determined
from the origin. The resulting amplitude objects are sent to the "AMPLITUDE"
messaging group. scamp is the counterpart of scmag. Usually, all
amplitudes are computed at once by scamp and then published.
Only very rarely an amplitude needs to be recomputed if the location of an
origin changes significantly. The amplitude can be reused by scmag, making
magnitude computation and update efficient. Currently, the automatic picker
in SeisComP, scautopick, also measures a small set of amplitudes
(namely "snr" and "mb", the signal-to-noise ratio and the amplitude used in
mb magnitude computation, respectively) for each automatic pick in fixed
time windows. If there already exists an amplitude, e.g. a previously determined
one by scautopick, scamp will not measure it again for the respective stream.

Amplitudes are also needed, however, for manual picks. scamp does this as well.
Arrivals with weight smaller than 0.5 (default) in the corresponding Origin are
discarded. This minimum weight can be configured with
:confval:`amptool.minimumPickWeight`.

Amplitudes for the following magnitudes are currently computed:


:term:`ML <magnitude, local (ML)>`
   Local magnitude calculated on the vertical component using a correction term
   to fit with the standard ML

:term:`MLv <magnitude, local vertical (MLv)>`
   Local magnitude calculated on the vertical component using a correction term
   to fit with the standard ML

:term:`MLh <magnitude, local horizontal (MLh)>`
   Local magnitude calculated on the horizontal components to SED specifications.

:term:`MLr <magnitude, local GNS/GEONET (MLr)>`
   Local magnitude calculated from MLv amplitudes based on GNS/GEONET specifications
   for New Zealand.

:term:`MN <magnitude, Nuttli (MN)>`
   Nuttli magnitude for Canada and other Cratonic regions.

:term:`mb <magnitude, body-wave (mb)>`
   Narrow band body wave magnitude measured on a WWSSN-SP filtered trace

:term:`mBc <magnitude, cumulative body-wave (mBc)>`
   Cumulative body wave magnitude

:term:`mB <magnitude, broadband body-wave (mB)>`
   Broad band body wave magnitude

:term:`Mwp <magnitude, broadband P-wave moment (Mwp)>`
   The body wave magnitude of Tsuboi et al. (1995)

:term:`Mjma <magnitude, JMA (M_JMA)>`
   Mjma is computed on displacement data using body waves of period < 30s

:term:`Ms_20 <magnitude, surface wave (Ms_20)>`
   Surface-wave magnitude at 20 s period

:term:`Ms(BB) <magnitude, broadband surface wave (Ms(BB))>`
   Broad band surface-wave magnitude

:term:`Md <magnitude, duration (Md)>`
   Duration magnitude as described in https://earthquake.usgs.gov/research/software/#HYPOINVERSE

Note that in order to be used by scmag, the input amplitude names for the
various magnitude types must match exactly.

Re-processing
=============

*scamp* can be used to reprocess and to update amplitudes, e.g. when inventory paramters
had to be changed retrospectively. Updating ampitudes requires waveform access.
The update can be performed in

1. offline processing based on xml files (:confval:`--ep<`). :confval:`--reprocess<reprocess>`
   will replace exisiting amplitudes. Updated values can be dispatched to the messing by
   :ref:`scdispatch` making them available for further processing, e.g. by :ref:`scmag`.
#. with messaging by setting :confval:`start-time` or :confval:`end-time`. All parameters
   are read from the database. :confval:`--commit<commit>` will send the
   updated parameters to the messing system making them available for further processing,
   e.g. by :ref:`scmag`. Otherwise, XML output is generated.

Offline amplitude update
------------------------

**Example:**

.. code-block:: sh

   seiscomp exec scamp --ep evtID.xml --inventory-db inventory.xml --config-db config.xml \
                       --reprocess --debug > evtID_update.xml
   scdispatch -O merge -H host -i evtID_update.xml

Amplitude update with messaging
-------------------------------

**Example:**

.. code-block:: sh

   scamp -u testuser --inventory-db inventory.xml --config-db config.xml -H host \
         --start-time '2016-10-15 00:00:00' --end-time '2016-10-16 19:20:00' \
         --commit


.. _scamp_configuration:

Configuration
=============

| :file:`etc/defaults/global.cfg`
| :file:`etc/defaults/scamp.cfg`
| :file:`etc/global.cfg`
| :file:`etc/scamp.cfg`
| :file:`~/.seiscomp/global.cfg`
| :file:`~/.seiscomp/scamp.cfg`

scamp inherits :ref:`global options<global-configuration>`.



.. confval:: amplitudes

   Type: *list:string*

   Definition of magnitude types for which amplitudes are to be calculated.
   Default is ``MLv, mb, mB, Mwp``.

.. confval:: amptool.minimumPickWeight

   Type: *double*

   The minimum arrival weight within an origin to compute amplitudes for the associated pick.
   Default is ``0.5``.

.. confval:: amptool.initialAcquisitionTimeout

   Type: *double*

   Unit: *s*

   Timeout in seconds of the first data packet of waveform data acquisition.
   Default is ``30``.

.. confval:: amptool.runningAcquisitionTimeout

   Type: *double*

   Unit: *s*

   Timeout in seconds of any subsequent data packet of waveform data acquisition.
   Default is ``2``.


Command-line
============

.. program:: scamp


Generic
-------

.. option:: -h, --help

   show help message.

.. option:: -V, --version

   show version information

.. option:: --config-file arg

   Use alternative configuration file. When this option is used
   the loading of all stages is disabled. Only the given configuration
   file is parsed and used. To use another name for the configuration
   create a symbolic link of the application or copy it, eg scautopick \-> scautopick2.

.. option:: --plugins arg

   Load given plugins.

.. option:: -D, --daemon

   Run as daemon. This means the application will fork itself and
   doesn't need to be started with \&.

.. option:: --auto-shutdown arg

   Enable\/disable self\-shutdown because a master module shutdown. This only
   works when messaging is enabled and the master module sends a shutdown
   message \(enabled with \-\-start\-stop\-msg for the master module\).

.. option:: --shutdown-master-module arg

   Sets the name of the master\-module used for auto\-shutdown. This
   is the application name of the module actually started. If symlinks
   are used then it is the name of the symlinked application.

.. option:: --shutdown-master-username arg

   Sets the name of the master\-username of the messaging used for
   auto\-shutdown. If \"shutdown\-master\-module\" is given as well this
   parameter is ignored.

.. option:: -x, --expiry time

   Time span in hours after which objects expire.

.. option:: -O, --origin-id publicID

   OriginID to calculate amplitudes for and exit.

.. option:: --dump-records

   Dumps the filtered traces to ASCII when using \-O.


Verbosity
---------

.. option:: --verbosity arg

   Verbosity level [0..4]. 0:quiet, 1:error, 2:warning, 3:info, 4:debug

.. option:: -v, --v

   Increase verbosity level \(may be repeated, eg. \-vv\)

.. option:: -q, --quiet

   Quiet mode: no logging output

.. option:: --component arg

   Limits the logging to a certain component. This option can be given more than once.

.. option:: -s, --syslog

   Use syslog logging back end. The output usually goes to \/var\/lib\/messages.

.. option:: -l, --lockfile arg

   Path to lock file.

.. option:: --console arg

   Send log output to stdout.

.. option:: --debug

   Debug mode: \-\-verbosity\=4 \-\-console\=1

.. option:: --log-file arg

   Use alternative log file.


Messaging
---------

.. option:: -u, --user arg

   Overrides configuration parameter :confval:`connection.username`.

.. option:: -H, --host arg

   Overrides configuration parameter :confval:`connection.server`.

.. option:: -t, --timeout arg

   Overrides configuration parameter :confval:`connection.timeout`.

.. option:: -g, --primary-group arg

   Overrides configuration parameter :confval:`connection.primaryGroup`.

.. option:: -S, --subscribe-group arg

   A group to subscribe to. This option can be given more than once.

.. option:: --content-type arg

   Overrides configuration parameter :confval:`connection.contentType`.

.. option:: --start-stop-msg arg

   Sets sending of a start\- and a stop message.

.. option:: --test

   Test mode where no messages are sent.


Database
--------

.. option:: --db-driver-list

   List all supported database drivers.

.. option:: -d, --database arg

   The database connection string, format: service:\/\/user:pwd\@host\/database.
   \"service\" is the name of the database driver which can be
   queried with \"\-\-db\-driver\-list\".

.. option:: --config-module arg

   The configmodule to use.

.. option:: --inventory-db arg

   Load the inventory from the given database or file, format: [service:\/\/]location

.. option:: --db-disable

   Do not use the database at all


Records
-------

.. option:: --record-driver-list

   List all supported record stream drivers

.. option:: -I, --record-url arg

   The recordstream source URL, format: [service:\/\/]location[#type].
   \"service\" is the name of the recordstream driver which can be
   queried with \"\-\-record\-driver\-list\". If \"service\"
   is not given \"file:\/\/\" is used.

.. option:: --record-file arg

   Specify a file as record source.

.. option:: --record-type arg

   Specify a type for the records being read.


Input
-----

.. option:: --ep file

   Defines an event parameters XML file to be read and processed. This
   implies offline mode and only processes all origins contained
   in that file. It computes amplitudes for all picks associated
   with an origin and outputs an XML file that additionally
   contains the amplitudes.

.. option:: --reprocess

   Reprocess and update existing amplitudes in combination with \-\-ep.
   Manual amplitudes will be skipped.
   This option can be used, e.g. for reprocessing amplitudes with
   new inventory information. Waveform access is required.


Reprocess
---------

.. option:: --force

   Forces reprocessing of all amplitudes, even manual ones.

.. option:: --start-time time

   

.. option:: --end-time time

   

.. option:: --commit

   Send amplitude updates to the messaging otherwise an XML
   document will be output.

