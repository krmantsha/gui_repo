# Change Log

All notable changes to scanloc will be documented in this file.

## 2021-04-22
### Fixed
- Ignore picks without phase hint, do not crash.

## 2021-01-22
### Added
- In ep playbacks the list of origins in commandline output also shows corresponding event index.
- A warning is issued if the number of buffered origins reaches the configured maximum

### Changed
- Update documentation

## 2020-09-16
### Added
- In ep playbacks the list of origins in commandline output also shows the RMS of the origin.

## 2020-09-14
### Added
- When creating and relocating a new origin the depth type is written to the origin.
  While normally relocated origins receive the depth type "from location", origins
  with fixed depth receive "operator assigned".
- Fix Python3 compatibility of dump_picks and playback_picks. On SeisComP3 systems
  with release jakarta-2018.327.p23 and older generate a link to the
  Python interpreter must be created. The exact version depends on your SeisComP3
  installation. Example:
```
cd $SEISCOMP_ROOT/bin/
version=`ldd $SEISCOMP_ROOT/lib/python/seiscomp3/_Core.so | grep libpython | cut -c 11`
ln -s /usr/bin/python$version seiscomp-python
```

## 2020-09-11
### Added
- scanloc provides the densely sampled travel-time tables iasp91_scanloc.*  based
  on the iasp91 model. The considered velocity model has been added.

## 2020-08-14
### Added
- The dump_picks script only dumped picks for which the corresponding stream was
  found in the inventory. The restriction has been removed and all picks are dumped.
  Use the new option --check-inventory to get the old behaviour.
- The new options --hours and --start in dump_picks set the start time to
  search for picks in alternative ways overreading --time-window:
  --hours: search the given hours back in time from now.
  --start: search with an explicit start time.

## 2020-05-18
### Fixed

- Make sure that the preferred origin has been sent before the origin
  will be removed from cache.

## Changed

- Make parameter `publication.wakeUpInterval` configurable in scconfig
- Set the default back value `publication.intervalTimeSlope` = 0.5 as the missing of
  last origins has been resolved. Compare with changes on 2020-03-26.

## 2020-05-08
### Changed

- Make code compatible with Ubuntu 20.04

## 2020-05-05
### Fixed

- Fixes a problem that was introduced with the last release. If the parameter
 `score.weights.increaseManual` is enabled and the pick evaluation mode is not
 set scanloc crashes.

## 2020-03-27
### Added

- Add configuration parameter `score.weights.increaseManual` to increase the score weight of manual
  picks by a factor of 1.0001. This gives higher priority to manual picks than to automatic ones.
  In case manual and automatic picks co-exist for the same event and could be associated
  manual ones may be preferred if the solution score is otherwise the same.

## 2020-03-26
### Added

- Show the associator and locator configuration in debug output

### Changed

- Set the default value `publication.intervalTimeSlope` = 0 in order not to miss any
  origin.

## 2020-03-06
### Changed

- Provide Python3 support for dump_picks and playback_picks

## 2020-02-26
### Changed

- Improved documentation

## 2020-02-03
### Fixed

- scanloc stops processing after an exception of type `TimeSpan::operator=(): double
  doesn't fit into int`. The exception occured when a travel time table was not
  avaiable for a specific phase type.

## 2019-12-02
### Changed

- Adjusted the documentation of the the S-phase picker

## 2019-11-26
###

- Improved association of P phases

## 2019-10-17
### Fixed

- Corrected control of S-phase association by association.maxSResidual. The parameter
  was not completely considered before.

## 2019-09-16
### Fixed

- Corrected phase association of P phases which was unreliable and mostly
  supported by clustering requiring larger values for maxPickDelay and maxSearchDist.
  Both parameters can now be better optimzed resulting in significant speed up of
  the clustering.
- Optimized check of minScore before publishing origins. Now, more origins are kept
  in the internal buffer for assiciating. As are result more previously unassociated phases
  are now associated.

### Changed

- Replaced the parameter association.minScore by association.minPhase. Now, the number of
  phases is used instead of the score to trigger phase association. Preliminary
  origins with low score can become regular origins when improved by phase association.
- Adjusted the documentation, increased the readability of configuration
  parameters: adjust order and tool tips.

### Added

- When a cluster is found it is relocated and additional phases are added. Unstable
  locations from relocation based on few phases may prevent association. Therefore,
  a second step is added where additional phases are added before relocation.
  The solutions are compared based on the score. The best solution is considered.
- Added association.maxPResidual and association.maxSResidual to control association
  of picks from P and S phases. association.maxResidual serves as a final check
  of all station residuals.
- association.minPhase replacing association.minScore. See above.

## 2019-09-04
### Fixed

- Fixed the options -a and -m in the dump_picks script.

## 2019-08-29
### Added

- We have set timesUsed = true for arrivals in preliminary origins. When sending
  preliminary origins the pick times can therefore now be used for relocating the
  preliminary origins from scanloc without modification in scolv or screloc.

## 2019-08-21
### Added

- The default travel time table of SeisComP for LocSAT provide the times in intervals
  of 1 degree epicentral distance. Thus the curvature of the travel-time curve at closer
  distance is not well imaged potentially resulting in wrong locations or missing event
  solutions. Therefore, the LocSAT tables, iasp91_scanloc.*, based on
  the IASP91 model with higher spacial sampling are added. Configuration example
  for associating and locating:
  association.table = iasp91_scanloc
  locator.profile = iasp91_scanloc

## 2019-05-15
### Added

- Do not try to associate picks to origins which were pick times are before origin
  time or after first arrival P and S times at association.maxDistance.
  The association.maxResidual parameter is considered. This implementation
  potentially speeds up the pick association.

### Fixed

- Include the split cluster in the check for the maximum number of cluster.
  Otherwise the total number of origins may be higher that maxOrigins

### Fixed

- Event association check. It could happen that origins were ignored by
  the preferred origin score check causing more load.

## 2019-04-17
### Fixed

- Segfault caused by missing null pointer check

## 2019-04-10
### Changed

- Code cleanup

## 2019-03-06
### Changed

- Adjust output when using the parameter ``--cluster-search-log-file``. Consider also
  invalid clusters.

## 2019-03-06
### Added

- Out the lower limit of the recommended maxPickDelay parameter when running
  scanloc with --cluster-search-log-file. The value can be considered for
  tuning the cluster search.

## 2019-02-28
### Changed

- Do not trigger cluster search if the new pick will not be used.

## 2019-02-27
### Added

- new command line option ``author`` to dump_picks script. With
  that option it is possible to filter the result pick set additionally
  by author.

## 2019-02-01
### Added

- new command line option ``--cluster-search-log-file``. Location of
  the cluster search log file used to store additional information e.g.
  the found clusters and split clusters.

## 2019-01-21
### Added

- new config option ``clusterSearch.regionFilter``. With this option
  enabled scanloc takes only picks for the cluster search into account
  those sensor locations are inside the defined region. The region is
  defined by latitude, longitude and a radius in km. By default the
  region filter is disabled.

## 2019-01-15
### Fixed

- scanloc locator bug. In case of the initial relocation attempt fails
  the algorithm tries to relocate the origin by selecting the first pick.
  This stage of the relocation process always failed.

## 2018-09-10
### Added

- Add the documentation of the parameters association.maxDist and association.stationConfig
  Both parameters control the expicentral distances within which stations
  can be considered for providing picks to association.

## 2018-07-09
### Changed

- When reading a station configuration file trailing spaces and line breaks
  are removed.

## 2018-06-11
### Changed

- When assocating P picks scanloc checks if the corresponding station location
  already contributes a P pick on the same location and does not accept
  more picks on the same location. Before the change, the test was restricted
  to the streamID. However, other picker modules or operators may pick on
  other streams. Therefore, the locationID instead of the streamID
  is tested.

## 2018-04-17
### Added

- new config option ``locator.fixDepth``. Scanloc relocates origins in
several stages. With this option enabled the relocation process forces the
depth to default value in case of all previous relocation attempts fail.

## 2018-04-05
### Added

- In playback mode (--ep option), the timing of scanloc origins is obscured
  since usually many more origins than in real time are available within
  short time intervals. Therefore the publication parameters are now automatically
  set to zero and the available origins are published immediately as soon as
  they are available. Otherwise origins may be lost.

## 2018-04-03
### Fixed

- Optimzed distance calculation in cluster search. Re-tuning of the cluster
  search may significantly increase the performance.

## 2018-03-15
### Fixed

- The parameter association.maxDist is given in units of km but it
  was compared with epicentral distance in degree. The conflict is fixed
  and the parameter is now used consistently in units of km.

## 2018-02-01
### Added

- mark core points in cluster results

## 2018-01-31
### Added

- new config option ``clusterSearch.checkOrigins``. In case of a
cluster contains picks with the same stream ID the cluster is split
into combinations. For each combination scanloc creates an origin which
might not fulfill the cluster search criteria anymore. Enable this config
option to skip these origins. This feature is disabled by default.

## 2018-01-19
### Changed

- The S-AIC picker outputs more debug information with respect to
  processing. This only affects the saic plugin. The plugin version
  was increased to 0.5. In particular, the log prefix ``[S-AIC]``
  was removed and the log component was changed from ``SAICPicker``
  to ``S-AIC``. If component logging is enabled in any SC3 application,
  then this component will be used as log prefix.

## 2018-01-15
### Added

- more unit tests used for internal package build only

## 2017-11-15
### Added

- added ``--db-disable`` flag to disable database usage

## 2017-09-25
### Fixed

- bug in station conf reading

## 2017-09-06
### Fixed

- cluster search

## 2017-09-04
### Fixed

- bug in close pick detection

## 2017-08-28
### Changed

- improve cluster search performance

## 2017-08-08
### Fixed

- ignorePicks config option. Floating point numbers were not handled properly.

## 2017-07-03
### Fixed

- enhance debug output

## 2017-06-28
### Fixed

- avoid duplicates in cluster search

## 2017-06-20
### Fixed

- flush origin outbox on shutdown

## 2017-06-15
### Fixed

- cluster search reference time calculation. Instead of using the pick with the latest pick time the algorithm used
  always the first pick as cluster reference time.

## 2017-06-09
### Fixed

- cluster search

## 2017-05-15
### Added

- scautoloc station conf support

## 2017-03-22
### Added

- Added object flow to soh log

## 2017-03-20
### Fixed

- Fixed station epoch cache lookup

## 2017-03-12
### Added

- Association of phases with zero weight (extended feature requiring specific license)

## 2017-03-09
### Fixed

- message group handling.

## 2017-02-27
### Added

- default values for options in dump_picks
- add amplitudes to dump_picks and playback_picks

## 2017-02-24
### Added

- playback_picks support for different pipelines

## 2017-02-20
### Removed

- region check and rect filter

## 2017-02-16
### Added

- configurable locator interface and traveltime table

## 2017-02-16
### Fixed

- locator-list command line option

## 2017-02-09
### Added

- support to list registered locators

## 2017-01-12
### Removed

- removed region and rect filter from xml description and documentation.
This filter will be removed in the near future.

## 2016-12-16
### Fixed

- region filter test

## 2016-06-31
### Added

- new config option clusterSearch.regions which can be used to specify
non-rectangular region filters

## 2016-06-08
### Fixed

- sending of origins in offline mode

## 2016-03-10
### Fixed

- Support association of manual S picks with no reference P pick.

## 2016-03-10
### Fixed

- Use database even for ``--ep`` to read inventory unless ``--inventory-db``

## 2016-03-09
### Added

- new config option clusterSearch.maxPickDelay which can be used to specify
  the maximum difference between pick times and first pick time taken into
  account by the clustersearch. By default all picks are taken into account.

## 2016-01-07
### Added

- Remove sorted picks with too large residual, starting with picks with
  largest residual, relocate and evaluate residuals after each removal

## 2015-12-22
### Fixes

- Use correct distance calculation on sphere

## 2015-12-18
### Fixed

- dump_picks uses correct column names if a prefix is configured, e.g.
  with PostgreSQL

## 2015-12-01
### Fixed

- Reject origins with depths greater than ignore depth

### Added

- check for outlier arrivals one by one and relocated after every removal
- repeat outlier arrival check until remainders are kept
- check depth and score after outlier removal

## 2015-08-25
### Added

- Offline and online processing examples to documentation

## 2015-07-10
### Added

- Fixed cluster search origin check. Limits the number of origins to the configured threshold.

## 2015-05-26
### Added

- Offline processing of events.

## 2015-04-23
### Fixed

- Fixed crash when pick could not been loaded from database

## 2015-03-30
### Fixed

- Incoming origins will be checked for double assigned picks

## 2015-02-24
### Added

- New config option ``clusterSearch.maxOrigins``
