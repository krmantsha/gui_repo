# Sets the logging level between 1 and 4 where 1=ERROR, 2=WARNING, 3=INFO and
# 4=DEBUG.
logging.level = 2

# Defines the primary group of a module. This is the name of the group where a
# module sends its messages to if the target group is not explicitely given in
# the send call.
connection.primaryGroup = LOCATION

# Defines a list of message groups to subscribe to. The default is usually
# given by the application and does not need to be changed.
connection.subscriptions = PICK, LOCATION

# Default used for locating.
defaultDepth = 5.0

# Depths larger than ignoreDepth will be ignored.
ignoreDepth = 650.0

# Maximum allowed overall residual.
maxRMS = 1.5

# Score to be reached to send origin.
minScore = 6

# Time to keep picks in the internal buffer. Time comparison is based on the
# pick times. In non-real time playbacks the time to keep picks is usually
# compressed.
buffer.pickKeep = 180.0

# Time to keep origins in the internal buffer. Time comparison is based on the
# origin times. In non-real time playbacks the time to keep orgins is usually
# compressed.
buffer.originKeep = 180.0

# Maximum allowed difference between P picks and cluster reference time (latest
# pick time). Optimum values can be derived from travel times.The cluster
# search ignores all picks which exceed the value. Using "-1" enables all picks
# regardless of the delay.
clusterSearch.maxPickDelay = -1.0

# Minimum number of core points (P picks) to form a cluster.
clusterSearch.minSize = 4

# Average velocity used for distance calculation.
clusterSearch.averageVelocity = 7

# Maximum allowed distance over all core points and maximum allowed distance
# for neighborhood search. Both account for traveltime difference,
# inter-station distance and the configured averageVelocity.
clusterSearch.maxSearchDist = 60

# Maximum allowed origins derived from cluster search. Set this option to zero
# to disable the cluster search completly.
clusterSearch.maxOrigins = 128

# Send origins based on cluster search as preliminary origins if the location
# fails. Otherwise those origins are ignored. Consider activating
# "checkOrigins".
clusterSearch.preliminary = false

# Check, if derived origins fulfill the cluster search criteria anymore.
# Activating this option may lower the number of events and suppress fake
# events.
clusterSearch.checkOrigins = false

# New clusters are formed when new picks arrive and previous clusters have
# already a pick with the same stream ID as the new pick. Use this option to
# ignore new picks with the given time difference to cluster picks with the same
# stream ID.
clusterSearch.ignorePickTimeDifference = 0.0

# Cluster only picks which sensor locations are inside the defined region. The
# region is defined by latitude, longitude and a radius in km. By default the
# region filter is disabled.
clusterSearch.regionFilter = ""

# Number picks in cluster origin to be reached for starting to associate more P
# nd S picks.
association.minPhase = 4

# Maximum epicentral distance to associate P and S picks.
association.maxDist = 1000.0

# The station configuration file contains lines consisting of network code,
# station code, weight (0 or 1) and maximum association distance given in
# degree. The maximum association distance is the distance in degrees from the
# origin up to which this station may contribute to a new origin. This
# parameter overrides the global parameter association.maxDist. If this
# distance is 180 deg, this station may contribute to new origins world-wide.
# However, if the distance is only 10 degree, the range of this station is
# limited. This is a helpful setting in case of mediocre stations in a region
# where there are numerous good and reliable stations nearby. The station will
# then not pose a risk for locations generated outside the maximum association
# distance. The last item found in the list overrules previous ones. Network
# and station codes may be wildcards (*) for convenience. E.g.:
# * * 1 10
# GE * 1 180
association.stationConfig = ""

# Maximum allowed difference between measured and predicted arrival times for
# associating P phases to origin. Larger values allow significant correction of
# initial locations.
association.maxPResidual = 4.0

# Maximum allowed difference between measured and predicted arrival time for
# associating S phases to origins. Larger values allow significant correction
# of initial locations.
association.maxSResidual = 4.0

# Maximum allowed time residuals of picks after association and relocation.
# Picks will be removed at exceedance.
association.maxResidual = 2.0

# Type of traveltime tables for phase association. May be different from
# locator. Use e.g. libtau or LOCSAT.
association.tableType = LOCSAT

# Name of traveltime table used for phase association. May be different from
# locator profile. Using a different table/profile may result in increased
# runtime.
association.table = iasp91

# This parameter is only used in conjunction with
# eventAssociation.maximumMatchingArrivalTimeDiff. If a station has multiple
# associated arrivals for a particular event, this flag defines if the time
# distance of a new pick to all arrivals must be within
# eventAssociation.maximumMatchingArrivalTimeDiff or if one matching arrival is
# enough.
eventAssociation.compareAllArrivalTimes = false

# Minimum number of matching picks between two origins to be associated to the
# same event.
eventAssociation.minMatchingArrivals = 3

# If this time window in seconds is negative, pickIDs are compared to find
# matching arrivals. A non negative value (including 0) compares pick times
# regardless of the pickID. Pass: |pick1.time - pick2.time| <= threshold
eventAssociation.maxMatchingArrivalTimeDiff = -1

# Allowed location difference between an incoming origin compared with
# preferred origins to get associated.
eventAssociation.maxDist = 500.0

# Associates an origin with an existing event if the origin time differs not
# more than 60 seconds unless the minimumMatchingArrivals criteria matches.
eventAssociation.maxTimeSpan = 60.0

# The locator type to be used.
locator.type = LOCSAT

# The locator profile to be used. Using a different profile/table for locating
# and associating may result in increased runtime.
locator.profile = iasp91

# If enabled the locator fixes the depth to the configured default value
# "defaultDepth" in case that all previous attempts to relocate fail. This
# option may result in many more origins. It prevents "ignoreDepth" from beeing
# effective if "defaultDepth" < "ignoreDepth".
locator.fixDepth = false

# Defines the weight of p arrivals for scoring
score.weights.p = 1.0

# Defines the weight of p arrivals with a weight of zero for scoring
score.weights.p0 = 0.5

# Defines the weight of s arrivals for scoring
score.weights.s = 2.0

# Defines the weight of s arrivals with a weight of zero for scoring
score.weights.s0 = 0.5

# Defines the weight of the depth for scoring
score.weights.depth = 1.0

# Defines the weight of the residual for scoring
score.weights.residual = 1.0

# Increase the weight for manual picks by a factor of 1.001. This gives
# preference to manual picks in case automatic ones co-exist for the same
# station.
score.weights.increaseManual = false

# Parameter "a" in the equation t = aN + b.
# t: time interval between sending updates of an origin
# N: arrival count of the origin
# Increasing the value reduces the amount of sent origins. With the option --ep
# (playback mode) this value is set to 0.
publication.intervalTimeSlope = 0.5

# Parameter "b" in the equation t = aN + b.
# t: time interval between sending updates of an origin
# N: arrival count of the origin
# Increasing the value reduces the amount of sent origins. With the option --ep
# (playback mode) this value is set to 0.
publication.intervalTimeIntercept = 0.0

# Integer interval to check the origin buffer for sending origins if no other
# origins have been created.
# Reducing the value may be required in EEW. This increases the load on scanloc
# but allows to send origins more rapidly.
publication.wakeUpInterval = 5

# Score to be reached to start pick association process.
association.minScore = 5
