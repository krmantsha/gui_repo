# Ignore external origins received from messaging or from XML playback.
# Default: Accept external origins from messaging and associate more phases.
ignoreOrigins = false

# Default used for locating.
defaultDepth = 2

# Depths larger than ignoreDepth will be ignored.
ignoreDepth = 50.0

# Maximum allowed overall residual.
maxRMS = 1.5

# Score to be reached to send origin.
minScore = 6

# Time to keep picks in the internal buffer. Time comparison is based on the
# pick times. In non-real time playbacks the time to keep picks is usually
# compressed.
buffer.pickKeep = 180.0

# Ignore manual external origins received from messaging or from XML playback.
# The parameter "ignoreOrigins" must be inactive for this option to be
# effective.
buffer.ignoreManualOrigins = true

# Time to keep origins in the internal buffer. Time comparison is based on the
# origin times. In non-real time playbacks the time to keep orgins is usually
# compressed.
buffer.originKeep = 180.0

# Minimum number of core points (P picks) to form a cluster.
clusterSearch.minSize = 4

# Maximum allowed difference between P picks and cluster reference time (latest
# pick time). Optimum values can be derived from travel times.The cluster
# search ignores all picks which exceed the value. Using "-1" enables all picks
# regardless of the delay.
clusterSearch.maxPickDelay = 30

# Mode to set the cluster reference time. Read the documentation for the
# details. Available modes:
# LastPick: The pick time of the last incoming P pick is the cluster reference
# time.
# MaxPickDelay: Setting the cluster reference time is delayed until
# clusterSearch.minSize picks are available.
clusterSearch.referenceTimeMode = MaxPickDelay

# Average velocity used for distance calculation.
clusterSearch.averageVelocity = 5

# Maximum allowed distance over all core points and maximum allowed distance
# for neighborhood search. Both account for traveltime difference,
# inter-station distance and the configured averageVelocity.
clusterSearch.maxSearchDist = 15

# Maximum allowed origins derived from cluster search. Set this option to zero
# to disable the cluster search completly.
clusterSearch.maxOrigins = 128

# Send origins based on cluster search as preliminary origins if the location
# fails. Otherwise those origins are ignored. Consider activating
# "checkOrigins".
clusterSearch.preliminary = false

# Check, if derived origins fulfill the cluster search criteria anymore.
# Activating this option may lower the number of events and suppress fake
# events.
clusterSearch.checkOrigins = true

# Number picks in cluster origin to be reached for starting to associate more P
# nd S picks.
association.minPhase = 4

# Maximum epicentral distance to associate P and S picks.
association.maxDist = 100

# Maximum allowed difference between measured and predicted arrival times for
# associating P phases to origin. Larger values allow significant correction of
# initial locations.
association.maxPResidual = 1

# Maximum allowed difference between measured and predicted arrival time for
# associating S phases to origins. Larger values allow significant correction
# of initial locations.
association.maxSResidual = 1

# Maximum allowed time residuals of picks after association and relocation.
# Picks will be removed at exceedance starting with largest residual and
# origins will be relocated.
association.maxResidual = 0.8

# Type of traveltime tables for phase association. May be different from
# locator. Use e.g. libtau or LOCSAT.
association.tableType = LOCSAT

# Name of traveltime table used for phase association. May be different from
# locator profile. Using a different table/profile may result in increased
# runtime.
association.table = iasp91_scanloc

# The locator type to be used. Use e.g. LOCSAT or Hypo71.
locator.type = LOCSAT

# The locator profile to be used. Using a different profile/table for locating
# and associating may result in increased runtime.
locator.profile = iasp91_scanloc

# If enabled, the locator fixes the depth to the configured default value
# "defaultDepth" in case that all previous attempts to relocate fail. This
# option may result in many more origins. It prevents "ignoreDepth" from beeing
# effective if "defaultDepth" < "ignoreDepth".
locator.fixDepth = true

# This parameter is only used in conjunction with
# eventAssociation.maximumMatchingArrivalTimeDiff. If a station has multiple
# associated arrivals for a particular event, this flag defines if the time
# distance of a new pick to all arrivals must be within
# eventAssociation.maximumMatchingArrivalTimeDiff or if one matching arrival is
# enough.
eventAssociation.compareAllArrivalTimes = true

# Minimum number of matching picks between two origins to be associated to the
# same event.
eventAssociation.minMatchingArrivals = 3

# If this time window in seconds is negative, pickIDs are compared to find
# matching arrivals. A non negative value (including 0) compares pick times
# regardless of the pickID. Pass: |pick1.time - pick2.time| <= threshold.
eventAssociation.maxMatchingArrivalTimeDiff = 1

# Allowed location difference between an incoming origin compared with
# preferred origins to get associated.
eventAssociation.maxDist = 20.0

# Associates an origin with an existing event if the origin time differs not
# more than 60 seconds unless the minimumMatchingArrivals criteria matches.
eventAssociation.maxTimeSpan = 10.0

# Increase the weight for manual picks by a factor of 1.001. This gives
# preference to manual picks in case automatic ones co-exist for the same
# station.
score.weights.increaseManual = true

# Parameter "a" in the equation t = aN + b.
# t: time interval between sending updates of an origin
# N: arrival count of the origin
# Increasing the value reduces the amount of sent origins. With the option --ep
# (playback mode) this value is set to 0.
publication.intervalTimeSlope = 0.5

# Parameter "b" in the equation t = aN + b.
# t: time interval between sending updates of an origin
# N: arrival count of the origin
# Increasing the value reduces the amount of sent origins. With the option --ep
# (playback mode) this value is set to 0.
publication.intervalTimeIntercept = 0.0

# Integer interval to check the origin buffer for sending origins if no other
# origins have been created.
# Reducing the value may be required in EEW: it increases the load on scanloc
# but allows to send origins more rapidly.
publication.wakeUpInterval = 5
