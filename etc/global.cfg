# Sets the datacenter ID which is primarily used by Arclink and its tools.
# Should not contain spaces.
datacenterID = cgs

# Defines the agency ID used to set creationInfo.agencyID in data model
# objects. Should not contain spaces.
agencyID = cgs

# Organization name used mainly by ArcLink and SeedLink.
organization = cgs

# Defines a list of modules loaded at startup.
plugins = mlh, mlr, md, hypo71, locnll

# Defines the database connection. If no database is configured (which is the
# default) and a messaging connection is available the application will receive
# the parameters after the connection is established. Override these values
# only if you know what you are doing.
# The format is: service://user:pwd@host/database. "service" is the name of the
# database driver which can be queried with "--db-driver-list".
# Note that this parameter overrides 'database.type' and 'database.parameters'
# if present.
database = mysql:/sysop:sysop@localhost/seiscomp

recordstream = "combined://slink/localhost:18000;sdsarchive//home/data/archive"

# Defines a list of core modules loaded at startup.
core.plugins = dbmysql

# A regular expression of all clients that should handle a command message
# usually send to the GUI messaging group. Currently this flag is only used by
# GUI applications to set an artificial origin and to tell other clients to
# show this origin. To let all connected clients handle the command, ".*$" can
# be used.
commands.target = ".*$"

# Specified the location and the structure of the map tiles to be used. This
# path is composed of zero or more directives and must include at least one
# conversion specification which starts with is introduced by the character %
# followed by a conversion specifier. Valid specifiers are s (replaced by tile
# ID), l (tile level), c (tile column) and r (tile row). An example for using
# the OpenStreetMap file structure is /path/to/maps/%l/%c/%r.png.
map.location = /home/data/maps/osmaps/%l/%c/%r.png

# Projection of the map tiles. Supported formats are: rectangular and mercator.
map.format = mercator

# Temporary file used by Hypo71 to store calculation logs.
hypo71.logFile = /home/rt/seiscomp3/share/hypo71/HYPO71.LOG

# Temporary file to write Hypo71 input data to.
hypo71.inputFile = /home/rt/seiscomp3/share/hypo71/HYPO71.INP

# Temporary output file to read Hypo71 location data from.
hypo71.outputFile = /home/rt/seiscomp3/share/hypo71/HYPO71.PRT

# Hypo71 default profile. If no custom profile is specified, this profile will
# be used by the plugin when proceeding to a localization.
hypo71.defaultControlFile = /home/rt/seiscomp3/share/hypo71/default.hypo71.conf

# Bash script executed when calling the Hypo71 locator plugin for locating the
# earthquake.
hypo71.hypo71ScriptFile = /home/rt/seiscomp3/share/hypo71/run.sh

# Hypo71 profile name. Multiples names may be set. They must be separated by
# comma. Each profile can have different velocity or parameters.
hypo71.profiles = gs_default

# Profile's velocity model name.
hypo71.profile.gs_default.earthModelID = gs_default

# Profile's method. It is generally the locator's name (Hypo71).
hypo71.profile.gs_default.methodID = Hypo71PC

# File containing the profile parameters.
hypo71.profile.gs_default.controlFile = /home/rt/seiscomp3/share/hypo71/default.hypo71.conf

#MLh plugin parameters:
#MLh.maxavg = avg
#MLh.ClippingThreshold = 6710886
#MLh plugin parameters:
#MLh.maxavg = avg
MLh.ClippingThreshold = 6710886
module.trunk.MS.MLv.logA0 = "0 -1.3;60 -2.8;400 -4.5;1000 -5.85"
module.trunk.MS.MLv.maxDistanceKm = -1

#MLh.ClippingThreshold = 5872025
#MLh paramers:
module.trunk.global.MLh.params = "100 nomag; 100 0.016 2.0; 700 0.0028 2.42"

#MLv logA0 paramters:
module.trunk.global.MLv.logA0 = "0 -0.6;60 -2.43;400 -3.22;1000 -4.2"
module.trunk.global.MLv.maxDistanceKm = -1
