# Agency ID used to set creationInfo.agencyID in data model objects. Should not
# contain spaces.
agencyID = CGS

# Datacenter ID which is primarily used by Arclink and its tools. Should not
# contain spaces.
datacenterID = CGS

# Organization name used mainly by ArcLink and SeedLink.
organization = CGS

# List of plugins loaded at startup. Separate multiple names by comma. Add
# ${plugins} to consider all previously read values.
plugins = md, hypo71, locnll, mbtiles, mapprojections, saic, spickdbg

# SeisComP applications access waveform data through the RecordStream
# interface. Read the SeisComP documentation for a list of supported services
# and their configuration.
# This parameter configures RecordStream source URL.
# Format: [service://]location[#type]
# "service": The name of the RecordStream implementation. If not given,
# "file://" is implied.
# IMPORTANT: This parameter replaces former RecordStream configurations in
# "recordstream.service" and "recordstream.source" which have been removed.
recordstream = combined://slink/172.16.16.55:18000;fdsnws/172.16.16.55:8080

# Define a list of core modules loaded at startup.
core.plugins = dbmysql

# A regular expression of all clients that should handle a command message
# usually send to the GUI messaging group. Currently this flag is only used by
# GUI applications to set an artificial origin and to tell other clients to
# show this origin. To let all connected clients handle the command, ".*$" can
# be used.
commands.target = ".*$"

# The list of supported model names per interface.
ttt.LOCSAT.tables = za_national, kosh, wrand_2, cerand, wrand_full, wrand_1, iasp91, iasp91_scanloc

# Overrides the calibration function log10(A0) for computing MLv per region.
# See logA0 description in the bindings.
magnitudes.MLv.region.cgs-mlv1.logA0 = "0:-0.35,5:-0.96.86,10:-1.25,15:-1.44,20:-1.58,25:-1.70;30:-1.80,35:-1.89,40:-1.98,45:-2.06,50:-2.13,55:-2.21,60:-2.28"

# Overrides the calibration function log10(A0) for computing MLv per region.
# See logA0 description in the bindings.
magnitudes.MLv.region.world.logA0 = 0:-1.3, 60:-2.8, 100:-3.0, 400:-4.5, 1000:-5.85

# Enable the region or not.
magnitudes.MLv.region.cgs-mlv1.enable = true

# The minimum distance required to compute a magnitude. This settings has no
# effect with e.g. scautopick as there is no information about the source of
# the event to compute the distance. The default value is implementation
# specific.
magnitudes.MLv.region.cgs-mlv1.minDist = 0

# The maximum distance allowed to compute a magnitude. This settings has no
# effect with e.g. scautopick as there is no information about the source of
# the event to compute the distance. The default value is implementation
# specific.
magnitudes.MLv.region.cgs-mlv1.maxDist = 0.6

# The maximum depth allowed to compute a magnitude. This settings has no effect
# with e.g. scautopick as there is no information about the source of the event
# to retrieve the depth. The default value is implementation specific.
magnitudes.MLv.region.cgs-mlv1.maxDepth = 10

# Enable the region or not.
magnitudes.MLv.region.world.enable = true

# Specified the location and the structure of the map tiles to be used. This
# path is composed of zero or more directives and must include at least one
# conversion specification which starts with is introduced by the character %
# followed by a conversion specifier. Valid specifiers are s (replaced by tile
# ID), l (tile level), c (tile column) and r (tile row). An example for using
# the OpenStreetMap file structure is /path/to/maps/%l/%c/%r.png.
map.location = /home/data/maps/world-7.mbtiles

# Projection of the map tiles. Supported formats are: rectangular and mercator.
map.format = mercator

# Used to distinguish tile store implementations provided by plug-ins.
map.type = mbtiles

# SeisComP ships with the rectangular projection built-in. Other projections
# may be provided through plugins.
scheme.map.projection = Mercator

# The precision of depth values.
scheme.precision.depth = 1

# The precision of distance values.
scheme.precision.distance = 1

# The precision of lat/lon values.
scheme.precision.location = 3

# The precision of origin times.
scheme.precision.originTime = 1

# The precision of pick times.
scheme.precision.pickTime = 3

# Precision of RMS values.
scheme.precision.rms = 3

# Precision of uncertainty values, e.g. latitude errors.
scheme.precision.uncertainties = 1

# Display distances in km?
scheme.unit.distanceInKM = true

# Configure the columns of the event list that are visible initially. The first
# column containing the origin time is always visible and cannot be hidden.
# Possible values are:
# Certainty, Type, M, MType, RMS, AzGap, Phases, Lat, Lon, Depth, DType, Stat,
# FM, Origins, Agency, Author, Region, ID.
# Custom columns can be added by eventlist.customColumn.* or
# eventlist.scripts.* parameters.
eventlist.visibleColumns = Type,\
                           M,\
                           MType,\
                           Phases,\
                           Lat,\
                           Lon,\
                           Depth,\
                           Stat,\
                           RMS,\
                           Origins,\
                           FM,\
                           Author,\
                           Agency,\
                           Region,\
                           ID

# Defines a list of available LOCSAT travel-time tables.
LOCSAT.profiles = za_national, kosh, wrand_2, cerand, wrand_full, wrand_1, iasp91, iasp91_scanloc

# Hypo71 profile name. Multiples names may be set. They must be separated by
# comma. Each profile can have different velocity or parameters.
hypo71.profiles = gs_default

# Profile's velocity model name.
hypo71.profile.gs_default.earthModelID = gs_default

# Profile's method. It is generally the locator's name (Hypo71).
hypo71.profile.gs_default.methodID = Hypo71PC

# File containing the profile parameters.
hypo71.profile.gs_default.controlFile = @DATADIR@/hypo71/default.hypo71.conf

# Defines a list of available travel time tables. Each item is a tuple
# separated by a slash with format "[interface]/[model]". Built-in interfaces
# are "LOCSAT" and "libtau". Other interfaces might be added via plugins.
# Please check their documentation for the required interface name.
FixedHypocenter.profiles = LOCSAT/kosh,\
                           LOCSAT/wrand_2,\
                           LOCSAT/cerand,\
                           LOCSAT/wrand_full,\
                           LOCSAT/wrand_1,\
                           LOCSAT/iasp91,\
                           LOCSAT/iasp91_scanloc

# Overrides the calibration function log10(A0) for computing MLv per region.
# See logA0 description in the bindings.
#magnitudes.MLv.region.cgs-mlv1.logA0 = 0-0.85;5-1.46;10-1.75;15-1.94;20-2.08;25-2.20;30-2.30;35-2.39;40-2.48;45-2.56;50-2.63;55-2.71;60-2.78
#magnitudes.MLv.region.cgs-mlv1.logA0 = "0:-0.85,5:-1.46,10:-1.75,15:-1.94,20:-2.08,25:-2.20;30:-2.30,35:-2.39,40:-2.48,45:-2.56,50:-2.63,55:-2.71,60:-2.78"
#magnitudes.MLv.region.cgs-mlv1.logA0 = "0:-0.75,5:-0.1.36,10:-1.55,15:-1.84,20:-1.98,25:-2.1;30:-2.2,35:-2.29,40:-2.38,45:-2.46,50:-2.53,55:-2.61,60:-2.68"
#magnitudes.MLv.region.cgs-mlv1.logA0 = "0:-1.25,5:-0.1.86,10:-2.05,15:-2.34,20:-2.48,25:-2.6;30:-2.7,35:-2.79,40:-2.88,45:-2.96,50:-3.03,55:-3.11,60:-3.18"
#magnitudes.MLv.region.cgs-mlv1.logA0 = "0:-0.35,5:-0.96.86,10:-1.25,15:-1.44,20:-1.58,25:-1.70;30:-1.80,35:-1.89,40:-1.98,45:-2.06,50:-2.13,55:-2.21,60:-2.28"
magnitudes.MLv.logA0 = 0:-0.85,\
                       5:-1.46,\
                       10:-1.75,\
                       15:-1.94,\
                       20:-2.08,\
                       25:-2.20,\
                       30:-2.30,\
                       35:-2.39,\
                       40:-2.48,\
                       45:-2.56,\
                       50:-2.63,\
                       55:-2.71,\
                       60:-2.78,\
                       100:-3.0,\
                       400:-4.5,\
                       1000:-5.85

# Path to a BNA file with one or more polygons defining geographic regions.
# Each region allows further magnitude parametrization. The order of
# polygons/regions matters. The list is tested from front to back and the first
# hit wins. Magnitude-region profiles refer to the polygons by the name of the
# profile. The special name "world" must not be present in the BNA file.
magnitudes.MLv.regions = @DATADIR@/spatial/vector/regions/magRegions/cgs-mlv.bna

#MLh plugin parameters:
#MLh.maxavg = avg
#MLh.ClippingThreshold = 6710886
#MLh plugin parameters:
#MLh.maxavg = avg
#MLh.ClippingThreshold = 6710886
#module.trunk.MS.MLv.logA0 = "0 -1.3;60 -2.8;400 -4.5;1000 -5.85"
#module.trunk.MS.MLv.maxDistanceKm = -1
#MLh.ClippingThreshold = 5872025
#MLh paramers:
module.trunk.global.magnitudes.MLh.params = "100 nomag; 100 0.016 2.0; 700 0.0028 2.42"
