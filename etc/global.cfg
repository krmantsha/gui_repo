# Agency ID used to set creationInfo.agencyID in data model objects. Should not
# contain spaces ..
agencyID = CGS

# Datacenter ID which is primarily used by Arclink and its tools. Should not
# contain spaces.
datacenterID = CGS

# Organization name used mainly by ArcLink and SeedLink.
organization = CGS

# List of plugins loaded at startup. Separate multiple names by comma. Add
# ${plugins} to consider all previously read values.
plugins = ${plugins}, hypo71, locnll, mbtiles, mapprojections, saic, spickdbg

# SeisComP applications access waveform data through the RecordStream
# interface. Read the SeisComP documentation for a list of supported services
# and their configuration.
# This parameter configures RecordStream source URL.
# Format: [service://]location[#type]
# "service": The name of the RecordStream implementation. If not given,
# "file://" is implied.
# IMPORTANT: This parameter replaces former RecordStream configurations in
# "recordstream.service" and "recordstream.source" which have been removed.
recordstream = combined://slink/172.16.16.55:18000;fdsnws/172.16.16.55:8080

# Define the URL of the messaging server to connect to. URL format is
# [scheme://]host[:port][/queue]. Default scheme: scmp, default port: 18180,
# default queue: production. Examples:
# All default: localhost
# Specific host: scmp://10.0.1.4:18180/production
# Specific host and SSL encryption: scmps://10.0.1.4:18180/production
connection.server = 172.16.16.55/production

# Define the username to be used. The length is maybe limited by the messaging
# system used. By default, the module name (name of the executable) is used but
# sometimes it exceeds the 10 character limit and access is denied. To prevent
# errors set a different username. An empty username will let the system to
# generate one.
connection.username = $USER

# Define a list of core modules loaded at startup.
core.plugins = dbmysql

# A regular expression of all clients that should handle a command message
# usually send to the GUI messaging group. Currently this flag is only used by
# GUI applications to set an artificial origin and to tell other clients to
# show this origin. To let all connected clients handle the command, ".*$" can
# be used.
commands.target = ".*$"

# The list of supported model names per interface.
ttt.LOCSAT.tables = za_national, kosh, wrand_2, cerand, wrand_full, wrand_1, iasp91, iasp91_scanloc
amplitudes.ttt.interface = LOCSAT
amplitudes.ttt.model = iasp91

# Path to a geofeature file, e.g. in BNA or GeoJSON format, with one or more
# polygons defining geographic regions. Each region allows further magnitude
# parametrization. The order of polygons/regions matters. The list is tested
# from front to back and the first hit wins. Magnitude-region profiles refer to
# the polygons by the name of the profile. The special name "world" must not be
# present in the geofeature file.
magnitudes.MLv.regionFile = @DATADIR@/spatial/vector/regions/magRegions/cgs-mlv.bna

# Enable the region or not.
magnitudes.MLv.region.cgs-mlv1.enable = true

# The minimum distance required to compute a magnitude. This settings has no
# effect with e.g. scautopick as there is no information about the source of
# the event to compute the distance. The default value is implementation
# specific.
magnitudes.MLv.region.cgs-mlv1.minDist = 0

# The maximum distance allowed to compute a magnitude. This settings has no
# effect with e.g. scautopick as there is no information about the source of
# the event to compute the distance. The default value is implementation
# specific.
magnitudes.MLv.region.cgs-mlv1.maxDist = 0.6

# The maximum depth allowed to compute a magnitude. This settings has no effect
# with e.g. scautopick as there is no information about the source of the event
# to retrieve the depth. The default value is implementation specific.
magnitudes.MLv.region.cgs-mlv1.maxDepth = 10

# Define how the region check is performed to accept a source receiver pair for
# further processing. Allowed values are:
# source: Only the source/origin must be within the region.
# source-receiver: Both source/origin and receiver/station must be within the
# region.
# raypath: The entire path between source/origin and receiver/station must be
# withing the region.
magnitudes.MLv.region.cgs-mlv1.check = source-receiver

# Overrides the calibration function log10(A0) for computing MLv per region.
# See logA0 description in the bindings.
magnitudes.MLv.region.cgs-mlv1.logA0 = 0:-0.35,\
                                       10:-1.25,\
                                       15:-1.44,\
                                       20:-1.58,\
                                       25:-1.70,\
                                       30:-1.80,\
                                       35:-1.89,\
                                       40:-1.98,\
                                       45:-2.06,\
                                       50:-2.13,\
                                       55:-2.21,\
                                       60:-2.28

# Enable the region or not.
magnitudes.MLv.region.world.enable = true

# Overrides the calibration function log10(A0) for computing MLv per region.
# See logA0 description in the bindings.
magnitudes.MLv.region.world.logA0 = 0:-0.64,\
                                    5:-1.45,\
                                    10:-1.79,\
                                    15:-2.00,\
                                    20:-2.15,\
                                    25:-2.26,\
                                    30:-2.36,\
                                    35:-2.44,\
                                    40:-2.50,\
                                    45:-2.57,\
                                    50:-2.62,\
                                    60:-2.72,\
                                    70:-2.80,\
                                    80:-2.88,\
                                    90:-2.94,\
                                    100:-3.00,\
                                    120:-3.10,\
                                    140:-3.19,\
                                    160:-3.27,\
                                    180:-3.34,\
                                    200:-3.41,\
                                    220:-3.47,\
                                    240:-3.53,\
                                    260:-3.58,\
                                    280:-3.63,\
                                    300:-3.67,\
                                    350:-3.78,\
                                    400:-3.88,\
                                    450:-3.97,\
                                    500:-4.06,\
                                    550:-4.13,\
                                    600:-4.21,\
                                    650:-4.28,\
                                    700:-4.35,\
                                    750:-4.41,\
                                    800:-4.48,\
                                    900:-4.60,\
                                    1000:-4.72

# Defines a list of available travel time tables. Each item is a tuple
# separated by a slash with format "[interface]/[model]". Built-in interfaces
# are "LOCSAT" and "libtau". Other interfaces might be added via plugins.
# Please check their documentation for the required interface name.
FixedHypocenter.profiles = LOCSAT/za_national,\
                           LOCSAT/kosh,\
                           LOCSAT/wrand_2,\
                           LOCSAT/cerand,\
                           LOCSAT/wrand_full,\
                           LOCSAT/wrand_1,\
                           LOCSAT/iasp91,\
                           LOCSAT/iasp91_scanloc

# Specified the location and the structure of the map tiles to be used. This
# path is composed of zero or more directives and must include at least one
# conversion specification which starts with is introduced by the character %
# followed by a conversion specifier. Valid specifiers are s (replaced by tile
# ID), l (tile level), c (tile column) and r (tile row). An example for using
# the OpenStreetMap file structure is /path/to/maps/%l/%c/%r.png.
map.location = /home/data/maps/world-7.mbtiles

# Projection of the map tiles. Supported formats are: rectangular and mercator.
map.format = mercator

# Used to distinguish tile store implementations provided by plug-ins.
map.type = mbtiles

# SeisComP ships with the rectangular projection built-in. Other projections
# may be provided through plugins.
scheme.map.projection = Mercator

# The color of automatic picks.
scheme.colors.picks.automatic = orange

# The precision of depth values.
scheme.precision.depth = 1

# The precision of distance values.
scheme.precision.distance = 1

# The precision of lat/lon values.
scheme.precision.location = 3

# The precision of origin times.
scheme.precision.originTime = 1

# The precision of pick times.
scheme.precision.pickTime = 3

# Precision of RMS values.
scheme.precision.rms = 3

# Precision of uncertainty values, e.g. latitude errors.
scheme.precision.uncertainties = 1

# Display distances in km?
scheme.unit.distanceInKM = true

# Configure the columns of the event list that are visible initially. The first
# column containing the origin time is always visible and cannot be hidden.
# Possible values are:
# Certainty, Type, M, MType, RMS, AzGap, Phases, Lat, Lon, Depth, DType, Stat,
# FM, Origins, Agency, Author, Region, ID.
# Custom columns can be added by eventlist.customColumn.* or
# eventlist.scripts.* parameters.
eventlist.visibleColumns = Type,\
                           M,\
                           MType,\
                           Phases,\
                           Lat,\
                           Lon,\
                           Depth,\
                           Stat,\
                           RMS,\
                           Origins,\
                           FM,\
                           Author,\
                           Agency,\
                           Region,\
                           ID

# Hypo71 profile name. Multiples names may be set. They must be separated by
# comma. Each profile can have different velocity or parameters.
hypo71.profiles = gs_default

# Profile's velocity model name.
hypo71.profile.gs_default.earthModelID = gs_default

# Profile's method. It is generally the locator's name (Hypo71).
hypo71.profile.gs_default.methodID = Hypo71PC

# File containing the profile parameters.
hypo71.profile.gs_default.controlFile = @DATADIR@/hypo71/default.hypo71.conf

# Defines a list of available LOCSAT travel-time tables.
LOCSAT.profiles = za_national, kosh, wrand_2, cerand, wrand_full, wrand_1, iasp91, iasp91_scanloc
module.trunk.global.amplitudes.ML.minSNR = 2
module.trunk.global.amplitudes.ML.signalBegin = 0

# ML
module.trunk.global.amplitudes.ML.signalEnd = tt(Rg)
module.trunk.global.amplitudes.MLc.minSNR = 2
module.trunk.global.amplitudes.MLc.signalBegin = 0

# MLc
module.trunk.global.amplitudes.MLc.signalEnd = tt(Rg)
module.trunk.global.amplitudes.MLv.minSNR = 2
module.trunk.global.amplitudes.MLv.signalBegin = 0

# MLv
module.trunk.global.amplitudes.MLv.signalEnd = tt(Rg)
