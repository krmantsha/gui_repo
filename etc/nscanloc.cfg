connection.primaryGroup = NLOCATION
connection.subscriptions = NPICK,NLOCATION


# Default source depth used for locating origins.
defaultDepth = 5.0

# Maximum depth of an origin to be sent.
ignoreDepth = 250.0

# Maximum allowed overall residual of an origin to be sent.
maxRMS = 3.

# Minimum score of an origin to be sent.
minScore = 6

# Time to keep picks. Time comparison is based on the pick times. In non-real
# time playbacks the time to keep picks is usually compressed.
buffer.pickKeep = 300

# Time to keep origins. Time comparison is based on the origin times. In
# non-real time playbacks the time to keep orgins is usually compressed.
buffer.originKeep = 300

# Only add external origins from the given authors to the buffer. Separate
# multiple authors by comma. If omitted, no filtering is applied. Manual
# origins are treated regardless of the author as defined by
# "buffer.ignoreManualOrigins".
# The parameter "buffer.ignoreOrigins" must be inactive for this option to be
# effective.
buffer.originAuthorWhiteList = scautoloc@MME-seismic

# Minimum number of core points (picks) to form a cluster.
clusterSearch.minSize = 4

# Maximum allowed difference between considered picks and cluster reference
# time (latest pick time). Optimum values can be derived from travel times.The
# cluster search ignores all picks which exceed the value. Using "-1" enables
# all picks regardless of the delay.
clusterSearch.maxPickDelay = 60

# Cluster only picks which sensor locations are inside the defined region. The
# region is defined by latitude, longitude and a radius in km. By default the
# region filter is disabled.
# Example: 50.1,12.3,20
clusterSearch.regionFilter = ""

# Average velocity used for distance calculation.
clusterSearch.averageVelocity = 7

# Maximum allowed distance over all core points and maximum allowed distance
# for neighborhood search. Both account for traveltime difference,
# inter-station distance and the configured averageVelocity.
clusterSearch.maxSearchDist = 30

# Maximum allowed origins derived from cluster search. Set this option to zero
# to disable the cluster search completly.
clusterSearch.maxOrigins = 128

# Check, if derived origins fulfill the cluster search criteria anymore.
# Activating this option may lower the number of events and suppress fake
# events.
clusterSearch.checkOrigins = true

# Number picks in cluster origin to be reached for starting to associate more P
# nd S picks.
association.minPhase = 3

# Maximum epicentral distance to associate P and S picks.
association.maxDist = 1200.0

# Maximum allowed difference between measured and predicted arrival times for
# associating P phases to origin. Larger values allow significant correction of
# initial locations.
association.maxPResidual = 4

# Maximum allowed difference between measured and predicted arrival time for
# associating S phases to origins. Larger values allow significant correction
# of initial locations.
association.maxSResidual = 6

# Maximum allowed time residuals of picks after association and relocation.
# Picks will be removed at exceedance starting with largest residual and
# origins will be relocated.
association.maxResidual = 2

# Name of traveltime table used for phase association. May be different from
# locator profile. Using a different table/profile may result in increased
# runtime.
association.table = iasp91_scanloc

# The locator type to be used. Use e.g. LOCSAT or Hypo71.
locator.type = LOCSAT

# The locator profile to be used. Using a different profile/table for locating
# and associating may result in increased runtime.
locator.profile = iasp91_scanloc

# If enabled, the locator fixes the depth to the configured default value
# "defaultDepth" in case that all previous attempts to relocate fail. This
# option may result in many more origins. It prevents "ignoreDepth" from beeing
# effective if "defaultDepth" < "ignoreDepth".
locator.fixDepth = true

# This parameter is only used in conjunction with
# eventAssociation.maximumMatchingArrivalTimeDiff. If a station has multiple
# associated arrivals for a particular event, this flag defines if the time
# distance of a new pick to all arrivals must be within
# eventAssociation.maximumMatchingArrivalTimeDiff or if one matching arrival is
# enough.
eventAssociation.compareAllArrivalTimes = true

# Minimum number of matching picks between two origins to be associated to the
# same event.
eventAssociation.minMatchingArrivals = 3

# If this time window in seconds is negative, pickIDs are compared to find
# matching arrivals. A non negative value (including 0) compares pick times
# regardless of the pickID. Pass: |pick1.time - pick2.time| <= threshold.
eventAssociation.maxMatchingArrivalTimeDiff = 3

# Allowed location difference between an incoming origin compared with
# preferred origins to get associated.
eventAssociation.maxDist = 100.0

# Associates an origin with an existing event if the origin time differs not
# more than 60 seconds unless the minimumMatchingArrivals criteria matches.
eventAssociation.maxTimeSpan = 20.0

# Increase the weight for manual picks by a factor of 1.001. This gives
# preference to manual picks in case automatic ones co-exist for the same
# station.
score.weights.increaseManual = true

# By default the algorithm creates a new arrival set when there is already a
# pick with the same stream id assigned. Use this option to ignore surrounding
# picks.
clusterSearch.ignorePicks = 0.0

# Ignore external origins received from messaging or from XML playback.
# Default: Accept external origins from messaging and associate more phases.
ignoreOrigins = false

